{"version":3,"sources":["guacamole-common.js"],"names":["Guacamole","ArrayBufferReader","stream","guac_reader","this","onblob","data","binary","window","atob","arrayBuffer","ArrayBuffer","length","bufferView","Uint8Array","i","charCodeAt","ondata","onend","ArrayBufferWriter","guac_writer","__send_blob","bytes","byteLength","String","fromCharCode","sendBlob","btoa","onack","status","blobLength","DEFAULT_BLOB_LENGTH","sendData","offset","subarray","sendEnd","AudioContextFactory","singleton","getAudioContext","AudioContext","webkitAudioContext","e","AudioPlayer","sync","isSupportedType","mimetype","RawAudioPlayer","getSupportedTypes","getInstance","format","RawAudioFormat","parse","context","nextPacketTime","currentTime","reader","SampleArray","bytesPerSample","Int8Array","Int16Array","maxSampleValue","packetQueue","shiftAudioPacket","packets","totalLength","forEach","packet","joined","set","joinAudioPackets","minValue","Number","MAX_VALUE","optimalSplitLength","samples","Math","floor","channels","minSplitSamples","rate","max","totalValue","channel","abs","buffer","slice","splitAudioPacket","shift","push","pushAudioPacket","packetTime","source","createBufferSource","connect","destination","start","noteOn","audioBuffer","createBuffer","audioData","getChannelData","toAudioBuffer","now","min","prototype","AudioRecorder","onclose","onerror","RawAudioRecorder","recorder","navigator","mediaDevices","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","bind","writer","readSamples","writtenSamples","mediaStream","processor","sinc","x","piX","PI","sin","interpolateSample","t","a","index","end","sum","streamReceived","createScriptProcessor","onaudioprocess","inSamples","outSamples","round","sampleRate","toSampleArray","inputBuffer","createMediaStreamSource","state","resume","streamDenied","promise","code","Status","Code","SUCCESS","disconnect","tracks","getTracks","stop","stopAudioCapture","RESOURCE_CLOSED","audio","then","BlobReader","blob_builder","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","blobs","append","Blob","type","getBlob","onprogress","sendAck","getLength","BlobWriter","guacWriter","arrayBufferWriter","blob","FileReader","readNextChunk","size","oncomplete","chunk","sliceImplementation","webkitSlice","mozSlice","sliceResult","readAsArrayBuffer","onload","result","isError","error","Client","tunnel","guac_client","currentState","currentTimestamp","pingInterval","lineCap","lineJoin","display","Display","layers","audioPlayers","videoPlayers","parsers","streams","objects","stream_indices","IntegerPool","output_streams","setState","onstatechange","isConnected","exportState","callback","layersSnapshot","key","flush","parseInt","layer","canvas","toCanvas","exportLayer","width","height","url","toDataURL","y","z","alpha","matrix","parent","getLayerIndex","importState","dispose","importLayer","getLayer","resize","setChannelMask","Layer","SRC","draw","move","shade","distort","getDisplay","sendSize","sendMessage","sendKeyEvent","pressed","keysym","sendMouseState","mouseState","applyDisplayScale","getScale","moveCursor","buttonMask","left","middle","right","up","down","sendTouchState","touchState","id","radiusX","radiusY","angle","force","createOutputStream","next","OutputStream","createAudioStream","createFileStream","filename","createPipeStream","name","createClipboardStream","createArgumentValueStream","createObjectOutputStream","requestObjectInputStream","message","endStream","free","onname","onaudio","onvideo","onmultitouch","onargv","onclipboard","onfile","onfilesystem","onpipe","onrequired","onsync","getDefaultLayer","createLayer","layerPropertyHandlers","value","setMiterLimit","parseFloat","VisibleLayer","instructionHandlers","ack","parameters","stream_index","reason","arc","radius","startAngle","endAngle","negative","argv","InputStream","audioPlayer","body","objectIndex","object","streamIndex","onbody","cfill","channelMask","r","g","b","fillColor","clip","clipboard","close","copy","srcL","srcX","srcY","srcWidth","srcHeight","dstL","dstX","dstY","cstroke","cap","join","thickness","strokeColor","cursor","cursorHotspotX","cursorHotspotY","setCursor","curve","cp1x","cp1y","cp2x","cp2y","curveTo","layer_index","c","d","f","file","filesystem","Object","identity","setTransform","img","drawStream","jpeg","lfill","srcLayer","fillLayer","line","lineTo","lstroke","strokeLayer","mouse","showCursor","parent_index","nest","parser","Parser","oninstruction","getParser","receive","pipe","png","pop","rect","w","h","required","reset","handler","moveTo","timestamp","transfer","function_index","put","DefaultTransferFunction","transform","undefine","onundefine","video","videoPlayer","VideoPlayer","opcode","clearInterval","setInterval","src","dst","red","green","blue","DataURIReader","uri","getURI","guac_display","displayWidth","displayHeight","displayScale","document","createElement","style","position","transformOrigin","webkitTransformOrigin","MozTransformOrigin","OTransformOrigin","msTransformOrigin","default_layer","appendChild","getElement","bounds","cursorX","cursorY","onresize","oncursor","tasks","frames","__flush_frames","rendered_frames","frame","isReady","splice","Frame","blocked","execute","Task","taskHandler","task","unblock","scheduleTask","getWidth","getHeight","getCursorLayer","autosize","hotspotX","hotspotY","srcx","srcy","srcw","srch","shown","element","parentNode","removeChild","translate","drawImage","image","drawBlob","createImageBitmap","bitmap","decoded","URL","createObjectURL","revokeObjectURL","Image","play","duration","addEventListener","render_callback","ended","setTimeout","dstLayer","transferFunction","mask","limit","scale","WebkitTransform","MozTransform","OTransform","msTransform","flatten","getContext","draw_layer","initial_alpha","globalAlpha","getCanvas","children","sort","diff","a_element","compareDocumentPosition","Node","DOCUMENT_POSITION_PRECEDING","DOCUMENT_POSITION_FOLLOWING","get_children","child","apply","__unique_id","__next_id","top","div","overflow","__super_resize","zIndex","opacity","Event","Date","getTime","getAge","invokeLegacyHandler","eventTarget","DOMEvent","events","call","Array","isArray","preventDefault","event","returnValue","stopPropagation","cancelEvent","Target","listeners","on","listener","relevantListeners","onEach","types","dispatch","off","offEach","changed","InputSink","sink","field","outline","border","margin","padding","bottom","background","color","isComposing","click","select","focus","focused","activeElement","getBoundingClientRect","client","guac_stream","guac_pool","pool","next_int","integer","JSONReader","guacReader","stringReader","StringReader","json","getJSON","JSON","ontext","text","Keyboard","guac_keyboard","EVENT_MARKER","_nextID","onkeydown","onkeyup","quirks","keyupUnreliable","altIsTypableOnly","capsLockKeyupUnreliable","platform","match","KeyEvent","orig","key_event","keyCode","which","keyIdentifier","location","getEventLocation","modifiers","ModifierState","fromKeyboardEvent","defaultPrevented","reliable","KeydownEvent","keysym_from_key_identifier","keysym_from_keycode","keyupReliable","isPrintable","key_identifier_sane","meta","prevent_alt","ctrl","alt","hyper","recentKeysym","KeypressEvent","keysym_from_charcode","KeyupEvent","eventLog","keycodeKeysyms","keyidentifier_keysym","Again","AllCandidates","Alphanumeric","Alt","Attn","AltGraph","ArrowDown","ArrowLeft","ArrowRight","ArrowUp","Backspace","CapsLock","Cancel","Clear","Convert","Copy","Crsel","CrSel","CodeInput","Compose","Control","ContextMenu","Delete","Down","End","Enter","EraseEof","Escape","Execute","Exsel","ExSel","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F20","F21","F22","F23","F24","Find","GroupFirst","GroupLast","GroupNext","GroupPrevious","FullWidth","HalfWidth","HangulMode","Hankaku","HanjaMode","Help","Hiragana","HiraganaKatakana","Home","Hyper","Insert","JapaneseHiragana","JapaneseKatakana","JapaneseRomaji","JunjaMode","KanaMode","KanjiMode","Katakana","Left","Meta","ModeChange","NumLock","PageDown","PageUp","Pause","Play","PreviousCandidate","PrintScreen","Redo","Right","RomanCharacters","Scroll","Select","Separator","Shift","SingleCandidate","Super","Tab","UIKeyInputDownArrow","UIKeyInputEscape","UIKeyInputLeftArrow","UIKeyInputRightArrow","UIKeyInputUpArrow","Up","Undo","Win","Zenkaku","ZenkakuHankaku","no_repeat","implicitlyPressed","last_keydown_result","key_repeat_timeout","key_repeat_interval","get_keysym","keysyms","identifier","shifted","typedCharacter","unicodePrefixLocation","indexOf","hex","substring","toUpperCase","toLowerCase","codepoint","isControlCharacter","press","clearTimeout","release","str","codePointAt","updateModifierState","modifier","keyEvent","localState","remoteState","syncModifierStates","interpret_events","last_event","handled_event","interpret_event","isStateImplicit","first","accepted_events","release_simulated_altgr","keyLocation","markEvent","listenTo","keydownEvent","handleInput","removeEventListener","handleComposition","shiftKey","ctrlKey","altKey","metaKey","getModifierState","save","empty","pathClosed","stackSize","compositeOperation","newWidth","newHeight","canvasWidth","ceil","canvasHeight","oldData","oldCompositeOperation","globalCompositeOperation","fitRect","resizeWidth","resizeHeight","opBoundX","opBoundY","srcCanvas","getImageData","src_pixel","Pixel","dst_pixel","putImageData","beginPath","bezierCurveTo","closePath","lineWidth","strokeStyle","stroke","fillStyle","fill","createPattern","restore","miterLimit","ROUT","ATOP","XOR","ROVER","OVER","PLUS","RIN","IN","OUT","RATOP","Mouse","guac_mouse","touchMouseThreshold","scrollThreshold","PIXELS_PER_LINE","PIXELS_PER_PAGE","MOUSE_BUTTONS","State","Buttons","LEFT","MIDDLE","RIGHT","ignore_mouse","scroll_delta","ignorePendingMouseEvents","mousewheel_handler","delta","deltaY","wheelDeltaY","wheelDelta","deltaMode","detail","UP","DOWN","Position","fromClientPosition","clientX","clientY","button","target","relatedTarget","toElement","out","CSS3_CURSOR_SUPPORTED","test","dataURL","template","legacyConstructor","arguments","legacyHandlerName","Touchpad","guac_touchpad","devicePixelRatio","clickTimingThreshold","clickMoveThreshold","touch_count","last_touch_x","last_touch_y","last_touch_time","pixels_moved","touch_buttons","gesture_in_progress","click_release_timeout","touches","time","starting_touch","touch","delta_x","delta_y","offsetWidth","offsetHeight","Touchscreen","guac_touchscreen","gesture_start_x","gesture_start_y","long_press_timeout","finger_moved","changedTouches","sqrt","end_gesture","longPressThreshold","begin_gesture","guacObject","bodyCallbacks","inputStream","callbacks","dequeueBodyCallback","requestInputStream","bodyCallback","enqueueBodyCallback","ROOT_STREAM","STREAM_INDEX_MIMETYPE","OnScreenKeyboard","layout","osk","modifierKeysyms","scaledElements","addClass","classname","classList","add","className","removeClass","remove","replace","testClassname","ignoreMouse","ScaledElement","scaleFont","pixels","lineHeight","fontSize","modifiersPressed","names","getActiveKey","keyName","keys","candidate","requires","keyElement","modifierClass","getCSSName","originalKeysym","undefined","keyboard","onselectstart","onmousemove","onmouseup","onmousedown","Layout","unit","asKeyArray","Key","title","keyArrays","getKeys","appendElements","toString","capElement","textContent","j","requirement","keyWidths","mouseRelease","language","charCode","element_buffer","element_end","start_index","terminator","Error","length_end","isNaN","offsetLeft","offsetTop","offsetParent","scrollLeft","scrollTop","documentScrollLeft","documentElement","documentScrollTop","split","parameter","equals","SessionRecording","recording","instructions","charactersSinceLastKeyframe","lastKeyframeTimestamp","playbackTunnel","_PlaybackTunnel","playbackClient","currentFrame","startVideoTimestamp","startRealTimestamp","seekTimeout","args","instruction","_Frame","Instruction","getSize","keyframe","getDuration","toRelativeTimestamp","findFrame","minIndex","maxIndex","midIndex","midTimestamp","replayFrame","receiveInstruction","clientState","seekToFrame","delay","abortSeek","startIndex","startTime","onseek","getPosition","continuePlayback","nextRealTimestamp","pause","onplay","onpause","isPlaying","seek","originallyPlaying","elements","guac_status","UNSUPPORTED","SERVER_ERROR","SERVER_BUSY","UPSTREAM_TIMEOUT","UPSTREAM_ERROR","RESOURCE_NOT_FOUND","RESOURCE_CONFLICT","UPSTREAM_NOT_FOUND","UPSTREAM_UNAVAILABLE","SESSION_CONFLICT","SESSION_TIMEOUT","SESSION_CLOSED","CLIENT_BAD_REQUEST","CLIENT_UNAUTHORIZED","CLIENT_FORBIDDEN","CLIENT_TIMEOUT","CLIENT_OVERRUN","CLIENT_BAD_TYPE","CLIENT_TOO_MANY","fromHTTPCode","fromWebSocketCode","array_reader","bytes_remaining","__decode_utf8","StringWriter","array_writer","__append_utf8","new_buffer","__expand","sendText","out_buffer","__encode_utf8","Touch","guacTouch","DEFAULT_CONTACT_RADIUS","activeTouches","changedTouch","Tunnel","setUUID","uuid","onuuid","OPEN","UNSTABLE","CONNECTING","receiveTimeout","unstableThreshold","INTERNAL_DATA_OPCODE","CLOSED","HTTPTunnel","tunnelURL","crossDomain","extraTunnelHeaders","TUNNEL_CONNECT","TUNNEL_READ","TUNNEL_WRITE","pollingMode","sendingMessages","outputMessageBuffer","withCredentials","receive_timeout","unstableTimeout","extraHeaders","TUNNEL_TOKEN_HEADER","tunnelSessionToken","addExtraHeaders","request","headers","setRequestHeader","reset_timeout","close_tunnel","sendPendingMessages","message_xmlhttprequest","XMLHttpRequest","open","onreadystatechange","readyState","handleHTTPTunnelError","send","xmlhttprequest","getResponseHeader","statusText","handleResponse","interval","nextRequest","dataUpdateEvents","elementEnd","parseResponse","makeRequest","current","responseText","lengthEnd","abort","string","request_id","connect_xmlhttprequest","WebSocketTunnel","socket","protocol","host","slash","pathname","lastIndexOf","path","WebSocket","onopen","onmessage","ChainedTunnel","tunnelChain","connect_data","chained_tunnel","tunnels","committedTunnel","attach","failTunnel","next_tunnel","commit_tunnel","StaticHTTPTunnel","xhr","responseType","API_VERSION"],"mappings":"AAmBA,IAyzdIA,WAzzdAA,UAAYA,WAAa,IAWnBC,kBAAoB,SAASC,GAMnC,IAAIC,EAAcC,KAGlBF,EAAOG,OAAS,SAASC,GAOrB,IAJA,IAAIC,EAASC,OAAOC,KAAKH,GACrBI,EAAc,IAAIC,YAAYJ,EAAOK,QACrCC,EAAa,IAAIC,WAAWJ,GAEvBK,EAAE,EAAGA,EAAER,EAAOK,OAAQG,IAC3BF,EAAWE,GAAKR,EAAOS,WAAWD,GAGlCZ,EAAYc,QACZd,EAAYc,OAAOP,IAK3BR,EAAOgB,MAAQ,WACPf,EAAYe,OACZf,EAAYe,SAUpBd,KAAKa,OAAS,KAMdb,KAAKc,MAAQ,OAsBblB,UAAYA,WAAa,IAUnBmB,kBAAoB,SAASjB,GAQnC,IAAIkB,EAAchB,KAgBlB,SAASiB,EAAYC,GAKjB,IAHA,IAAIf,EAAS,GAGJQ,EAAE,EAAGA,EAAEO,EAAMC,WAAYR,IAC9BR,GAAUiB,OAAOC,aAAaH,EAAMP,IAGxCb,EAAOwB,SAASlB,OAAOmB,KAAKpB,IAtBhCL,EAAO0B,MAAQ,SAASC,GAChBT,EAAYQ,OACZR,EAAYQ,MAAMC,IAoC1BzB,KAAK0B,WAAa9B,UAAUmB,kBAAkBY,oBAQ9C3B,KAAK4B,SAAW,SAAS1B,GAErB,IAAIgB,EAAQ,IAAIR,WAAWR,GAG3B,GAAIgB,EAAMV,QAAUQ,EAAYU,WAC5BT,EAAYC,QAIZ,IAAK,IAAIW,EAAO,EAAGA,EAAOX,EAAMV,OAAQqB,GAAUb,EAAYU,WAC1DT,EAAYC,EAAMY,SAASD,EAAQA,EAASb,EAAYU,cASpE1B,KAAK+B,QAAU,WACXjC,EAAOiC,WASX/B,KAAKwB,MAAQ,MAWjB5B,UAAUmB,kBAAkBY,oBAAsB,MAqB9C/B,UAAYA,WAAa,IAWnBoC,oBAAsB,CAY5BC,UAAc,KASdC,gBAAoB,WAGhB,IAAIC,EAAe/B,OAAO+B,cAAgB/B,OAAOgC,mBAGjD,GAAID,EACA,IAOI,OAJKvC,UAAUoC,oBAAoBC,YAC/BrC,UAAUoC,oBAAoBC,UAAY,IAAIE,GAG3CvC,UAAUoC,oBAAoBC,UAGzC,MAAOI,IAMX,OAAO,QAyBXzC,UAAYA,WAAa,IAUnB0C,YAAc,WAQpBtC,KAAKuC,KAAO,cAkBhB3C,UAAU0C,YAAYE,gBAAkB,SAAyBC,GAE7D,OAAO7C,UAAU8C,eAAeF,gBAAgBC,IAiBpD7C,UAAU0C,YAAYK,kBAAoB,WAEtC,OAAO/C,UAAU8C,eAAeC,qBAoBpC/C,UAAU0C,YAAYM,YAAc,SAAqB9C,EAAQ2C,GAG7D,OAAI7C,UAAU8C,eAAeF,gBAAgBC,GAClC,IAAI7C,UAAU8C,eAAe5C,EAAQ2C,GAGzC,MAmBX7C,UAAU8C,eAAiB,SAAwB5C,EAAQ2C,GAQvD,IAAII,EAASjD,UAAUkD,eAAeC,MAAMN,GASxCO,EAAUpD,UAAUoC,oBAAoBE,kBAWxCe,EAAiBD,EAAQE,YASzBC,EAAS,IAAIvD,UAAUC,kBAAkBC,GAgCzCsD,EAAyC,IAA1BP,EAAOQ,eAAwBjD,OAAOkD,UAAYlD,OAAOmD,WAUxEC,EAA4C,IAA1BX,EAAOQ,eAAwB,IAAM,MAYvDI,EAAc,GAuIdC,EAAmB,WAGnB,IAAIxD,EA5He,SAA0ByD,GAG7C,GAAIA,EAAQnD,QAAU,EAClB,OAAOmD,EAAQ,GAGnB,IAAIC,EAAc,EAClBD,EAAQE,SAAQ,SAA0BC,GACtCF,GAAeE,EAAOtD,UAI1B,IAAIqB,EAAS,EACTkC,EAAS,IAAIX,EAAYQ,GAM7B,OALAD,EAAQE,SAAQ,SAAsBC,GAClCC,EAAOC,IAAIF,EAAQjC,GACnBA,GAAUiC,EAAOtD,UAGduD,EAwGIE,CAAiBR,GAC5B,OAAKvD,GAILuD,EAvFmB,SAA0BvD,GAmB7C,IAjBA,IAAIgE,EAAWC,OAAOC,UAClBC,EAAqBnE,EAAKM,OAI1B8D,EAAUC,KAAKC,MAAMtE,EAAKM,OAASqC,EAAO4B,UAC1CC,EAAkBH,KAAKC,MA1GV,IA0GgB3B,EAAO8B,MAW/B9C,EARG0C,KAAKK,IACb/B,EAAO4B,SAAWC,EAClB7B,EAAO4B,UAAYH,EAAUI,IAMR7C,EAAS3B,EAAKM,OAAQqB,GAAUgB,EAAO4B,SAAU,CAKtE,IADA,IAAII,EAAa,EACRC,EAAU,EAAGA,EAAUjC,EAAO4B,SAAUK,IAC7CD,GAAcN,KAAKQ,IAAI7E,EAAK2B,EAASiD,IAKrCD,GAAcX,IACdG,EAAqBxC,EAASgB,EAAO4B,SACrCP,EAAWW,GAMnB,OAAIR,IAAuBnE,EAAKM,OACrB,CAACN,GAIL,CACH,IAAIkD,EAAYlD,EAAK8E,OAAOC,MAAM,EAAGZ,EAAqBxB,EAAOQ,iBACjE,IAAID,EAAYlD,EAAK8E,OAAOC,MAAMZ,EAAqBxB,EAAOQ,kBA0CpD6B,CAAiBhF,GAC/BA,EAAOuD,EAAY0B,SAJR,MAyDfhC,EAAOtC,OAAS,SAA2BX,IA9ErB,SAAyBA,GAC3CuD,EAAY2B,KAAK,IAAIhC,EAAYlD,IAgFjCmF,CAAgB,IAAIjC,EAAYlD,IAIhC,IAAI4D,EAASJ,IACb,GAAKI,EAAL,CAIA,IAAIwB,EAAatC,EAAQE,YACrBD,EAAiBqC,IACjBrC,EAAiBqC,GAGrB,IAAIC,EAASvC,EAAQwC,qBACrBD,EAAOE,QAAQzC,EAAQ0C,aAGlBH,EAAOI,QACRJ,EAAOI,MAAQJ,EAAOK,QAG1BL,EAAOP,OAzDS,SAAuB9E,GAGvC,IAAIoE,EAAUpE,EAAKM,OAASqC,EAAO4B,SAG/Ba,EAAatC,EAAQE,YACrBD,EAAiBqC,IACjBrC,EAAiBqC,GAMrB,IAHA,IAAIO,EAAc7C,EAAQ8C,aAAajD,EAAO4B,SAAUH,EAASzB,EAAO8B,MAG/DG,EAAU,EAAGA,EAAUjC,EAAO4B,SAAUK,IAM7C,IAJA,IAAIiB,EAAYF,EAAYG,eAAelB,GAGvCjD,EAASiD,EACJnE,EAAI,EAAGA,EAAI2D,EAAS3D,IACzBoF,EAAUpF,GAAKT,EAAK2B,GAAU2B,EAC9B3B,GAAUgB,EAAO4B,SAKzB,OAAOoB,EA8BSI,CAAcnC,GAC9ByB,EAAOI,MAAM1C,GAGbA,GAAkBa,EAAOtD,OAASqC,EAAO4B,SAAW5B,EAAO8B,OAK/D3E,KAAKuC,KAAO,WAGR,IAAI2D,EAAMlD,EAAQE,YAIlBD,EAAiBsB,KAAK4B,IAAIlD,EAAgBiD,EA9Q7B,MAoRrBtG,UAAU8C,eAAe0D,UAAY,IAAIxG,UAAU0C,YAanD1C,UAAU8C,eAAeF,gBAAkB,SAAyBC,GAGhE,QAAK7C,UAAUoC,oBAAoBE,mBAGiB,OAA7CtC,UAAUkD,eAAeC,MAAMN,IAiB1C7C,UAAU8C,eAAeC,kBAAoB,WAGzC,OAAK/C,UAAUoC,oBAAoBE,kBAI5B,CACH,WACA,aALO,KA6BXtC,UAAYA,WAAa,IAUnByG,cAAgB,WAUtBrG,KAAKsG,QAAU,KAWftG,KAAKuG,QAAU,MAgBnB3G,UAAUyG,cAAc7D,gBAAkB,SAAyBC,GAE/D,OAAO7C,UAAU4G,iBAAiBhE,gBAAgBC,IAiBtD7C,UAAUyG,cAAc1D,kBAAoB,WAExC,OAAO/C,UAAU4G,iBAAiB7D,qBAoBtC/C,UAAUyG,cAAczD,YAAc,SAAqB9C,EAAQ2C,GAG/D,OAAI7C,UAAU4G,iBAAiBhE,gBAAgBC,GACpC,IAAI7C,UAAU4G,iBAAiB1G,EAAQ2C,GAG3C,MAmBX7C,UAAU4G,iBAAmB,SAA0B1G,EAAQ2C,GAQ3D,IAAIgE,EAAWzG,KA+BX6C,EAASjD,UAAUkD,eAAeC,MAAMN,GASxCO,EAAUpD,UAAUoC,oBAAoBE,kBAIvCwE,UAAUC,eACXD,UAAUC,aAAe,IAMxBD,UAAUC,aAAaC,eACxBF,UAAUC,aAAaC,cAAgBF,UAAUE,cACtCF,UAAUG,oBACVH,UAAUI,iBACVJ,UAAUK,gBAAgBC,KAAKN,YAS9C,IAAIO,EAAS,IAAIrH,UAAUmB,kBAAkBjB,GAUzCsD,EAAyC,IAA1BP,EAAOQ,eAAwBjD,OAAOkD,UAAYlD,OAAOmD,WAUxEC,EAA4C,IAA1BX,EAAOQ,eAAwB,IAAM,MASvD6D,EAAc,EASdC,EAAiB,EASjBC,EAAc,KAQd7B,EAAS,KAST8B,EAAY,KAeZC,EAAO,SAAcC,GAGrB,GAAU,IAANA,EACA,OAAO,EAGX,IAAIC,EAAMjD,KAAKkD,GAAKF,EACpB,OAAOhD,KAAKmD,IAAIF,GAAOA,GAkDvBG,EAAoB,SAAoB5B,EAAW6B,GAanD,IAVA,IAjC2BL,EAAGM,EAiC1BC,GAAS/B,EAAUvF,OAAS,GAAKoH,EAIjCjC,EAAQpB,KAAKC,MAAMsD,GAzLD,EAyLgC,EAClDC,EAAMxD,KAAKC,MAAMsD,GA1LC,EA8LlBE,EAAM,EACDrH,EAAIgF,EAAOhF,GAAKoH,EAAKpH,IAC1BqH,IAAQjC,EAAUpF,IAAM,MA5CEkH,EApJR,IAoJKN,EA4CcO,EAAQnH,IAzCnC4G,EAAIM,EACPP,EAAKC,GAAKD,EAAKC,EAAIM,GAGvB,GAwCP,OAAOG,GAgEPC,EAAiB,SAAwBnI,IAGzCuH,EAAYrE,EAAQkF,sBAjRN,KAiRyCrF,EAAO4B,SAAU5B,EAAO4B,WACrEgB,QAAQzC,EAAQ0C,aAG1B2B,EAAUc,eAAiB,SAAsB9F,GAC7C4E,EAAOrF,SArDK,SAAuBiE,GAGvC,IAAIuC,EAAYvC,EAAYrF,OAC5B0G,GAAekB,EAKf,IACIC,EADyB9D,KAAK+D,MAAMpB,EAAcrE,EAAO8B,KAAOkB,EAAY0C,YACtCpB,EAG1CA,GAAkBkB,EAMlB,IAHA,IAAInI,EAAO,IAAIkD,EAAYiF,EAAaxF,EAAO4B,UAGtCK,EAAU,EAAGA,EAAUjC,EAAO4B,SAAUK,IAM7C,IAJA,IAAIiB,EAAYF,EAAYG,eAAelB,GAGvCjD,EAASiD,EACJnE,EAAI,EAAGA,EAAI0H,EAAY1H,IAC5BT,EAAK2B,GAAU8F,EAAkB5B,EAAWpF,GAAK0H,EAAa,IAAM7E,EACpE3B,GAAUgB,EAAO4B,SAKzB,OAAOvE,EAqBasI,CAAcnG,EAAEoG,aAAazD,UAIjDO,EAASvC,EAAQ0F,wBAAwB5I,IAClC2F,QAAQ4B,GAIO,cAAlBrE,EAAQ2F,OACR3F,EAAQ4F,SAGZxB,EAActH,GAWd+I,EAAe,WAGf5B,EAAOlF,UAGH0E,EAASF,SACTE,EAASF,WA8DjBU,EAAOzF,MAAQ,SAAiCC,GAjDxB,IAGhBqH,EAiDArH,EAAOsH,OAASnJ,UAAUoJ,OAAOC,KAAKC,SAAY9B,IA/BnC,WAWnB,GARI7B,GACAA,EAAO4D,aAGP9B,GACAA,EAAU8B,aAGV/B,EAEA,IADA,IAAIgC,EAAShC,EAAYiC,YAChB1I,EAAI,EAAGA,EAAIyI,EAAO5I,OAAQG,IAC/ByI,EAAOzI,GAAG2I,OAIlBjC,EAAY,KACZ9B,EAAS,KACT6B,EAAc,KAGdH,EAAOlF,UAeHwH,GACAtC,EAAOzF,MAAQ,KAGXC,EAAOsH,OAASnJ,UAAUoJ,OAAOC,KAAKO,gBAClC/C,EAASH,SACTG,EAASH,UAKTG,EAASF,SACTE,EAASF,YApEjBuC,EAAUpC,UAAUC,aAAaC,aAAa,CAC9C6C,OAAU,GACXxB,EAAgBY,KAIJC,EAAQY,MACnBZ,EAAQY,KAAKzB,EAAgBY,KAsEzCjJ,UAAU4G,iBAAiBJ,UAAY,IAAIxG,UAAUyG,cAarDzG,UAAU4G,iBAAiBhE,gBAAkB,SAAyBC,GAGlE,QAAK7C,UAAUoC,oBAAoBE,mBAGiB,OAA7CtC,UAAUkD,eAAeC,MAAMN,IAiB1C7C,UAAU4G,iBAAiB7D,kBAAoB,WAG3C,OAAK/C,UAAUoC,oBAAoBE,kBAI5B,CACH,WACA,aALO,KA6BXtC,UAAYA,WAAa,IAenB+J,WAAa,SAAS7J,EAAQ2C,GAQpC,IAWImH,EAXA7J,EAAcC,KAQdQ,EAAS,EAIsBoJ,EAA1BxJ,OAAOyJ,YAAkC,IAAIA,YAC7CzJ,OAAO0J,kBAAkC,IAAIA,kBAC7C1J,OAAO2J,eAAkC,IAAIA,eAEnC,IAAI,WAEf,IAAIC,EAAQ,GAGZhK,KAAKiK,OAAS,SAAS/J,GACnB8J,EAAM5E,KAAK,IAAI8E,KAAK,CAAChK,GAAO,CAACiK,KAAQ1H,MAIzCzC,KAAKoK,QAAU,WACX,OAAO,IAAIF,KAAKF,EAAO,CAACG,KAAQ1H,MAM5C3C,EAAOG,OAAS,SAASC,GAOrB,IAJA,IAAIC,EAASC,OAAOC,KAAKH,GACrBI,EAAc,IAAIC,YAAYJ,EAAOK,QACrCC,EAAa,IAAIC,WAAWJ,GAEvBK,EAAE,EAAGA,EAAER,EAAOK,OAAQG,IAC3BF,EAAWE,GAAKR,EAAOS,WAAWD,GAEtCiJ,EAAaK,OAAO3J,GACpBE,GAAUF,EAAYa,WAGlBpB,EAAYsK,YACZtK,EAAYsK,WAAW/J,EAAYa,YAGvCrB,EAAOwK,QAAQ,KAAM,IAKzBxK,EAAOgB,MAAQ,WACPf,EAAYe,OACZf,EAAYe,SASpBd,KAAKuK,UAAY,WACb,OAAO/J,GASXR,KAAKoK,QAAU,WACX,OAAOR,EAAaQ,WAUxBpK,KAAKqK,WAAa,KAMlBrK,KAAKc,MAAQ,OAsBblB,UAAYA,WAAa,IAUnB4K,WAAa,SAAoB1K,GAQvC,IAAI2K,EAAazK,KASb0K,EAAoB,IAAI9K,UAAUmB,kBAAkBjB,GAGxD4K,EAAkBlJ,MAAQ,SAASC,GAC3BgJ,EAAWjJ,OACXiJ,EAAWjJ,MAAMC,IAwDzBzB,KAAKsB,SAAW,SAAkBqJ,GAE9B,IAAI9I,EAAS,EACTsB,EAAS,IAAIyH,WAUbC,EAAgB,WAGhB,GAAIhJ,GAAU8I,EAAKG,KAGXL,EAAWM,YACXN,EAAWM,WAAWJ,OAJ9B,CAYA,IAAIK,EA9DA,SAAeL,EAAMhF,EAAOoC,GAGpC,IAAIkD,GACIN,EAAK1F,OACL0F,EAAKO,aACLP,EAAKQ,UACXnE,KAAK2D,GAEHnK,EAASuH,EAAMpC,EAInB,GAAInF,IAAWuH,EAAK,CAIhB,IAAIqD,EAAcH,EAAoBtF,EAAOnF,GAC7C,GAAI4K,EAAYN,OAAStK,EACrB,OAAO4K,EAKf,OAAOH,EAAoBtF,EAAOoC,GAsClB9C,CAAM0F,EAAM9I,EAAQA,EAAS6I,EAAkBhJ,YAC3DG,GAAU6I,EAAkBhJ,WAI5ByB,EAAOkI,kBAAkBL,KAK7B7H,EAAOmI,OAAS,WAGZZ,EAAkB9I,SAASuB,EAAOoI,QAIlCb,EAAkBlJ,MAAQ,SAAwBC,GAE1CgJ,EAAWjJ,OACXiJ,EAAWjJ,MAAMC,GAGjBA,EAAO+J,YAIPf,EAAWJ,YACXI,EAAWJ,WAAWM,EAAM9I,EAAS6I,EAAkBhJ,YAG3DmJ,OAOR1H,EAAOoD,QAAU,WAGTkE,EAAWlE,SACXkE,EAAWlE,QAAQoE,EAAM9I,EAAQsB,EAAOsI,QAKhDZ,KAQJ7K,KAAK+B,QAAU,WACX2I,EAAkB3I,WAUtB/B,KAAKwB,MAAQ,KAiBbxB,KAAKuG,QAAU,KAafvG,KAAKqK,WAAa,KAWlBrK,KAAK+K,WAAa,OAuBlBnL,UAAYA,WAAa,IAWnB8L,OAAS,SAASC,GAExB,IAAIC,EAAc5L,KASd6L,EAPsB,EAStBC,EAAmB,EACnBC,EAAe,KAQfC,EAAU,CACV,EAAG,OACH,EAAG,QACH,EAAG,UASHC,EAAW,CACX,EAAG,QACH,EAAG,QACH,EAAG,SASHC,EAAU,IAAItM,UAAUuM,QAQxBC,EAAS,GASTC,EAAe,GASfC,EAAe,GAGfC,EAAU,GAGVC,EAAU,GASVC,EAAU,GAGVC,EAAiB,IAAI9M,UAAU+M,YAG/BC,EAAiB,GAErB,SAASC,EAASlE,GACVA,GAASkD,IACTA,EAAelD,EACXiD,EAAYkB,eACZlB,EAAYkB,cAAcjB,IAItC,SAASkB,IACL,OAjGsB,GAiGflB,GAlGe,GAmGfA,EAeX7L,KAAKgN,YAAc,SAAqBC,GAGpC,IAAItE,EAAQ,CACRkD,aAAiBA,EACjBC,iBAAqBA,EACrBM,OAAW,IAGXc,EAAiB,GAGrB,IAAK,IAAIC,KAAOf,EACZc,EAAeC,GAAOf,EAAOe,GAIjCjB,EAAQkB,OAAM,WAGV,IAAK,IAAID,KAAOD,EAAgB,CAE5B,IAAIpF,EAAQuF,SAASF,GACjBG,EAAQJ,EAAeC,GACvBI,EAASD,EAAME,WAGfC,EAAc,CACdC,MAAWJ,EAAMI,MACjBC,OAAWL,EAAMK,QAIjBL,EAAMI,OAASJ,EAAMK,SACrBF,EAAYG,IAAML,EAAOM,UAAU,cAGnC/F,EAAQ,IACR2F,EAAYlG,EAAI+F,EAAM/F,EACtBkG,EAAYK,EAAIR,EAAMQ,EACtBL,EAAYM,EAAIT,EAAMS,EACtBN,EAAYO,MAAQV,EAAMU,MAC1BP,EAAYQ,OAASX,EAAMW,OAC3BR,EAAYS,OAASC,EAAcb,EAAMY,SAI7CvF,EAAMyD,OAAOe,GAAOM,EAKxBR,EAAStE,OAoBjB3I,KAAKoO,YAAc,SAAqBzF,EAAOsE,GAE3C,IAAIE,EACArF,EAMJ,IAAKqF,KAJLtB,EAAelD,EAAMkD,aACrBC,EAAmBnD,EAAMmD,iBAGbM,GACRtE,EAAQuF,SAASF,IACL,GACRjB,EAAQmC,QAAQjC,EAAOe,IAM/B,IAAKA,KAHLf,EAAS,GAGGzD,EAAMyD,OAAQ,CAEtBtE,EAAQuF,SAASF,GAEjB,IAAImB,EAAc3F,EAAMyD,OAAOe,GAC3BG,EAAQiB,EAASzG,GAYrB,GATAoE,EAAQsC,OAAOlB,EAAOgB,EAAYZ,MAAOY,EAAYX,QAGjDW,EAAYV,MACZ1B,EAAQuC,eAAenB,EAAO1N,UAAU8O,MAAMC,KAC9CzC,EAAQ0C,KAAKtB,EAAO,EAAG,EAAGgB,EAAYV,MAItC9F,EAAQ,GAAKwG,EAAYJ,QAAU,EAAG,CAGtC,IAAIA,EAASK,EAASD,EAAYJ,QAClChC,EAAQ2C,KAAKvB,EAAOY,EAAQI,EAAY/G,EAAG+G,EAAYR,EAAGQ,EAAYP,GAGtE7B,EAAQ4C,MAAMxB,EAAOgB,EAAYN,OAGjC,IAAIC,EAASK,EAAYL,OACzB/B,EAAQ6C,QAAQzB,EACZW,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAC7BA,EAAO,GAAIA,EAAO,GAAIA,EAAO,KAOzC/B,EAAQkB,MAAMH,IAYlBjN,KAAKgP,WAAa,WACd,OAAO9C,GAYXlM,KAAKiP,SAAW,SAASvB,EAAOC,GAGvBZ,KAGLpB,EAAOuD,YAAY,OAAQxB,EAAOC,IActC3N,KAAKmP,aAAe,SAASC,EAASC,GAE7BtC,KAGLpB,EAAOuD,YAAY,MAAOG,EAAQD,IAetCpP,KAAKsP,eAAiB,SAAwBC,EAAYC,GAGtD,GAAKzC,IAAL,CAGA,IAAIxF,EAAIgI,EAAWhI,EACfuG,EAAIyB,EAAWzB,EAGf0B,IACAjI,GAAK2E,EAAQuD,WACb3B,GAAK5B,EAAQuD,YAIjBvD,EAAQwD,WACJnL,KAAKC,MAAM+C,GACXhD,KAAKC,MAAMsJ,IAIf,IAAI6B,EAAa,EACbJ,EAAWK,OAAQD,GAAc,GACjCJ,EAAWM,SAAQF,GAAc,GACjCJ,EAAWO,QAAQH,GAAc,GACjCJ,EAAWQ,KAAQJ,GAAc,GACjCJ,EAAWS,OAAQL,GAAc,IAGrChE,EAAOuD,YAAY,QAAS3K,KAAKC,MAAM+C,GAAIhD,KAAKC,MAAMsJ,GAAI6B,KAe9D3P,KAAKiQ,eAAiB,SAAwBC,EAAYV,GAGtD,GAAKzC,IAAL,CAGA,IAAIxF,EAAI2I,EAAW3I,EACfuG,EAAIoC,EAAWpC,EAGf0B,IACAjI,GAAK2E,EAAQuD,WACb3B,GAAK5B,EAAQuD,YAGjB9D,EAAOuD,YAAY,QAASgB,EAAWC,GAAI5L,KAAKC,MAAM+C,GAAIhD,KAAKC,MAAMsJ,GACjEvJ,KAAKC,MAAM0L,EAAWE,SAAU7L,KAAKC,MAAM0L,EAAWG,SACtDH,EAAWI,MAAOJ,EAAWK,SAiBrCvQ,KAAKwQ,mBAAqB,WAGtB,IAAI1I,EAAQ4E,EAAe+D,OAI3B,OADa7D,EAAe9E,GAAS,IAAIlI,UAAU8Q,aAAa9E,EAAa9D,IAiBjF9H,KAAK2Q,kBAAoB,SAASlO,GAG9B,IAAI3C,EAAS8L,EAAY4E,qBAEzB,OADA7E,EAAOuD,YAAY,QAASpP,EAAOgI,MAAOrF,GACnC3C,GAkBXE,KAAK4Q,iBAAmB,SAASnO,EAAUoO,GAGvC,IAAI/Q,EAAS8L,EAAY4E,qBAEzB,OADA7E,EAAOuD,YAAY,OAAQpP,EAAOgI,MAAOrF,EAAUoO,GAC5C/Q,GAiBXE,KAAK8Q,iBAAmB,SAASrO,EAAUsO,GAGvC,IAAIjR,EAAS8L,EAAY4E,qBAEzB,OADA7E,EAAOuD,YAAY,OAAQpP,EAAOgI,MAAOrF,EAAUsO,GAC5CjR,GAiBXE,KAAKgR,sBAAwB,SAASvO,GAGlC,IAAI3C,EAAS8L,EAAY4E,qBAEzB,OADA7E,EAAOuD,YAAY,YAAapP,EAAOgI,MAAOrF,GACvC3C,GAoBXE,KAAKiR,0BAA4B,SAAmCxO,EAAUsO,GAG1E,IAAIjR,EAAS8L,EAAY4E,qBAEzB,OADA7E,EAAOuD,YAAY,OAAQpP,EAAOgI,MAAOrF,EAAUsO,GAC5CjR,GAwBXE,KAAKkR,yBAA2B,SAAkCpJ,EAAOrF,EAAUsO,GAG/E,IAAIjR,EAAS8L,EAAY4E,qBAEzB,OADA7E,EAAOuD,YAAY,MAAOpH,EAAOhI,EAAOgI,MAAOrF,EAAUsO,GAClDjR,GAeXE,KAAKmR,yBAA2B,SAAkCrJ,EAAOiJ,GAGhEhE,KAGLpB,EAAOuD,YAAY,MAAOpH,EAAOiJ,IAerC/Q,KAAKsK,QAAU,SAASxC,EAAOsJ,EAASrI,GAG/BgE,KAGLpB,EAAOuD,YAAY,MAAOpH,EAAOsJ,EAASrI,IAY9C/I,KAAKsB,SAAW,SAASwG,EAAO5H,GAGvB6M,KAGLpB,EAAOuD,YAAY,OAAQpH,EAAO5H,IAYtCF,KAAKqR,UAAY,SAASvJ,GAGjBiF,MAILpB,EAAOuD,YAAY,MAAOpH,GAGtB8E,EAAe9E,KACf4E,EAAe4E,KAAKxJ,UACb8E,EAAe9E,MAY9B9H,KAAK8M,cAAgB,KASrB9M,KAAKuR,OAAS,KAUdvR,KAAKuG,QAAU,KAmBfvG,KAAKwR,QAAU,KAwBfxR,KAAKyR,QAAU,KAcfzR,KAAK0R,aAAe,KAiBpB1R,KAAK2R,OAAS,KAYd3R,KAAK4R,YAAc,KAgBnB5R,KAAK6R,OAAS,KAcd7R,KAAK8R,aAAe,KAgBpB9R,KAAK+R,OAAS,KAYd/R,KAAKgS,WAAa,KAWlBhS,KAAKiS,OAAS,KAcd,IAAI1D,EAAW,SAAkBzG,GAG7B,IAAIwF,EAAQlB,EAAOtE,GAgBnB,OAfKwF,IAIGA,EADU,IAAVxF,EACQoE,EAAQgG,kBACXpK,EAAQ,EACLoE,EAAQiG,cAERjG,EAAQpG,eAGpBsG,EAAOtE,GAASwF,GAIbA,GAgBPa,EAAgB,SAAuBb,GAGvC,IAAKA,EACD,OAAO,KAIX,IAAK,IAAIH,KAAOf,EACZ,GAAIkB,IAAUlB,EAAOe,GACjB,OAAOE,SAASF,GAIxB,OAAO,MAyBX,IAAIiF,EAAwB,CAExB,cAAe,SAAS9E,EAAO+E,GAC3BnG,EAAQoG,cAAchF,EAAOiF,WAAWF,KAG5C,cAAgB,SAAiC/E,EAAO+E,GAGhDzG,EAAY8F,cAAgBpE,aAAiB1N,UAAUuM,QAAQqG,cAC/D5G,EAAY8F,aAAapE,EAAOD,SAASgF,MAajDI,EAAsB,CAEtBC,IAAO,SAASC,GAEZ,IAAIC,EAAevF,SAASsF,EAAW,IACnCE,EAASF,EAAW,GACpB5J,EAAOsE,SAASsF,EAAW,IAG3B7S,EAAS8M,EAAegG,GACxB9S,IAGIA,EAAO0B,OACP1B,EAAO0B,MAAM,IAAI5B,UAAUoJ,OAAOD,EAAM8J,IAIxC9J,GAAQ,KAAU6D,EAAegG,KAAkB9S,IACnD4M,EAAe4E,KAAKsB,UACbhG,EAAegG,MAOlCE,IAAO,SAASH,GAEZ,IAAIrF,EAAQiB,EAASlB,SAASsF,EAAW,KACrCpL,EAAI8F,SAASsF,EAAW,IACxB7E,EAAIT,SAASsF,EAAW,IACxBI,EAAS1F,SAASsF,EAAW,IAC7BK,EAAaT,WAAWI,EAAW,IACnCM,EAAWV,WAAWI,EAAW,IACjCO,EAAW7F,SAASsF,EAAW,IAEnCzG,EAAQ4G,IAAIxF,EAAO/F,EAAGuG,EAAGiF,EAAQC,EAAYC,EAAsB,GAAZC,IAI3DC,KAAQ,SAASR,GAEb,IAAIC,EAAevF,SAASsF,EAAW,IACnClQ,EAAWkQ,EAAW,GACtB5B,EAAO4B,EAAW,GAGtB,GAAI/G,EAAY+F,OAAQ,CACpB,IAAI7R,EAAS0M,EAAQoG,GAAgB,IAAIhT,UAAUwT,YAAYxH,EAAagH,GAC5EhH,EAAY+F,OAAO7R,EAAQ2C,EAAUsO,QAKrCnF,EAAYtB,QAAQsI,EAAc,wCAAyC,MAInFnJ,MAAS,SAASkJ,GAEd,IAAIC,EAAevF,SAASsF,EAAW,IACnClQ,EAAWkQ,EAAW,GAGtB7S,EAAS0M,EAAQoG,GACb,IAAIhT,UAAUwT,YAAYxH,EAAagH,GAG3CS,EAAc,KACdzH,EAAY4F,UACZ6B,EAAczH,EAAY4F,QAAQ1R,EAAQ2C,IAGzC4Q,IACDA,EAAczT,UAAU0C,YAAYM,YAAY9C,EAAQ2C,IAGxD4Q,GACAhH,EAAauG,GAAgBS,EAC7BzH,EAAYtB,QAAQsI,EAAc,KAAM,IAKxChH,EAAYtB,QAAQsI,EAAc,WAAY,MAItDjI,KAAQ,SAASgI,GAGb,IAAIC,EAAevF,SAASsF,EAAW,IACnCzS,EAAOyS,EAAW,GAClB7S,EAAS0M,EAAQoG,GAGjB9S,GAAUA,EAAOG,QACjBH,EAAOG,OAAOC,IAItBoT,KAAS,SAAoBX,GAGzB,IAAIY,EAAclG,SAASsF,EAAW,IAClCa,EAAS/G,EAAQ8G,GAEjBE,EAAcpG,SAASsF,EAAW,IAClClQ,EAAWkQ,EAAW,GACtB5B,EAAO4B,EAAW,GAGtB,GAAIa,GAAUA,EAAOE,OAAQ,CACzB,IAAI5T,EAAS0M,EAAQiH,GAAe,IAAI7T,UAAUwT,YAAYxH,EAAa6H,GAC3ED,EAAOE,OAAO5T,EAAQ2C,EAAUsO,QAKhCnF,EAAYtB,QAAQmJ,EAAa,8BAA+B,MAIxEE,MAAS,SAAShB,GAEd,IAAIiB,EAAcvG,SAASsF,EAAW,IAClCrF,EAAQiB,EAASlB,SAASsF,EAAW,KACrCkB,EAAIxG,SAASsF,EAAW,IACxBmB,EAAIzG,SAASsF,EAAW,IACxBoB,EAAI1G,SAASsF,EAAW,IACxB9K,EAAIwF,SAASsF,EAAW,IAE5BzG,EAAQuC,eAAenB,EAAOsG,GAC9B1H,EAAQ8H,UAAU1G,EAAOuG,EAAGC,EAAGC,EAAGlM,IAItCoM,KAAQ,SAAStB,GAEb,IAAIrF,EAAQiB,EAASlB,SAASsF,EAAW,KAEzCzG,EAAQ+H,KAAK3G,IAIjB4G,UAAa,SAASvB,GAElB,IAAIC,EAAevF,SAASsF,EAAW,IACnClQ,EAAWkQ,EAAW,GAG1B,GAAI/G,EAAYgG,YAAa,CACzB,IAAI9R,EAAS0M,EAAQoG,GAAgB,IAAIhT,UAAUwT,YAAYxH,EAAagH,GAC5EhH,EAAYgG,YAAY9R,EAAQ2C,QAKhCmJ,EAAYtB,QAAQsI,EAAc,wBAAyB,MAInEuB,MAAS,SAASxB,GAEd,IAAIrF,EAAQiB,EAASlB,SAASsF,EAAW,KAEzCzG,EAAQiI,MAAM7G,IAIlB8G,KAAQ,SAASzB,GAEb,IAAI0B,EAAO9F,EAASlB,SAASsF,EAAW,KACpC2B,EAAOjH,SAASsF,EAAW,IAC3B4B,EAAOlH,SAASsF,EAAW,IAC3B6B,EAAWnH,SAASsF,EAAW,IAC/B8B,EAAYpH,SAASsF,EAAW,IAChCiB,EAAcvG,SAASsF,EAAW,IAClC+B,EAAOnG,EAASlB,SAASsF,EAAW,KACpCgC,EAAOtH,SAASsF,EAAW,IAC3BiC,EAAOvH,SAASsF,EAAW,IAE/BzG,EAAQuC,eAAeiG,EAAMd,GAC7B1H,EAAQkI,KAAKC,EAAMC,EAAMC,EAAMC,EAAUC,EAC5BC,EAAMC,EAAMC,IAI7BC,QAAW,SAASlC,GAEhB,IAAIiB,EAAcvG,SAASsF,EAAW,IAClCrF,EAAQiB,EAASlB,SAASsF,EAAW,KACrCmC,EAAM9I,EAAQqB,SAASsF,EAAW,KAClCoC,EAAO9I,EAASoB,SAASsF,EAAW,KACpCqC,EAAY3H,SAASsF,EAAW,IAChCkB,EAAIxG,SAASsF,EAAW,IACxBmB,EAAIzG,SAASsF,EAAW,IACxBoB,EAAI1G,SAASsF,EAAW,IACxB9K,EAAIwF,SAASsF,EAAW,IAE5BzG,EAAQuC,eAAenB,EAAOsG,GAC9B1H,EAAQ+I,YAAY3H,EAAOwH,EAAKC,EAAMC,EAAWnB,EAAGC,EAAGC,EAAGlM,IAI9DqN,OAAU,SAASvC,GAEf,IAAIwC,EAAiB9H,SAASsF,EAAW,IACrCyC,EAAiB/H,SAASsF,EAAW,IACrC0B,EAAO9F,EAASlB,SAASsF,EAAW,KACpC2B,EAAOjH,SAASsF,EAAW,IAC3B4B,EAAOlH,SAASsF,EAAW,IAC3B6B,EAAWnH,SAASsF,EAAW,IAC/B8B,EAAYpH,SAASsF,EAAW,IAEpCzG,EAAQmJ,UAAUF,EAAgBC,EAChBf,EAAMC,EAAMC,EAAMC,EAAUC,IAIlDa,MAAS,SAAS3C,GAEd,IAAIrF,EAAQiB,EAASlB,SAASsF,EAAW,KACrC4C,EAAOlI,SAASsF,EAAW,IAC3B6C,EAAOnI,SAASsF,EAAW,IAC3B8C,EAAOpI,SAASsF,EAAW,IAC3B+C,EAAOrI,SAASsF,EAAW,IAC3BpL,EAAI8F,SAASsF,EAAW,IACxB7E,EAAIT,SAASsF,EAAW,IAE5BzG,EAAQyJ,QAAQrI,EAAOiI,EAAMC,EAAMC,EAAMC,EAAMnO,EAAGuG,IAItD3E,WAAe,SAA0BwJ,GAGrC/G,EAAYzC,cAIhBkF,QAAW,SAASsE,GAEhB,IAAIiD,EAAcvI,SAASsF,EAAW,IAGtC,GAAIiD,EAAc,EAAG,CAGjB,IAAItI,EAAQiB,EAASqH,GACrB1J,EAAQmC,QAAQf,UAGTlB,EAAOwJ,QAKTA,EAAc,UACZxJ,EAAOwJ,IAMtB7G,QAAW,SAAS4D,GAEhB,IAAIiD,EAAcvI,SAASsF,EAAW,IAClC9K,EAAI0K,WAAWI,EAAW,IAC1BoB,EAAIxB,WAAWI,EAAW,IAC1BkD,EAAItD,WAAWI,EAAW,IAC1BmD,EAAIvD,WAAWI,EAAW,IAC1BtQ,EAAIkQ,WAAWI,EAAW,IAC1BoD,EAAIxD,WAAWI,EAAW,IAG9B,GAAIiD,GAAe,EAAG,CAClB,IAAItI,EAAQiB,EAASqH,GACrB1J,EAAQ6C,QAAQzB,EAAOzF,EAAGkM,EAAG8B,EAAGC,EAAGzT,EAAG0T,KAK9CtK,MAAS,SAASkH,GAEd,IAAIE,EAASF,EAAW,GACpB5J,EAAOsE,SAASsF,EAAW,IAG3B/G,EAAYrF,SACZqF,EAAYrF,QAAQ,IAAI3G,UAAUoJ,OAAOD,EAAM8J,IAEnDjH,EAAYzC,cAIhBpB,IAAO,SAAS4K,GAEZ,IAAIC,EAAevF,SAASsF,EAAW,IAGnC7S,EAAS0M,EAAQoG,GACjB9S,IAGIA,EAAOgB,OACPhB,EAAOgB,eAGJ0L,EAAQoG,KAMvBoD,KAAQ,SAASrD,GAEb,IAAIC,EAAevF,SAASsF,EAAW,IACnClQ,EAAWkQ,EAAW,GACtB9B,EAAW8B,EAAW,GAG1B,GAAI/G,EAAYiG,OAAQ,CACpB,IAAI/R,EAAS0M,EAAQoG,GAAgB,IAAIhT,UAAUwT,YAAYxH,EAAagH,GAC5EhH,EAAYiG,OAAO/R,EAAQ2C,EAAUoO,QAKrCjF,EAAYtB,QAAQsI,EAAc,4BAA6B,MAIvEqD,WAAe,SAA0BtD,GAErC,IAAIY,EAAclG,SAASsF,EAAW,IAClC5B,EAAO4B,EAAW,GAGtB,GAAI/G,EAAYkG,aAAc,CAC1B,IAAI0B,EAAS/G,EAAQ8G,GAAe,IAAI3T,UAAUsW,OAAOtK,EAAa2H,GACtE3H,EAAYkG,aAAa0B,EAAQzC,KAOzCoF,SAAY,SAASxD,GAEjB,IAAIrF,EAAQiB,EAASlB,SAASsF,EAAW,KAEzCzG,EAAQkK,aAAa9I,EAAO,EAAG,EAAG,EAAG,EAAG,EAAG,IAI/C+I,IAAO,SAAS1D,GAEZ,IAAIC,EAAevF,SAASsF,EAAW,IACnCiB,EAAcvG,SAASsF,EAAW,IAClCrF,EAAQiB,EAASlB,SAASsF,EAAW,KACrClQ,EAAWkQ,EAAW,GACtBpL,EAAI8F,SAASsF,EAAW,IACxB7E,EAAIT,SAASsF,EAAW,IAGxB7S,EAAS0M,EAAQoG,GAAgB,IAAIhT,UAAUwT,YAAYxH,EAAagH,GAG5E1G,EAAQuC,eAAenB,EAAOsG,GAC9B1H,EAAQoK,WAAWhJ,EAAO/F,EAAGuG,EAAGhO,EAAQ2C,IAI5C8T,KAAQ,SAAS5D,GAEb,IAAIiB,EAAcvG,SAASsF,EAAW,IAClCrF,EAAQiB,EAASlB,SAASsF,EAAW,KACrCpL,EAAI8F,SAASsF,EAAW,IACxB7E,EAAIT,SAASsF,EAAW,IACxBzS,EAAOyS,EAAW,GAEtBzG,EAAQuC,eAAenB,EAAOsG,GAC9B1H,EAAQ0C,KAAKtB,EAAO/F,EAAGuG,EAAG,0BAA4B5N,IAI1DsW,MAAS,SAAS7D,GAEd,IAAIiB,EAAcvG,SAASsF,EAAW,IAClCrF,EAAQiB,EAASlB,SAASsF,EAAW,KACrC8D,EAAWlI,EAASlB,SAASsF,EAAW,KAE5CzG,EAAQuC,eAAenB,EAAOsG,GAC9B1H,EAAQwK,UAAUpJ,EAAOmJ,IAI7BE,KAAQ,SAAShE,GAEb,IAAIrF,EAAQiB,EAASlB,SAASsF,EAAW,KACrCpL,EAAI8F,SAASsF,EAAW,IACxB7E,EAAIT,SAASsF,EAAW,IAE5BzG,EAAQ0K,OAAOtJ,EAAO/F,EAAGuG,IAI7B+I,QAAW,SAASlE,GAEhB,IAAIiB,EAAcvG,SAASsF,EAAW,IAClCrF,EAAQiB,EAASlB,SAASsF,EAAW,KACrC8D,EAAWlI,EAASlB,SAASsF,EAAW,KAE5CzG,EAAQuC,eAAenB,EAAOsG,GAC9B1H,EAAQ4K,YAAYxJ,EAAOmJ,IAI/BM,MAAU,SAAqBpE,GAE3B,IAAIpL,EAAI8F,SAASsF,EAAW,IACxB7E,EAAIT,SAASsF,EAAW,IAG5BzG,EAAQ8K,YAAW,GACnB9K,EAAQwD,WAAWnI,EAAGuG,IAI1Be,KAAQ,SAAS8D,GAEb,IAAIiD,EAAcvI,SAASsF,EAAW,IAClCsE,EAAe5J,SAASsF,EAAW,IACnCpL,EAAI8F,SAASsF,EAAW,IACxB7E,EAAIT,SAASsF,EAAW,IACxB5E,EAAIV,SAASsF,EAAW,IAG5B,GAAIiD,EAAc,GAAKqB,GAAgB,EAAG,CACtC,IAAI3J,EAAQiB,EAASqH,GACjB1H,EAASK,EAAS0I,GACtB/K,EAAQ2C,KAAKvB,EAAOY,EAAQ3G,EAAGuG,EAAGC,KAK1CgD,KAAQ,SAAS4B,GACT/G,EAAY2F,QAAQ3F,EAAY2F,OAAOoB,EAAW,KAG1DuE,KAAQ,SAASvE,IAhfrB,SAAmB7K,GAEf,IAAIqP,EAAS5K,EAAQzE,GASrB,OALc,MAAVqP,KACAA,EAAS5K,EAAQzE,GAAS,IAAIlI,UAAUwX,QACjCC,cAAgB1L,EAAO0L,eAG3BF,GAseUG,CAAUjK,SAASsF,EAAW,KACpC4E,QAAQ5E,EAAW,KAG9B6E,KAAQ,SAAS7E,GAEb,IAAIC,EAAevF,SAASsF,EAAW,IACnClQ,EAAWkQ,EAAW,GACtB5B,EAAO4B,EAAW,GAGtB,GAAI/G,EAAYmG,OAAQ,CACpB,IAAIjS,EAAS0M,EAAQoG,GAAgB,IAAIhT,UAAUwT,YAAYxH,EAAagH,GAC5EhH,EAAYmG,OAAOjS,EAAQ2C,EAAUsO,QAKrCnF,EAAYtB,QAAQsI,EAAc,0BAA2B,MAIrE6E,IAAO,SAAS9E,GAEZ,IAAIiB,EAAcvG,SAASsF,EAAW,IAClCrF,EAAQiB,EAASlB,SAASsF,EAAW,KACrCpL,EAAI8F,SAASsF,EAAW,IACxB7E,EAAIT,SAASsF,EAAW,IACxBzS,EAAOyS,EAAW,GAEtBzG,EAAQuC,eAAenB,EAAOsG,GAC9B1H,EAAQ0C,KAAKtB,EAAO/F,EAAGuG,EAAG,yBAA2B5N,IAIzDwX,IAAO,SAAS/E,GAEZ,IAAIrF,EAAQiB,EAASlB,SAASsF,EAAW,KAEzCzG,EAAQwL,IAAIpK,IAIhBlI,KAAQ,SAASuN,GAEb,IAAIrF,EAAQiB,EAASlB,SAASsF,EAAW,KAEzCzG,EAAQ9G,KAAKkI,IAIjBqK,KAAQ,SAAShF,GAEb,IAAIrF,EAAQiB,EAASlB,SAASsF,EAAW,KACrCpL,EAAI8F,SAASsF,EAAW,IACxB7E,EAAIT,SAASsF,EAAW,IACxBiF,EAAIvK,SAASsF,EAAW,IACxBkF,EAAIxK,SAASsF,EAAW,IAE5BzG,EAAQyL,KAAKrK,EAAO/F,EAAGuG,EAAG8J,EAAGC,IAIjCC,SAAY,SAAkBnF,GACtB/G,EAAYoG,YAAYpG,EAAYoG,WAAWW,IAGvDoF,MAAS,SAASpF,GAEd,IAAIrF,EAAQiB,EAASlB,SAASsF,EAAW,KAEzCzG,EAAQ6L,MAAMzK,IAIlBtJ,IAAO,SAAS2O,GAEZ,IAAIrF,EAAQiB,EAASlB,SAASsF,EAAW,KACrC5B,EAAO4B,EAAW,GAClBN,EAAQM,EAAW,GAGnBqF,EAAU5F,EAAsBrB,GAChCiH,GACAA,EAAQ1K,EAAO+E,IAIvBvD,MAAS,SAAS6D,GAEd,IAAIiD,EAAcvI,SAASsF,EAAW,IAClC9K,EAAIwF,SAASsF,EAAW,IAG5B,GAAIiD,GAAe,EAAG,CAClB,IAAItI,EAAQiB,EAASqH,GACrB1J,EAAQ4C,MAAMxB,EAAOzF,KAK7BiD,KAAQ,SAAS6H,GAEb,IAAIiD,EAAcvI,SAASsF,EAAW,IAClCrF,EAAQiB,EAASqH,GACjBlI,EAAQL,SAASsF,EAAW,IAC5BhF,EAASN,SAASsF,EAAW,IAEjCzG,EAAQsC,OAAOlB,EAAOI,EAAOC,IAIjChI,MAAS,SAASgN,GAEd,IAAIrF,EAAQiB,EAASlB,SAASsF,EAAW,KACrCpL,EAAI8F,SAASsF,EAAW,IACxB7E,EAAIT,SAASsF,EAAW,IAE5BzG,EAAQ+L,OAAO3K,EAAO/F,EAAGuG,IAI7BvL,KAAQ,SAASoQ,GAEb,IAAIuF,EAAY7K,SAASsF,EAAW,IAGpCzG,EAAQkB,OAAM,WAGV,IAAK,IAAItF,KAASuE,EAAc,CAC5B,IAAIgH,EAAchH,EAAavE,GAC3BuL,GACAA,EAAY9Q,OAIhB2V,IAAcpM,IACdH,EAAOuD,YAAY,OAAQgJ,GAC3BpM,EAAmBoM,MAn+CT,IAy+CdrM,GACAgB,EAz+Cc,GA4+CdjB,EAAYqG,QACZrG,EAAYqG,OAAOiG,IAI3BC,SAAY,SAASxF,GAEjB,IAAI0B,EAAO9F,EAASlB,SAASsF,EAAW,KACpC2B,EAAOjH,SAASsF,EAAW,IAC3B4B,EAAOlH,SAASsF,EAAW,IAC3B6B,EAAWnH,SAASsF,EAAW,IAC/B8B,EAAYpH,SAASsF,EAAW,IAChCyF,EAAiB/K,SAASsF,EAAW,IACrC+B,EAAOnG,EAASlB,SAASsF,EAAW,KACpCgC,EAAOtH,SAASsF,EAAW,IAC3BiC,EAAOvH,SAASsF,EAAW,IAGR,IAAnByF,EACAlM,EAAQmM,IAAIhE,EAAMC,EAAMC,EAAMC,EAAUC,EACpCC,EAAMC,EAAMC,GAGQ,IAAnBwD,GACLlM,EAAQiM,SAAS9D,EAAMC,EAAMC,EAAMC,EAAUC,EACzCC,EAAMC,EAAMC,EAAMhV,UAAU8L,OAAO4M,wBAAwBF,KAIvEG,UAAa,SAAS5F,GAElB,IAAIrF,EAAQiB,EAASlB,SAASsF,EAAW,KACrC9K,EAAI0K,WAAWI,EAAW,IAC1BoB,EAAIxB,WAAWI,EAAW,IAC1BkD,EAAItD,WAAWI,EAAW,IAC1BmD,EAAIvD,WAAWI,EAAW,IAC1BtQ,EAAIkQ,WAAWI,EAAW,IAC1BoD,EAAIxD,WAAWI,EAAW,IAE9BzG,EAAQqM,UAAUjL,EAAOzF,EAAGkM,EAAG8B,EAAGC,EAAGzT,EAAG0T,IAI5CyC,SAAa,SAAwB7F,GAGjC,IAAIY,EAAclG,SAASsF,EAAW,IAClCa,EAAS/G,EAAQ8G,GAGjBC,GAAUA,EAAOiF,YACjBjF,EAAOiF,cAIfC,MAAS,SAAS/F,GAEd,IAAIC,EAAevF,SAASsF,EAAW,IACnCrF,EAAQiB,EAASlB,SAASsF,EAAW,KACrClQ,EAAWkQ,EAAW,GAGtB7S,EAAS0M,EAAQoG,GACb,IAAIhT,UAAUwT,YAAYxH,EAAagH,GAG3C+F,EAAc,KACd/M,EAAY6F,UACZkH,EAAc/M,EAAY6F,QAAQ3R,EAAQwN,EAAO7K,IAGhDkW,IACDA,EAAc/Y,UAAUgZ,YAAYhW,YAAY9C,EAAQwN,EAAO7K,IAG/DkW,GACArM,EAAasG,GAAgB+F,EAC7B/M,EAAYtB,QAAQsI,EAAc,KAAM,IAKxChH,EAAYtB,QAAQsI,EAAc,WAAY,OAM1DjH,EAAO0L,cAAgB,SAASwB,EAAQlG,GAEpC,IAAIqF,EAAUvF,EAAoBoG,GAC9Bb,GACAA,EAAQrF,IAOhB3S,KAAKmJ,WAAa,WA7kDQ,GAglDlB0C,GAjlDkB,GAklDXA,IAEPgB,EAplDkB,GAulDdd,GACA3L,OAAO0Y,cAAc/M,GAGzBJ,EAAOuD,YAAY,cACnBvD,EAAOxC,aACP0D,EA5lDkB,KA6mD1B7M,KAAKyF,QAAU,SAASvF,GAEpB2M,EAnnDsB,GAqnDtB,IACIlB,EAAOlG,QAAQvF,GAEnB,MAAOuB,GAEH,MADAoL,EA1nDkB,GA2nDZpL,EAIVsK,EAAe3L,OAAO2Y,aAAY,WAC9BpN,EAAOuD,YAAY,SACpB,KAEHrC,EAjoDsB,KA4oD9BjN,UAAU8L,OAAO4M,wBAA0B,CAGvC,EAAK,SAAUU,EAAKC,GAChBA,EAAIC,IAAMD,EAAIE,MAAQF,EAAIG,KAAO,GAIrC,GAAK,SAAUJ,EAAKC,GAChBA,EAAIC,IAAMD,EAAIE,MAAQF,EAAIG,KAAO,KAIrC,EAAK,SAAUJ,EAAKC,GAChBA,EAAIC,IAAQF,EAAIE,IAChBD,EAAIE,MAAQH,EAAIG,MAChBF,EAAIG,KAAQJ,EAAII,KAChBH,EAAIjL,MAAQgL,EAAIhL,OAIpB,EAAK,SAAUgL,EAAKC,KAKpB,GAAK,SAAUD,EAAKC,GAChBA,EAAIC,IAAQ,KAAQF,EAAIE,IACxBD,EAAIE,MAAQ,KAAQH,EAAIG,MACxBF,EAAIG,KAAQ,KAAQJ,EAAII,KACxBH,EAAIjL,MAASgL,EAAIhL,OAIrB,GAAK,SAAUgL,EAAKC,GAChBA,EAAIC,IAAQ,KAAQD,EAAIC,IACxBD,EAAIE,MAAQ,KAAQF,EAAIE,MACxBF,EAAIG,KAAQ,KAAQH,EAAIG,MAI5B,EAAK,SAAUJ,EAAKC,GAChBA,EAAIC,IAAWF,EAAIE,IAASD,EAAIC,IAChCD,EAAIE,MAAWH,EAAIG,MAASF,EAAIE,MAChCF,EAAIG,KAAWJ,EAAII,KAASH,EAAIG,MAIpC,GAAK,SAAUJ,EAAKC,GAChBA,EAAIC,IAAQ,MAAUF,EAAIE,IAASD,EAAIC,KACvCD,EAAIE,MAAQ,MAAUH,EAAIG,MAASF,EAAIE,OACvCF,EAAIG,KAAQ,MAAUJ,EAAII,KAASH,EAAIG,OAI3C,EAAK,SAAUJ,EAAKC,GAChBA,EAAIC,IAAWF,EAAIE,IAASD,EAAIC,IAChCD,EAAIE,MAAWH,EAAIG,MAASF,EAAIE,MAChCF,EAAIG,KAAWJ,EAAII,KAASH,EAAIG,MAIpC,EAAK,SAAUJ,EAAKC,GAChBA,EAAIC,IAAQ,MAAUF,EAAIE,IAASD,EAAIC,KACvCD,EAAIE,MAAQ,MAAUH,EAAIG,MAASF,EAAIE,OACvCF,EAAIG,KAAQ,MAAUJ,EAAII,KAASH,EAAIG,OAI3C,EAAK,SAAUJ,EAAKC,GAChBA,EAAIC,IAAWF,EAAIE,IAASD,EAAIC,IAChCD,EAAIE,MAAWH,EAAIG,MAASF,EAAIE,MAChCF,EAAIG,KAAWJ,EAAII,KAASH,EAAIG,MAIpC,EAAK,SAAUJ,EAAKC,GAChBA,EAAIC,IAAQ,MAAUF,EAAIE,IAASD,EAAIC,KACvCD,EAAIE,MAAQ,MAAUH,EAAIG,MAASF,EAAIE,OACvCF,EAAIG,KAAQ,MAAUJ,EAAII,KAASH,EAAIG,OAI3C,EAAK,SAAUJ,EAAKC,GAChBA,EAAIC,KAAkBF,EAAIE,IAASD,EAAIC,IAA1B,IACbD,EAAIE,OAAkBH,EAAIG,MAASF,EAAIE,MAA1B,IACbF,EAAIG,MAAkBJ,EAAII,KAASH,EAAIG,KAA1B,KAIjB,GAAK,SAAUJ,EAAKC,GAChBA,EAAIC,IAAS,MAASF,EAAIE,IAASD,EAAIC,KACvCD,EAAIE,MAAS,MAASH,EAAIG,MAASF,EAAIE,OACvCF,EAAIG,KAAS,MAASJ,EAAII,KAASH,EAAIG,OAI3C,EAAK,SAAUJ,EAAKC,GAChBA,EAAIC,IAAkBF,EAAIE,KAASD,EAAIC,IAA1B,IACbD,EAAIE,MAAkBH,EAAIG,OAASF,EAAIE,MAA1B,IACbF,EAAIG,KAAkBJ,EAAII,MAASH,EAAIG,KAA1B,KAIjB,GAAK,SAAUJ,EAAKC,GAChBA,EAAIC,IAAS,KAASF,EAAIE,KAASD,EAAIC,KACvCD,EAAIE,MAAS,KAASH,EAAIG,OAASF,EAAIE,OACvCF,EAAIG,KAAS,KAASJ,EAAII,MAASH,EAAIG,SAwB3CxZ,UAAYA,WAAa,IAenByZ,cAAgB,SAASvZ,EAAQ2C,GAQvC,IAAI1C,EAAcC,KAQdsZ,EAAM,QAAU7W,EAAW,WAG/B3C,EAAOG,OAAS,SAA2BC,GAMvCoZ,GAAOpZ,GAKXJ,EAAOgB,MAAQ,WACPf,EAAYe,OACZf,EAAYe,SAWpBd,KAAKuZ,OAAS,WACV,OAAOD,GAQXtZ,KAAKc,MAAQ,OAsBblB,UAAYA,WAAa,IAWnBuM,QAAU,WAMhB,IAAIqN,EAAexZ,KAEfyZ,EAAe,EACfC,EAAgB,EAChBC,EAAe,EAGfzN,EAAU0N,SAASC,cAAc,OACrC3N,EAAQ4N,MAAMC,SAAW,WACzB7N,EAAQ4N,MAAMpM,MAAQ+L,EAAe,KACrCvN,EAAQ4N,MAAMnM,OAAS+L,EAAgB,KAGvCxN,EAAQ4N,MAAME,gBACd9N,EAAQ4N,MAAMG,sBACd/N,EAAQ4N,MAAMI,mBACdhO,EAAQ4N,MAAMK,iBACdjO,EAAQ4N,MAAMM,kBACV,MAGJ,IAAIC,EAAgB,IAAIza,UAAUuM,QAAQqG,aAAaiH,EAAcC,GAGjExE,EAAS,IAAItV,UAAUuM,QAAQqG,aAAa,EAAG,GACnD0C,EAAOzG,eAAe7O,UAAU8O,MAAMC,KAGtCzC,EAAQoO,YAAYD,EAAcE,cAClCrO,EAAQoO,YAAYpF,EAAOqF,cAG3B,IAAIC,EAASZ,SAASC,cAAc,OACpCW,EAAOV,MAAMC,SAAW,WACxBS,EAAOV,MAAMpM,MAAS+L,EAAaE,EAAgB,KACnDa,EAAOV,MAAMnM,OAAU+L,EAAcC,EAAgB,KAGrDa,EAAOF,YAAYpO,GASnBlM,KAAKmV,eAAiB,EAStBnV,KAAKoV,eAAiB,EAUtBpV,KAAKya,QAAU,EAUfza,KAAK0a,QAAU,EAaf1a,KAAK2a,SAAW,KAiBhB3a,KAAK4a,SAAW,KAWhB,IAAIC,EAAQ,GASRC,EAAS,GAMb,SAASC,IAKL,IAHA,IAAIC,EAAkB,EAGfA,EAAkBF,EAAOta,QAAQ,CAEpC,IAAIya,EAAQH,EAAOE,GACnB,IAAKC,EAAMC,UACP,MAEJD,EAAM7N,QACN4N,IAKJF,EAAOK,OAAO,EAAGH,GAgBrB,SAASI,EAAMnO,EAAU4N,GASrB7a,KAAKkb,QAAU,WAGX,IAAK,IAAIva,EAAE,EAAGA,EAAIka,EAAMra,OAAQG,IAC5B,GAAIka,EAAMla,GAAG0a,QACT,OAAO,EAIf,OAAO,GAUXrb,KAAKoN,MAAQ,WAGT,IAAK,IAAIzM,EAAE,EAAGA,EAAIka,EAAMra,OAAQG,IAC5Bka,EAAMla,GAAG2a,UAGTrO,GAAUA,KAoBtB,SAASsO,EAAKC,EAAaH,GAQvB,IAAII,EAAOzb,KAOXA,KAAKqb,QAAUA,EAKfrb,KAAK0b,QAAU,WACPD,EAAKJ,UACLI,EAAKJ,SAAU,EACfN,MASR/a,KAAKsb,QAAU,WACPE,GAAaA,KAqBzB,SAASG,EAAa3D,EAASqD,GAC3B,IAAII,EAAO,IAAIF,EAAKvD,EAASqD,GAE7B,OADAR,EAAMzV,KAAKqW,GACJA,EASXzb,KAAKua,WAAa,WACd,OAAOC,GASXxa,KAAK4b,SAAW,WACZ,OAAOnC,GASXzZ,KAAK6b,UAAY,WACb,OAAOnC,GAYX1Z,KAAKkS,gBAAkB,WACnB,OAAOmI,GAWXra,KAAK8b,eAAiB,WAClB,OAAO5G,GAWXlV,KAAKmS,YAAc,WACf,IAAI7E,EAAQ,IAAI1N,UAAUuM,QAAQqG,aAAaiH,EAAcC,GAE7D,OADApM,EAAMuB,KAAKwL,EAAe,EAAG,EAAG,GACzB/M,GAWXtN,KAAK8F,aAAe,WAChB,IAAId,EAAS,IAAIpF,UAAU8O,MAAM,EAAG,GAEpC,OADA1J,EAAO+W,SAAW,EACX/W,GAYXhF,KAAKoN,MAAQ,SAASH,GAGlB6N,EAAO1V,KAAK,IAAIgW,EAAMnO,EAAU4N,IAChCA,EAAQ,GAGRE,KAkCJ/a,KAAKqV,UAAY,SAAS2G,EAAUC,EAAU3O,EAAO4O,EAAMC,EAAMC,EAAMC,GACnEV,GAAa,WAGTnC,EAAarE,eAAiB6G,EAC9BxC,EAAapE,eAAiB6G,EAG9B/G,EAAO1G,OAAO4N,EAAMC,GAGpBnH,EAAOd,KAAK9G,EAAO4O,EAAMC,EAAMC,EAAMC,EAAM,EAAG,GAC9C7C,EAAa9J,WAAW8J,EAAaiB,QAASjB,EAAakB,SAGvDlB,EAAaoB,UACbpB,EAAaoB,SAAS1F,EAAO1H,WAAYwO,EAAUC,OAa/Djc,KAAKgX,WAAa,SAASsF,GAEvB,IAAIC,EAAUrH,EAAOqF,aACjBrM,EAASqO,EAAQC,YAGP,IAAVF,EACIpO,GACAA,EAAOuO,YAAYF,GAIlBrO,IAAWhC,GAChBA,EAAQoO,YAAYiC,IAe5Bvc,KAAK0P,WAAa,SAASnI,EAAGuG,GAG1BoH,EAAOwH,UAAUnV,EAAIiS,EAAarE,eACjBrH,EAAI0L,EAAapE,gBAGlCoE,EAAaiB,QAAUlT,EACvBiS,EAAakB,QAAU5M,GAkB3B9N,KAAKwO,OAAS,SAASlB,EAAOI,EAAOC,GACjCgO,GAAa,WAETrO,EAAMkB,OAAOd,EAAOC,GAGhBL,IAAU+M,IAGVZ,EAAe/L,EACfgM,EAAgB/L,EAChBzB,EAAQ4N,MAAMpM,MAAQ+L,EAAe,KACrCvN,EAAQ4N,MAAMnM,OAAS+L,EAAgB,KAGvCc,EAAOV,MAAMpM,MAAS+L,EAAaE,EAAgB,KACnDa,EAAOV,MAAMnM,OAAU+L,EAAcC,EAAgB,KAGjDH,EAAamB,UACbnB,EAAamB,SAASjN,EAAOC,QAuB7C3N,KAAK2c,UAAY,SAASrP,EAAO/F,EAAGuG,EAAG8O,GACnCjB,GAAa,WACTrO,EAAMqP,UAAUpV,EAAGuG,EAAG8O,OAqB9B5c,KAAK6c,SAAW,SAASvP,EAAO/F,EAAGuG,EAAGnD,GAElC,IAAI8Q,EAGJ,GAAIrb,OAAO0c,kBAAmB,CAE1B,IAAIC,EAGJtB,EAAOE,GAAa,WAChBrO,EAAMqP,UAAUpV,EAAGuG,EAAGiP,MACvB,GAGH3c,OAAO0c,kBAAkBnS,GAAMjB,MAAK,SAAsBsT,GACtDD,EAASC,EACTvB,EAAKC,iBAOR,CAGD,IAAI9N,EAAMqP,IAAIC,gBAAgBvS,GAG9B8Q,EAAOE,GAAa,WAGZiB,EAAMlP,OAASkP,EAAMjP,QACrBL,EAAMqP,UAAUpV,EAAGuG,EAAG8O,GAG1BK,IAAIE,gBAAgBvP,MAErB,GAGH,IAAIgP,EAAQ,IAAIQ,MAChBR,EAAMtR,OAASmQ,EAAKC,QACpBkB,EAAMrW,QAAUkV,EAAKC,QACrBkB,EAAM5D,IAAMpL,IA6BpB5N,KAAKsW,WAAa,SAAoBhJ,EAAO/F,EAAGuG,EAAGhO,EAAQ2C,GAKnD,IASIU,EAVJ/C,OAAO0c,mBACH3Z,EAAS,IAAIvD,UAAU+J,WAAW7J,EAAQ2C,IACvC3B,MAAQ,WACX0Y,EAAaqD,SAASvP,EAAO/F,EAAGuG,EAAG3K,EAAOiH,aAO1CjH,EAAS,IAAIvD,UAAUyZ,cAAcvZ,EAAQ2C,IAC1C3B,MAAQ,WACX0Y,EAAa5K,KAAKtB,EAAO/F,EAAGuG,EAAG3K,EAAOoW,YAuBlDvZ,KAAK4O,KAAO,SAAStB,EAAO/F,EAAGuG,EAAGF,GAE9B,IAAI6N,EAAOE,GAAa,WAGhBiB,EAAMlP,OAASkP,EAAMjP,QACrBL,EAAMqP,UAAUpV,EAAGuG,EAAG8O,MAE3B,GAECA,EAAQ,IAAIQ,MAChBR,EAAMtR,OAASmQ,EAAKC,QACpBkB,EAAMrW,QAAUkV,EAAKC,QACrBkB,EAAM5D,IAAMpL,GAsBhB5N,KAAKqd,KAAO,SAAS/P,EAAO7K,EAAU6a,EAAU1P,GAG5C,IAAI8K,EAAQkB,SAASC,cAAc,SACnCnB,EAAMvO,KAAO1H,EACbiW,EAAMM,IAAMpL,EAGZ8K,EAAM6E,iBAAiB,QAAQ,YAE3B,SAASC,IACLlQ,EAAMqP,UAAU,EAAG,EAAGjE,GACjBA,EAAM+E,OACPrd,OAAOsd,WAAWF,EAAiB,IAG3CA,MAED,GAEH7B,EAAajD,EAAM2E,OAwCvBrd,KAAKmY,SAAW,SAAS1B,EAAUyF,EAAMC,EAAMC,EAAMC,EAAMsB,EAAUpW,EAAGuG,EAAG8P,GACvEjC,GAAa,WACTgC,EAASxF,SAAS1B,EAAUyF,EAAMC,EAAMC,EAAMC,EAAM9U,EAAGuG,EAAG8P,OAoClE5d,KAAKqY,IAAM,SAAS5B,EAAUyF,EAAMC,EAAMC,EAAMC,EAAMsB,EAAUpW,EAAGuG,GAC/D6N,GAAa,WACTgC,EAAStF,IAAI5B,EAAUyF,EAAMC,EAAMC,EAAMC,EAAM9U,EAAGuG,OAsC1D9N,KAAKoU,KAAO,SAASqC,EAAUyF,EAAMC,EAAMC,EAAMC,EAAMsB,EAAUpW,EAAGuG,GAChE6N,GAAa,WACTgC,EAASvJ,KAAKqC,EAAUyF,EAAMC,EAAMC,EAAMC,EAAM9U,EAAGuG,OAgB3D9N,KAAKiY,OAAS,SAAS3K,EAAO/F,EAAGuG,GAC7B6N,GAAa,WACTrO,EAAM2K,OAAO1Q,EAAGuG,OAgBxB9N,KAAK4W,OAAS,SAAStJ,EAAO/F,EAAGuG,GAC7B6N,GAAa,WACTrO,EAAMsJ,OAAOrP,EAAGuG,OA8BxB9N,KAAK8S,IAAM,SAASxF,EAAO/F,EAAGuG,EAAGiF,EAAQC,EAAYC,EAAUC,GAC3DyI,GAAa,WACTrO,EAAMwF,IAAIvL,EAAGuG,EAAGiF,EAAQC,EAAYC,EAAUC,OA4BtDlT,KAAK2V,QAAU,SAASrI,EAAOiI,EAAMC,EAAMC,EAAMC,EAAMnO,EAAGuG,GACtD6N,GAAa,WACTrO,EAAMqI,QAAQJ,EAAMC,EAAMC,EAAMC,EAAMnO,EAAGuG,OAWjD9N,KAAKmU,MAAQ,SAAS7G,GAClBqO,GAAa,WACTrO,EAAM6G,YAsBdnU,KAAK2X,KAAO,SAASrK,EAAO/F,EAAGuG,EAAG8J,EAAGC,GACjC8D,GAAa,WACTrO,EAAMqK,KAAKpQ,EAAGuG,EAAG8J,EAAGC,OAa5B7X,KAAKiU,KAAO,SAAS3G,GACjBqO,GAAa,WACTrO,EAAM2G,WAkCdjU,KAAKiV,YAAc,SAAS3H,EAAOwH,EAAKC,EAAMC,EAAWnB,EAAGC,EAAGC,EAAGlM,GAC9D8T,GAAa,WACTrO,EAAM2H,YAAYH,EAAKC,EAAMC,EAAWnB,EAAGC,EAAGC,EAAGlM,OAyBzD7H,KAAKgU,UAAY,SAAS1G,EAAOuG,EAAGC,EAAGC,EAAGlM,GACtC8T,GAAa,WACTrO,EAAM0G,UAAUH,EAAGC,EAAGC,EAAGlM,OA0BjC7H,KAAK8W,YAAc,SAASxJ,EAAOwH,EAAKC,EAAMC,EAAWyB,GACrDkF,GAAa,WACTrO,EAAMwJ,YAAYhC,EAAKC,EAAMC,EAAWyB,OAiBhDzW,KAAK0W,UAAY,SAASpJ,EAAOmJ,GAC7BkF,GAAa,WACTrO,EAAMoJ,UAAUD,OAUxBzW,KAAKoF,KAAO,SAASkI,GACjBqO,GAAa,WACTrO,EAAMlI,WAUdpF,KAAK0X,IAAM,SAASpK,GAChBqO,GAAa,WACTrO,EAAMoK,UAWd1X,KAAK+X,MAAQ,SAASzK,GAClBqO,GAAa,WACTrO,EAAMyK,YA6Bd/X,KAAKoW,aAAe,SAAS9I,EAAOzF,EAAGkM,EAAG8B,EAAGC,EAAGzT,EAAG0T,GAC/C4F,GAAa,WACTrO,EAAM8I,aAAavO,EAAGkM,EAAG8B,EAAGC,EAAGzT,EAAG0T,OA8B1C/V,KAAKuY,UAAY,SAASjL,EAAOzF,EAAGkM,EAAG8B,EAAGC,EAAGzT,EAAG0T,GAC5C4F,GAAa,WACTrO,EAAMiL,UAAU1Q,EAAGkM,EAAG8B,EAAGC,EAAGzT,EAAG0T,OAmBvC/V,KAAKyO,eAAiB,SAASnB,EAAOuQ,GAClClC,GAAa,WACTrO,EAAMmB,eAAeoP,OAgB7B7d,KAAKsS,cAAgB,SAAShF,EAAOwQ,GACjCnC,GAAa,WACTrO,EAAMgF,cAAcwL,OAW5B9d,KAAKqO,QAAU,SAAiBf,GAC5BqO,GAAa,WACTrO,EAAMe,cA6BdrO,KAAK+O,QAAU,SAAiBzB,EAAOzF,EAAGkM,EAAG8B,EAAGC,EAAGzT,EAAG0T,GAClD4F,GAAa,WACTrO,EAAMyB,QAAQlH,EAAGkM,EAAG8B,EAAGC,EAAGzT,EAAG0T,OAwBrC/V,KAAK6O,KAAO,SAAcvB,EAAOY,EAAQ3G,EAAGuG,EAAGC,GAC3C4N,GAAa,WACTrO,EAAMuB,KAAKX,EAAQ3G,EAAGuG,EAAGC,OAcjC/N,KAAK8O,MAAQ,SAAexB,EAAOU,GAC/B2N,GAAa,WACTrO,EAAMwB,MAAMd,OAYpBhO,KAAK+d,MAAQ,SAASA,GAElB7R,EAAQ4N,MAAMvB,UACdrM,EAAQ4N,MAAMkE,gBACd9R,EAAQ4N,MAAMmE,aACd/R,EAAQ4N,MAAMoE,WACdhS,EAAQ4N,MAAMqE,YAEV,SAAWJ,EAAQ,IAAMA,EAAQ,IAErCpE,EAAeoE,EAGfvD,EAAOV,MAAMpM,MAAS+L,EAAaE,EAAgB,KACnDa,EAAOV,MAAMnM,OAAU+L,EAAcC,EAAgB,MAUzD3Z,KAAKyP,SAAW,WACZ,OAAOkK,GAUX3Z,KAAKoe,QAAU,WAGX,IAAI7Q,EAASqM,SAASC,cAAc,UACpCtM,EAAOG,MAAQ2M,EAAc3M,MAC7BH,EAAOI,OAAS0M,EAAc1M,OAE9B,IAAI3K,EAAUuK,EAAO8Q,WAAW,MAmEhC,OA9BA,SAASC,EAAWhR,EAAO/F,EAAGuG,GAG1B,GAAIR,EAAMI,MAAQ,GAAKJ,EAAMK,OAAS,EAAG,CAGrC,IAAI4Q,EAAgBvb,EAAQwb,YAC5Bxb,EAAQwb,aAAelR,EAAMU,MAAQ,IAGrChL,EAAQ2Z,UAAUrP,EAAMmR,YAAalX,EAAGuG,GAIxC,IADA,IAAI4Q,EA/CZ,SAAsBpR,GAGlB,IAAIoR,EAAW,GACf,IAAK,IAAI5W,KAASwF,EAAMoR,SACpBA,EAAStZ,KAAKkI,EAAMoR,SAAS5W,IAwBjC,OArBA4W,EAASC,MAAK,SAA6B9W,EAAGkM,GAG1C,IAAI6K,EAAO/W,EAAEkG,EAAIgG,EAAEhG,EACnB,GAAa,IAAT6Q,EACA,OAAOA,EAGX,IAAIC,EAAYhX,EAAE0S,aAEdR,EADYhG,EAAEwG,aACOuE,wBAAwBD,GAEjD,OAAI9E,EAAWgF,KAAKC,6BAAqC,EACrDjF,EAAWgF,KAAKE,4BAAqC,EAGlD,KAKJP,EAkBYQ,CAAa5R,GACnB3M,EAAE,EAAGA,EAAE+d,EAASle,OAAQG,IAAK,CAClC,IAAIwe,EAAQT,EAAS/d,GACrB2d,EAAWa,EAAO5X,EAAI4X,EAAM5X,EAAGuG,EAAIqR,EAAMrR,GAI7C9K,EAAQwb,YAAcD,GAO9BD,CAAWjE,EAAe,EAAG,GAGtB9M,IAqBf3N,UAAUuM,QAAQqG,aAAe,SAAS9E,EAAOC,GAE7C/N,UAAU8O,MAAM0Q,MAAMpf,KAAM,CAAC0N,EAAOC,IAQpC,IAAIL,EAAQtN,KAUZA,KAAKqf,YAAczf,UAAUuM,QAAQqG,aAAa8M,YAQlDtf,KAAKgO,MAAQ,IAQbhO,KAAKuH,EAAI,EAQTvH,KAAK8N,EAAI,EAOT9N,KAAK+N,EAAI,EAUT/N,KAAKiO,OAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAM9BjO,KAAKkO,OAAS,KAQdlO,KAAK0e,SAAW,GAGhB,IAAInR,EAASD,EAAMmR,YACnBlR,EAAOuM,MAAMC,SAAW,WACxBxM,EAAOuM,MAAMlK,KAAO,MACpBrC,EAAOuM,MAAMyF,IAAM,MAGnB,IAAIC,EAAM5F,SAASC,cAAc,OACjC2F,EAAIlF,YAAY/M,GAChBiS,EAAI1F,MAAMpM,MAAQA,EAAQ,KAC1B8R,EAAI1F,MAAMnM,OAASA,EAAS,KAC5B6R,EAAI1F,MAAMC,SAAW,WACrByF,EAAI1F,MAAMlK,KAAO,MACjB4P,EAAI1F,MAAMyF,IAAM,MAChBC,EAAI1F,MAAM2F,SAAW,SAMrB,IAAIC,EAAiB1f,KAAKwO,OAE1BxO,KAAKwO,OAAS,SAASd,EAAOC,GAG1B6R,EAAI1F,MAAMpM,MAAQA,EAAQ,KAC1B8R,EAAI1F,MAAMnM,OAASA,EAAS,KAE5B+R,EAAehS,EAAOC,IAW1B3N,KAAKua,WAAa,WACd,OAAOiF,GASX,IAAI9C,EAAY,sBAQZzO,EAAS,2BAYbjO,KAAK0c,UAAY,SAASnV,EAAGuG,GAEzBR,EAAM/F,EAAIA,EACV+F,EAAMQ,EAAIA,EAGV4O,EAAY,aACMnV,EAAI,MACJuG,EAAI,MAGtB0R,EAAI1F,MAAMvB,UACViH,EAAI1F,MAAMkE,gBACVwB,EAAI1F,MAAMmE,aACVuB,EAAI1F,MAAMoE,WACVsB,EAAI1F,MAAMqE,YAENzB,EAAY,IAAMzO,GAqB1BjO,KAAK6O,KAAO,SAASX,EAAQ3G,EAAGuG,EAAGC,GAG3BT,EAAMY,SAAWA,IAGbZ,EAAMY,eACCZ,EAAMY,OAAOwQ,SAASpR,EAAM+R,aACvC/R,EAAMY,OAASA,EACfA,EAAOwQ,SAASpR,EAAM+R,aAAe/R,EAGhBY,EAAOqM,aACbD,YAAYkF,IAK/BlS,EAAMoP,UAAUnV,EAAGuG,GACnBR,EAAMS,EAAIA,EACVyR,EAAI1F,MAAM6F,OAAS5R,GAWvB/N,KAAK8O,MAAQ,SAASjH,GAClByF,EAAMU,MAAQnG,EACd2X,EAAI1F,MAAM8F,QAAU/X,EAAE,KAO1B7H,KAAKqO,QAAU,WAGPf,EAAMY,gBACCZ,EAAMY,OAAOwQ,SAASpR,EAAM+R,aACnC/R,EAAMY,OAAS,MAIfsR,EAAIhD,YACJgD,EAAIhD,WAAWC,YAAY+C,IA0BnCxf,KAAK+O,QAAU,SAASlH,EAAGkM,EAAG8B,EAAGC,EAAGzT,EAAG0T,GAGnCzI,EAAMW,OAAS,CAACpG,EAAGkM,EAAG8B,EAAGC,EAAGzT,EAAG0T,GAG/B9H,EAOI,UAAYpG,EAAI,IAAMkM,EAAI,IAAM8B,EAAI,IAAMC,EAAI,IAAMzT,EAAI,IAAM0T,EAAI,IAGtEyJ,EAAI1F,MAAMvB,UACViH,EAAI1F,MAAMkE,gBACVwB,EAAI1F,MAAMmE,aACVuB,EAAI1F,MAAMoE,WACVsB,EAAI1F,MAAMqE,YAENzB,EAAY,IAAMzO,IAc9BrO,UAAUuM,QAAQqG,aAAa8M,UAAY,GAqBvC1f,UAAYA,WAAa,IAWnBigB,MAAQ,SAAe1V,GAO7BnK,KAAKmK,KAAOA,EAQZnK,KAAKkY,WAAY,IAAI4H,MAAOC,UAQ5B/f,KAAKggB,OAAS,WACV,OAAO,IAAIF,MAAOC,UAAY/f,KAAKkY,WAoBvClY,KAAKigB,oBAAsB,SAA6BC,MAyB5DtgB,UAAUigB,MAAMM,SAAW,SAAkBhW,EAAMiW,GAE/CxgB,UAAUigB,MAAMQ,KAAKrgB,KAAMmK,GAG3BiW,EAASA,GAAU,GAGdE,MAAMC,QAAQH,KACfA,EAAS,CAAEA,IAOfpgB,KAAKwgB,eAAiB,WAClBJ,EAAOvc,SAAQ,SAA6B4c,GACpCA,EAAMD,gBAAgBC,EAAMD,iBAChCC,EAAMC,aAAc,MAQ5B1gB,KAAK2gB,gBAAkB,WACnBP,EAAOvc,SAAQ,SAA8B4c,GACzCA,EAAME,uBAclB/gB,UAAUigB,MAAMM,SAASS,YAAc,SAAqBH,GACxDA,EAAME,kBACFF,EAAMD,gBAAgBC,EAAMD,iBAChCC,EAAMC,aAAc,GAaxB9gB,UAAUigB,MAAMgB,OAAS,WAqBrB,IAAIC,EAAY,GAgBhB9gB,KAAK+gB,GAAK,SAAY5W,EAAM6W,GAExB,IAAIC,EAAoBH,EAAU3W,GAC7B8W,IACDH,EAAU3W,GAAQ8W,EAAoB,IAE1CA,EAAkB7b,KAAK4b,IAsB3BhhB,KAAKkhB,OAAS,SAAgBC,EAAOH,GACjCG,EAAMtd,SAAQ,SAAqBsG,GAC/BnK,KAAK+gB,GAAG5W,EAAM6W,KACfhhB,OAWPA,KAAKohB,SAAW,SAAkBX,GAG9BA,EAAMR,oBAAoBjgB,MAG1B,IAAIihB,EAAoBH,EAAUL,EAAMtW,MACxC,GAAI8W,EACA,IAAK,IAAItgB,EAAI,EAAGA,EAAIsgB,EAAkBzgB,OAAQG,IAC1CsgB,EAAkBtgB,GAAG8f,EAAOzgB,OA0BxCA,KAAKqhB,IAAM,SAAalX,EAAM6W,GAE1B,IAAIC,EAAoBH,EAAU3W,GAClC,IAAK8W,EACD,OAAO,EAEX,IAAK,IAAItgB,EAAI,EAAGA,EAAIsgB,EAAkBzgB,OAAQG,IAC1C,GAAIsgB,EAAkBtgB,KAAOqgB,EAEzB,OADAC,EAAkB9F,OAAOxa,EAAG,IACrB,EAIf,OAAO,GA4BXX,KAAKshB,QAAU,SAAiBH,EAAOH,GAEnC,IAAIO,GAAU,EAMd,OAJAJ,EAAMtd,SAAQ,SAAwBsG,GAClCoX,GAAWvhB,KAAKqhB,IAAIlX,EAAM6W,KAC3BhhB,MAEIuhB,KAyBX3hB,UAAYA,WAAa,IAYnB4hB,UAAY,WAQlB,IAAIC,EAAOzhB,KAQP0hB,EAAQ9H,SAASC,cAAc,YACnC6H,EAAM5H,MAAMC,SAAa,QACzB2H,EAAM5H,MAAM6H,QAAa,OACzBD,EAAM5H,MAAM8H,OAAa,OACzBF,EAAM5H,MAAM+H,OAAa,IACzBH,EAAM5H,MAAMgI,QAAa,IACzBJ,EAAM5H,MAAMnM,OAAa,IACzB+T,EAAM5H,MAAMpM,MAAa,IACzBgU,EAAM5H,MAAMlK,KAAa,IACzB8R,EAAM5H,MAAMiI,OAAa,IACzBL,EAAM5H,MAAMtL,OAAa,OACzBkT,EAAM5H,MAAMkI,WAAa,cACzBN,EAAM5H,MAAMmI,MAAa,cAGzBP,EAAMnE,iBAAiB,YAAY,SAAuBlb,GACtDqf,EAAMrP,MAAQ,MACf,GAGHqP,EAAMnE,iBAAiB,kBAAkB,SAAmClb,GACpEA,EAAEnC,OACFwhB,EAAMrP,MAAQ,OACnB,GAGHqP,EAAMnE,iBAAiB,SAAS,SAA6Blb,GACrDA,EAAEnC,OAASmC,EAAE6f,cACbR,EAAMrP,MAAQ,OACnB,GAKHqP,EAAMnE,iBAAiB,SAAS,WAC5Bnd,OAAOsd,YAAW,WACdgE,EAAMS,QACNT,EAAMU,WACP,MACJ,GAMHpiB,KAAKqiB,MAAQ,WACTjiB,OAAOsd,YAAW,WACdgE,EAAMW,UACP,IAUPriB,KAAKua,WAAa,WACd,OAAOmH,GAIX9H,SAAS2D,iBAAiB,WAAW,SAAqBlb,GAGtD,IAAIigB,EAAU1I,SAAS2I,cACvB,GAAID,GAAWA,IAAY1I,SAAStG,KAAM,CAGtC,IAAIqE,EAAO2K,EAAQE,wBACnB,GAAI7K,EAAK/H,KAAO+H,EAAKjK,MAAQ,GAAKiK,EAAK4H,IAAM5H,EAAKhK,OAAS,EACvD,OAKR8T,EAAKY,WAEN,KAuBHziB,UAAYA,WAAa,IAanBwT,YAAc,SAASqP,EAAQ3a,GAQrC,IAAI4a,EAAc1iB,KAOlBA,KAAK8H,MAAQA,EASb9H,KAAKC,OAAS,KAOdD,KAAKc,MAAQ,KAWbd,KAAKsK,QAAU,SAAS8G,EAASrI,GAC7B0Z,EAAOnY,QAAQoY,EAAY5a,MAAOsJ,EAASrI,MAwB/CnJ,UAAYA,WAAa,IAOnB+M,YAAc,WAOpB,IAAIgW,EAAY3iB,KAQZ4iB,EAAO,GAOX5iB,KAAK6iB,SAAW,EAShB7iB,KAAKyQ,KAAO,WAGR,OAAImS,EAAKpiB,OAAS,EACPoiB,EAAKzd,QAGTwd,EAAUE,YAUrB7iB,KAAKsR,KAAO,SAASwR,GACjBF,EAAKxd,KAAK0d,MAwBdljB,UAAYA,WAAa,IAYnBmjB,WAAa,SAA6BjjB,GAQhD,IAAIkjB,EAAahjB,KAQbijB,EAAe,IAAIrjB,UAAUsjB,aAAapjB,GAQ1CqjB,EAAO,GAQXnjB,KAAKuK,UAAY,WACb,OAAO4Y,EAAK3iB,QAWhBR,KAAKojB,QAAU,WACX,OAAOC,KAAKtgB,MAAMogB,IAItBF,EAAaK,OAAS,SAAgBC,GAGlCJ,GAAQI,EAGJP,EAAW3Y,YACX2Y,EAAW3Y,WAAWkZ,EAAK/iB,SAKnCyiB,EAAaniB,MAAQ,WACbkiB,EAAWliB,OACXkiB,EAAWliB,SAUnBd,KAAKqK,WAAa,KAOlBrK,KAAKc,MAAQ,OAuBblB,UAAYA,WAAa,IAanB4jB,SAAW,SAAkBjH,GAQnC,IAAIkH,EAAgBzjB,KAmBhB0jB,EAAe,6BAVE9jB,UAAU4jB,SAASG,UAwBxC3jB,KAAK4jB,UAAY,KAUjB5jB,KAAK6jB,QAAU,KAUf,IAAIC,EAAS,CAOTC,iBAAiB,EAQjBC,kBAAkB,EAQlBC,yBAAyB,GAMzBvd,WAAaA,UAAUwd,WAGnBxd,UAAUwd,SAASC,MAAM,qBACzBL,EAAOC,iBAAkB,EAIpBrd,UAAUwd,SAASC,MAAM,WAC9BL,EAAOE,kBAAmB,EAC1BF,EAAOG,yBAA0B,IAezC,IAAIG,EAAW,SAAkBC,GAQ7B,IAAIC,EAAYtkB,KAWhBA,KAAKukB,QAAUF,EAAQA,EAAKG,OAASH,EAAKE,QAAW,EAQrDvkB,KAAKykB,cAAgBJ,GAAQA,EAAKI,cAQlCzkB,KAAKmN,IAAMkX,GAAQA,EAAKlX,IASxBnN,KAAK0kB,SAAWL,EAAOM,EAAiBN,GAAQ,EAQhDrkB,KAAK4kB,UAAYP,EAAOzkB,UAAU4jB,SAASqB,cAAcC,kBAAkBT,GAAQ,IAAIzkB,UAAU4jB,SAASqB,cAQ1G7kB,KAAKkY,WAAY,IAAI4H,MAAOC,UAO5B/f,KAAK+kB,kBAAmB,EASxB/kB,KAAKqP,OAAS,KASdrP,KAAKglB,UAAW,EAUhBhlB,KAAKggB,OAAS,WACV,OAAO,IAAIF,MAAOC,UAAYuE,EAAUpM,YAgB5C+M,EAAe,SAAsBZ,GAGrCD,EAAS/D,KAAKrgB,KAAMqkB,GAGpBrkB,KAAKqP,OAAU6V,EAA2BllB,KAAKmN,IAAKnN,KAAK0kB,WAC1CS,EAAoBnlB,KAAKukB,QAASvkB,KAAK0kB,UAQtD1kB,KAAKolB,eAAiBtB,EAAOC,gBAIzB/jB,KAAKqP,SAAWgW,EAAYrlB,KAAKqP,UACjCrP,KAAKglB,UAAW,IAGfhlB,KAAKqP,QAAUiW,EAAoBtlB,KAAKukB,QAASvkB,KAAKykB,iBACvDzkB,KAAKqP,OAAS6V,EAA2BllB,KAAKykB,cAAezkB,KAAK0kB,SAAU1kB,KAAK4kB,UAAUzf,SAI3FnF,KAAK4kB,UAAUW,MAAwB,QAAhBvlB,KAAKqP,QAAqC,QAAhBrP,KAAKqP,QAIjC,QAAhBrP,KAAKqP,QAAqByU,EAAOG,2BAHtCjkB,KAAKolB,eAAgB,GAOzB,IAAII,GAAexlB,KAAK4kB,UAAUa,OAAS3B,EAAOE,mBAG9BhkB,KAAK4kB,UAAUc,KAId1lB,KAAK4kB,UAAUa,MAC/BD,GAAgBxlB,KAAK4kB,UAAUc,KAChC1lB,KAAK4kB,UAAUW,MACfvlB,KAAK4kB,UAAUe,SACf3lB,KAAKglB,UAAW,GAGpBY,EAAa5lB,KAAKukB,SAAWvkB,KAAKqP,QAItC4V,EAAa7e,UAAY,IAAIge,EAa7B,IAAIyB,EAAgB,SAAuBxB,GAGvCD,EAAS/D,KAAKrgB,KAAMqkB,GAGpBrkB,KAAKqP,OAASyW,EAAqB9lB,KAAKukB,SAGxCvkB,KAAKglB,UAAW,GAIpBa,EAAczf,UAAY,IAAIge,EAa9B,IAAI2B,EAAa,SAAoB1B,GAGjCD,EAAS/D,KAAKrgB,KAAMqkB,GAIpBrkB,KAAKqP,OAAU8V,EAAoBnlB,KAAKukB,QAASvkB,KAAK0kB,WACvCQ,EAA2BllB,KAAKmN,IAAKnN,KAAK0kB,UAIpDjB,EAAcrU,QAAQpP,KAAKqP,UAC5BrP,KAAKqP,OAASuW,EAAa5lB,KAAKukB,UAAYvkB,KAAKqP,QAGrDrP,KAAKglB,UAAW,GAIpBe,EAAW3f,UAAY,IAAIge,EAS3B,IAAI4B,EAAW,GASXC,EAAiB,CACjB,EAAK,CAAC,OACN,EAAK,CAAC,OACN,GAAK,CAAC,MAAQ,MAAQ,MAAQ,OAC9B,GAAK,CAAC,OACN,GAAK,CAAC,MAAQ,MAAQ,OACtB,GAAK,CAAC,MAAQ,MAAQ,OACtB,GAAK,CAAC,MAAQ,MAAQ,OACtB,GAAK,CAAC,OACN,GAAK,CAAC,OACN,GAAK,CAAC,OACN,GAAK,CAAC,IACN,GAAK,CAAC,MAAQ,MAAQ,MAAQ,OAC9B,GAAK,CAAC,MAAQ,MAAQ,MAAQ,OAC9B,GAAK,CAAC,MAAQ,MAAQ,MAAQ,OAC9B,GAAK,CAAC,MAAQ,MAAQ,MAAQ,OAC9B,GAAK,CAAC,MAAQ,MAAQ,MAAQ,OAC9B,GAAK,CAAC,MAAQ,MAAQ,MAAQ,OAC9B,GAAK,CAAC,MAAQ,MAAQ,MAAQ,OAC9B,GAAK,CAAC,MAAQ,MAAQ,MAAQ,OAC9B,GAAK,CAAC,MAAQ,MAAQ,MAAQ,OAC9B,GAAK,CAAC,MAAQ,MAAQ,MAAQ,OAC9B,GAAK,CAAC,OACN,GAAK,CAAC,OACN,GAAK,CAAC,OACN,GAAK,CAAC,OACN,GAAK,CAAC,OACN,GAAK,CAAC,OACN,GAAK,CAAC,OACN,IAAK,CAAC,OACN,IAAK,CAAC,OACN,IAAK,CAAC,OACN,IAAK,CAAC,OACN,IAAK,CAAC,OACN,IAAK,CAAC,OACN,IAAK,CAAC,OACN,IAAK,CAAC,OACN,IAAK,CAAC,OACN,IAAK,CAAC,OACN,IAAK,CAAC,OACN,IAAK,CAAC,OACN,IAAK,CAAC,OACN,IAAK,CAAC,OACN,IAAK,CAAC,OACN,IAAK,CAAC,OACN,IAAK,CAAC,OACN,IAAK,CAAC,OACN,IAAK,CAAC,OACN,IAAK,CAAC,OACN,IAAK,CAAC,OACN,IAAK,CAAC,OACN,IAAK,CAAC,OACN,IAAK,CAAC,OACN,IAAK,CAAC,OACN,IAAK,CAAC,QAUNC,EAAuB,CACvBC,MAAS,CAAC,OACVC,cAAiB,CAAC,OAClBC,aAAgB,CAAC,OACjBC,IAAO,CAAC,MAAQ,MAAQ,OACxBC,KAAQ,CAAC,OACTC,SAAY,CAAC,OACbC,UAAa,CAAC,OACdC,UAAa,CAAC,OACdC,WAAc,CAAC,OACfC,QAAW,CAAC,OACZC,UAAa,CAAC,OACdC,SAAY,CAAC,OACbC,OAAU,CAAC,OACXC,MAAS,CAAC,OACVC,QAAW,CAAC,OACZC,KAAQ,CAAC,OACTC,MAAS,CAAC,OACVC,MAAS,CAAC,OACVC,UAAa,CAAC,OACdC,QAAW,CAAC,OACZC,QAAW,CAAC,MAAQ,MAAQ,OAC5BC,YAAe,CAAC,OAChBC,OAAU,CAAC,OACXC,KAAQ,CAAC,OACTC,IAAO,CAAC,OACRC,MAAS,CAAC,OACVC,SAAY,CAAC,OACbC,OAAU,CAAC,OACXC,QAAW,CAAC,OACZC,MAAS,CAAC,OACVC,MAAS,CAAC,OACVC,GAAM,CAAC,OACPC,GAAM,CAAC,OACPC,GAAM,CAAC,OACPC,GAAM,CAAC,OACPC,GAAM,CAAC,OACPC,GAAM,CAAC,OACPC,GAAM,CAAC,OACPC,GAAM,CAAC,OACPC,GAAM,CAAC,OACPC,IAAO,CAAC,OACRC,IAAO,CAAC,OACRC,IAAO,CAAC,OACRC,IAAO,CAAC,OACRC,IAAO,CAAC,OACRC,IAAO,CAAC,OACRC,IAAO,CAAC,OACRC,IAAO,CAAC,OACRC,IAAO,CAAC,OACRC,IAAO,CAAC,OACRC,IAAO,CAAC,OACRC,IAAO,CAAC,OACRC,IAAO,CAAC,OACRC,IAAO,CAAC,OACRC,IAAO,CAAC,OACRC,KAAQ,CAAC,OACTC,WAAc,CAAC,OACfC,UAAa,CAAC,OACdC,UAAa,CAAC,OACdC,cAAiB,CAAC,OAClBC,UAAa,KACbC,UAAa,KACbC,WAAc,CAAC,OACfC,QAAW,CAAC,OACZC,UAAa,CAAC,OACdC,KAAQ,CAAC,OACTC,SAAY,CAAC,OACbC,iBAAoB,CAAC,OACrBC,KAAQ,CAAC,OACTC,MAAS,CAAC,MAAQ,MAAQ,OAC1BC,OAAU,CAAC,OACXC,iBAAoB,CAAC,OACrBC,iBAAoB,CAAC,OACrBC,eAAkB,CAAC,OACnBC,UAAa,CAAC,OACdC,SAAY,CAAC,OACbC,UAAa,CAAC,OACdC,SAAY,CAAC,OACbC,KAAQ,CAAC,OACTC,KAAQ,CAAC,MAAQ,MAAQ,OACzBC,WAAc,CAAC,OACfC,QAAW,CAAC,OACZC,SAAY,CAAC,OACbC,OAAU,CAAC,OACXC,MAAS,CAAC,OACVC,KAAQ,CAAC,OACTC,kBAAqB,CAAC,OACtBC,YAAe,CAAC,OAChBC,KAAQ,CAAC,OACTC,MAAS,CAAC,OACVC,gBAAmB,KACnBC,OAAU,CAAC,OACXC,OAAU,CAAC,OACXC,UAAa,CAAC,OACdC,MAAS,CAAC,MAAQ,MAAQ,OAC1BC,gBAAmB,CAAC,OACpBC,MAAS,CAAC,MAAQ,MAAQ,OAC1BC,IAAO,CAAC,OACRC,oBAAuB,CAAC,OACxBC,iBAAoB,CAAC,OACrBC,oBAAuB,CAAC,OACxBC,qBAAwB,CAAC,OACzBC,kBAAqB,CAAC,OACtBC,GAAM,CAAC,OACPC,KAAQ,CAAC,OACTC,IAAO,CAAC,MAAQ,MAAQ,OACxBC,QAAW,CAAC,OACZC,eAAkB,CAAC,QASnBC,EAAY,CACZ,OAAQ,EACR,OAAQ,EACR,OAAQ,EACR,OAAQ,EACR,OAAQ,EACR,OAAQ,EACR,OAAQ,EACR,OAAQ,EACR,OAAQ,EACR,OAAQ,EACR,OAAQ,EACR,OAAQ,GAQZ/sB,KAAK4kB,UAAY,IAAIhlB,UAAU4jB,SAASqB,cASxC7kB,KAAKoP,QAAU,GAaf,IAAI4d,EAAoB,GAWpBC,EAAsB,GAStBrH,EAAe,GAQfsH,EAAqB,KASrBC,EAAsB,KAgBtBC,EAAa,SAAoBC,EAAS3I,GAE1C,OAAK2I,EAGEA,EAAQ3I,IAAa2I,EAAQ,GAFzB,MAgBXhI,EAAc,SAAqBhW,GAGnC,OAAQA,GAAU,GAAQA,GAAU,KACH,WAAhB,WAATA,IAIZ,SAAS6V,EAA2BoI,EAAY5I,EAAU6I,GAEtD,IAAKD,EACD,OAAO,KAEX,IAAIE,EAGAC,EAAwBH,EAAWI,QAAQ,MAC/C,GAAID,GAAyB,EAAG,CAC5B,IAAIE,EAAML,EAAWM,UAAUH,EAAsB,GACrDD,EAAiBpsB,OAAOC,aAAagM,SAASsgB,EAAK,SAIlD,CAAA,GAA0B,IAAtBL,EAAW9sB,QAA6B,IAAbkkB,EAKhC,OAAO0I,EAAWlH,EAAqBoH,GAAa5I,GAJpD8I,EAAiBF,EAcrB,OAPgB,IAAZC,EACAC,EAAiBA,EAAeK,eACf,IAAZN,IACLC,EAAiBA,EAAeM,eAI7BhI,EADS0H,EAAe5sB,WAAW,IAS9C,SAASklB,EAAqBiI,GAG1B,OAPJ,SAA4BA,GACxB,OAAOA,GAAa,IAASA,GAAa,KAAQA,GAAa,IAM3DC,CAAmBD,GAAmB,MAASA,EAG/CA,GAAa,GAAUA,GAAa,IAC7BA,EAGPA,GAAa,KAAUA,GAAa,QAC7B,SAAaA,EAEjB,KAIX,SAAS5I,EAAoBZ,EAASG,GAClC,OAAO0I,EAAWnH,EAAe1B,GAAUG,GAqB/C,IAAIY,EAAsB,SAA6Bf,EAASE,GAG5D,IAAKA,EACD,OAAO,EAGX,IAAIgJ,EAAwBhJ,EAAciJ,QAAQ,MAClD,OAA+B,IAA3BD,IAMAlJ,IADYlX,SAASoX,EAAcmJ,UAAUH,EAAsB,GAAI,MAMtElJ,GAAW,IAAMA,GAAW,IAAQA,GAAW,IAAMA,GAAW,MAoBzEvkB,KAAKiuB,MAAQ,SAAS5e,GAGlB,GAAe,OAAXA,EAAJ,CAGA,IAAKoU,EAAcrU,QAAQC,KAGvBoU,EAAcrU,QAAQC,IAAU,EAG5BoU,EAAcG,WAAW,CACzB,IAAIrY,EAASkY,EAAcG,UAAUvU,GAgBrC,OAfA4d,EAAoB5d,GAAU9D,EAG9BnL,OAAO8tB,aAAahB,GACpB9sB,OAAO0Y,cAAcqU,GAGhBJ,EAAU1d,KACX6d,EAAqB9sB,OAAOsd,YAAW,WACnCyP,EAAsB/sB,OAAO2Y,aAAY,WACrC0K,EAAcI,QAAQxU,GACtBoU,EAAcG,UAAUvU,KACzB,MACJ,MAEA9D,EAKf,OAAO0hB,EAAoB5d,KAAW,IAU1CrP,KAAKmuB,QAAU,SAAS9e,GAGhBoU,EAAcrU,QAAQC,YAGfoU,EAAcrU,QAAQC,UACtB2d,EAAkB3d,GAGzBjP,OAAO8tB,aAAahB,GACpB9sB,OAAO0Y,cAAcqU,GAGN,OAAX9d,GAAmBoU,EAAcI,SACjCJ,EAAcI,QAAQxU,KAalCrP,KAAKmK,KAAO,SAAcikB,GAGtB,IAAK,IAAIztB,EAAI,EAAGA,EAAIytB,EAAI5tB,OAAQG,IAAK,CAGjC,IACI0O,EAASyW,EADGsI,EAAIC,YAAcD,EAAIC,YAAY1tB,GAAKytB,EAAIxtB,WAAWD,IAItE8iB,EAAcwK,MAAM5e,GACpBoU,EAAc0K,QAAQ9e,KAU9BrP,KAAK+X,MAAQ,WAGT,IAAK,IAAI1I,KAAUoU,EAAcrU,QAC7BqU,EAAc0K,QAAQ9gB,SAASgC,IAGnC2W,EAAW,IAsBf,IAAIsI,EAAsB,SAA6BC,EACnDlB,EAASmB,GAET,IAGI7tB,EAHA8tB,EAAaD,EAAS5J,UAAU2J,GAChCG,EAAcjL,EAAcmB,UAAU2J,GAS1C,IAA0C,IAAtClB,EAAQK,QAAQc,EAASnf,QAI7B,GAAIqf,IAA8B,IAAfD,EACf,IAAK9tB,EAAI,EAAGA,EAAI0sB,EAAQ7sB,OAAQG,IAC5B8iB,EAAc0K,QAAQd,EAAQ1sB,SAKjC,IAAK+tB,GAAeD,EAAY,CAIjC,IAAK9tB,EAAI,EAAGA,EAAI0sB,EAAQ7sB,OAAQG,IAC5B,GAAI8iB,EAAcrU,QAAQie,EAAQ1sB,IAC9B,OAQR,IAAI0O,EAASge,EAAQ,GACjBmB,EAASnf,SACT2d,EAAkB3d,IAAU,GAEhCoU,EAAcwK,MAAM5e,KAgBxBsf,EAAqB,SAA4BH,GAGjDF,EAAoB,MAAO,CACvB,MACA,MACA,OACDE,GAGHF,EAAoB,QAAS,CACzB,MACA,OACDE,GAGHF,EAAoB,OAAQ,CACxB,MACA,OACDE,GAGHF,EAAoB,OAAQ,CACxB,MACA,OACDE,GAGHF,EAAoB,QAAS,CACzB,MACA,OACDE,GAGH/K,EAAcmB,UAAY4J,EAAS5J,WAkCvC,SAASgK,IAGL,IAKIC,EALAC,EAAgBC,IACpB,IAAKD,EACD,OAAO,EAIX,GACID,EAAaC,EACbA,EAAgBC,UACO,OAAlBD,GAOT,OAvCkB,WAElB,IAAK,IAAIzf,KAAUoU,EAAcrU,QAC7B,IAAK4d,EAAkB3d,GACnB,OAAO,EAGf,OAAO,EA6BH2f,IACAvL,EAAc1L,QAEX8W,EAAW9J,iBAYtB,IAmCIgK,EAAkB,WAGlB,IAAIE,EAAQjJ,EAAS,GACrB,IAAKiJ,EACD,OAAO,KAGX,KAAIA,aAAiBhK,GA8EhB,OAAIgK,aAAiBlJ,IAAejC,EAAOC,iBAGxC1U,EAAS4f,EAAM5f,SAEfoU,EAAc0K,QAAQ9e,UACfuW,EAAaqJ,EAAM1K,SAC1B0K,EAAMlK,kBAAmB,EAS7B4J,EAAmBM,GACZjJ,EAAS7gB,UALZse,EAAc1L,QACPkX,GAWJjJ,EAAS7gB,QApGhB,IAAIkK,EAAS,KACT6f,EAAkB,GAKtB,GAAqB,QAAjBD,EAAM5f,QAAsC,QAAjB4f,EAAM5f,OAAmB,CAGpD,GAAwB,IAApB2W,EAASxlB,OACT,OAAO,KAGX,GAAIwlB,EAAS,GAAG3W,SAAW4f,EAAM5f,QAC7B,IAAK2W,EAAS,GAAGpB,UAAUW,KACvB,OAAOS,EAAS7gB,aAMnB,GAAI6gB,EAAS,aAAcf,EAC5B,OAAOe,EAAS7gB,QAyBxB,GApBI8pB,EAAMjK,UACN3V,EAAS4f,EAAM5f,OACf6f,EAAkBlJ,EAAS7K,OAAO,EAAG,IAIhC6K,EAAS,aAAcH,GAC5BxW,EAAS2W,EAAS,GAAG3W,OACrB6f,EAAkBlJ,EAAS7K,OAAO,EAAG,IAMhC6K,EAAS,KACd3W,EAAS4f,EAAM5f,OACf6f,EAAkBlJ,EAAS7K,OAAO,EAAG,IAIrC+T,EAAgB1uB,OAAS,EAAG,CAI5B,GAFAmuB,EAAmBM,GAEf5f,EAAQ,EAhGM,SAAiCA,GAGtDoU,EAAcmB,UAAUa,MAAShC,EAAcmB,UAAUc,MAI1DrW,GAAU,IAAUA,GAAU,IAI9BA,GAAU,IAAUA,GAAU,MAI9BA,GAAU,KAAkC,WAAhB,WAATA,MACnBoU,EAAc0K,QAAQ,OACtB1K,EAAc0K,QAAQ,OACtB1K,EAAc0K,QAAQ,OACtB1K,EAAc0K,QAAQ,SAgFdgB,CAAwB9f,GACxB,IAAI0V,GAAoBtB,EAAcwK,MAAM5e,GAC5CuW,EAAaqJ,EAAM1K,SAAWlV,EAIzB4f,EAAM7J,eACP3B,EAAc0K,QAAQ9e,GAG1B,IAAK,IAAI1O,EAAE,EAAGA,EAAEuuB,EAAgB1uB,OAAQG,IACpCuuB,EAAgBvuB,GAAGokB,iBAAmBA,EAI9C,OAAOkK,EAkCf,OAAO,MAkBPtK,EAAmB,SAA0BtiB,GAG7C,MAAI,aAAcA,EACPA,EAAEqiB,SAGT,gBAAiBriB,EACVA,EAAE+sB,YAGN,GAgBPC,EAAY,SAAmBhtB,GAG/B,OAAIA,EAAEqhB,KAINrhB,EAAEqhB,IAAgB,GACX,IAcX1jB,KAAKsvB,SAAW,SAAkB/S,GAG9BA,EAAQgB,iBAAiB,WAAW,SAASlb,GAGzC,GAAKohB,EAAcG,WAGdyL,EAAUhtB,GAAf,CAEA,IAAIktB,EAAe,IAAItK,EAAa5iB,GAIP,MAAzBktB,EAAahL,UAIjByB,EAAS5gB,KAAKmqB,GAGVX,KACAvsB,EAAEme,sBAEP,GAGHjE,EAAQgB,iBAAiB,YAAY,SAASlb,IAGrCohB,EAAcG,WAAcH,EAAcI,UAG1CwL,EAAUhtB,KAGf2jB,EAAS5gB,KAAK,IAAIygB,EAAcxjB,IAG5BusB,KACAvsB,EAAEme,qBAEP,GAGHjE,EAAQgB,iBAAiB,SAAS,SAASlb,GAGlCohB,EAAcI,SAGdwL,EAAUhtB,KAEfA,EAAEme,iBAGFwF,EAAS5gB,KAAK,IAAI2gB,EAAW1jB,IAC7BusB,QAED,GAWH,IAAIY,EAAc,SAAqBntB,IAG9BohB,EAAcG,WAAcH,EAAcI,UAG1CwL,EAAUhtB,IAGXA,EAAEnC,OAASmC,EAAE6f,cACb3F,EAAQkT,oBAAoB,iBAAkBC,GAAmB,GACjEjM,EAActZ,KAAK9H,EAAEnC,QAezBwvB,EAAoB,SAA2BrtB,IAG1CohB,EAAcG,WAAcH,EAAcI,UAG1CwL,EAAUhtB,IAGXA,EAAEnC,OACFqc,EAAQkT,oBAAoB,QAASD,GAAa,GAClD/L,EAActZ,KAAK9H,EAAEnC,QAM7Bqc,EAAQgB,iBAAiB,QAASiS,GAAa,GAC/CjT,EAAQgB,iBAAiB,iBAAkBmS,GAAmB,IAK9DnT,GACAkH,EAAc6L,SAAS/S,IAW/B3c,UAAU4jB,SAASG,QAAU,EAM7B/jB,UAAU4jB,SAASqB,cAAgB,WAO/B7kB,KAAKmF,OAAQ,EAObnF,KAAKylB,MAAO,EAOZzlB,KAAK0lB,KAAM,EAOX1lB,KAAKulB,MAAO,EAOZvlB,KAAK2lB,OAAQ,GAajB/lB,UAAU4jB,SAASqB,cAAcC,kBAAoB,SAASziB,GAE1D,IAAIsG,EAAQ,IAAI/I,UAAU4jB,SAASqB,cAgBnC,OAbAlc,EAAMxD,MAAQ9C,EAAEstB,SAChBhnB,EAAM8c,KAAQpjB,EAAEutB,QAChBjnB,EAAM+c,IAAQrjB,EAAEwtB,OAChBlnB,EAAM4c,KAAQljB,EAAEytB,QAGZztB,EAAE0tB,mBACFpnB,EAAMgd,MAAQtjB,EAAE0tB,iBAAiB,OACnB1tB,EAAE0tB,iBAAiB,UACnB1tB,EAAE0tB,iBAAiB,UACnB1tB,EAAE0tB,iBAAiB,QAG9BpnB,IAuBP/I,UAAYA,WAAa,IAmBnB8O,MAAQ,SAAShB,EAAOC,GAQ9B,IAAIL,EAAQtN,KAmBRuN,EAASqM,SAASC,cAAc,UAQhC7W,EAAUuK,EAAO8Q,WAAW,MAChCrb,EAAQgtB,OAUR,IAAIC,GAAQ,EASRC,GAAa,EAYbC,EAAY,EASZC,EAAqB,CAErB,EAAK,iBACL,EAAK,kBAEL,EAAK,YAEL,EAAK,cAEL,EAAK,aACL,EAAK,mBACL,GAAK,MACL,GAAK,mBACL,GAAK,OAEL,GAAK,cACL,GAAK,WAcL5hB,EAAS,SAAgB6hB,EAAUC,GAGnCD,EAAWA,GAAY,EACvBC,EAAYA,GAAa,EAGzB,IAAIC,EA9FiB,GA8FFhsB,KAAKisB,KAAKH,EA9FR,IA+FjBI,EA/FiB,GA+FFlsB,KAAKisB,KAAKF,EA/FR,IAkGrB,GAAI/iB,EAAOG,QAAU6iB,GAAehjB,EAAOI,SAAW8iB,EAAc,CAGhE,IAAIC,EAAU,KACd,IAAKT,GAA0B,IAAjB1iB,EAAOG,OAAiC,IAAlBH,EAAOI,QAGvC+iB,EAAU9W,SAASC,cAAc,WACzBnM,MAAQnJ,KAAK4B,IAAImH,EAAMI,MAAO2iB,GACtCK,EAAQ/iB,OAASpJ,KAAK4B,IAAImH,EAAMK,OAAQ2iB,GAEnBI,EAAQrS,WAAW,MAGzB1B,UAAUpP,EACjB,EAAG,EAAGmjB,EAAQhjB,MAAOgjB,EAAQ/iB,OAC7B,EAAG,EAAG+iB,EAAQhjB,MAAOgjB,EAAQ/iB,QAKzC,IAAIgjB,EAAwB3tB,EAAQ4tB,yBAGpCrjB,EAAOG,MAAQ6iB,EACfhjB,EAAOI,OAAS8iB,EAGZC,GACA1tB,EAAQ2Z,UAAU+T,EACd,EAAG,EAAGA,EAAQhjB,MAAOgjB,EAAQ/iB,OAC7B,EAAG,EAAG+iB,EAAQhjB,MAAOgjB,EAAQ/iB,QAGrC3K,EAAQ4tB,yBAA2BD,EAGnCR,EAAY,EACZntB,EAAQgtB,YAMR1iB,EAAMyK,QAGVzK,EAAMI,MAAQ2iB,EACd/iB,EAAMK,OAAS2iB,GAyBnB,SAASO,EAAQtpB,EAAGuG,EAAG8J,EAAGC,GAGtB,IAIIiZ,EAOAC,EAXAC,EAAWpZ,EAAIrQ,EACf0pB,EAAWpZ,EAAI/J,EAKfgjB,EADAE,EAAW1jB,EAAMI,MACHsjB,EAEA1jB,EAAMI,MAKpBqjB,EADAE,EAAW3jB,EAAMK,OACFsjB,EAEA3jB,EAAMK,OAGzBL,EAAMkB,OAAOsiB,EAAaC,GAuB9B/wB,KAAK+b,UAAW,EAOhB/b,KAAK0N,MAAQA,EAOb1N,KAAK2N,OAASA,EAUd3N,KAAKye,UAAY,WACb,OAAOlR,GAYXvN,KAAKwN,SAAW,WAGZ,IAAID,EAASqM,SAASC,cAAc,UAQpC,OAPAtM,EAAOG,MAAQJ,EAAMI,MACrBH,EAAOI,OAASL,EAAMK,OAGRJ,EAAO8Q,WAAW,MACxB1B,UAAUrP,EAAMmR,YAAa,EAAG,GAEjClR,GAeXvN,KAAKwO,OAAS,SAAS6hB,EAAUC,GACzBD,IAAa/iB,EAAMI,OAAS4iB,IAAchjB,EAAMK,QAChDa,EAAO6hB,EAAUC,IAgBzBtwB,KAAK2c,UAAY,SAASpV,EAAGuG,EAAG8O,GACxBtP,EAAMyO,UAAU8U,EAAQtpB,EAAGuG,EAAG8O,EAAMlP,MAAOkP,EAAMjP,QACrD3K,EAAQ2Z,UAAUC,EAAOrV,EAAGuG,GAC5BmiB,GAAQ,GAoCZjwB,KAAKmY,SAAW,SAAS1B,EAAUyF,EAAMC,EAAMC,EAAMC,EAAM9U,EAAGuG,EAAG8P,GAE7D,IAAIsT,EAAYza,EAASgI,YAGzB,KAAIvC,GAAQgV,EAAUxjB,OAASyO,GAAQ+U,EAAUvjB,UAG7CuO,EAAOE,EAAO8U,EAAUxjB,QACxB0O,EAAO8U,EAAUxjB,MAAQwO,GAEzBC,EAAOE,EAAO6U,EAAUvjB,SACxB0O,EAAO6U,EAAUvjB,OAASwO,GAGjB,IAATC,GAAuB,IAATC,GAAlB,CAEI/O,EAAMyO,UAAU8U,EAAQtpB,EAAGuG,EAAGsO,EAAMC,GAOxC,IAJA,IAAIrD,EAAMvC,EAASgI,YAAYJ,WAAW,MAAM8S,aAAajV,EAAMC,EAAMC,EAAMC,GAC3EpD,EAAMjW,EAAQmuB,aAAa5pB,EAAIuG,EAAGsO,EAAMC,GAGnC1b,EAAE,EAAGA,EAAEyb,EAAKC,EAAK,EAAG1b,GAAG,EAAG,CAG/B,IAAIywB,EAAY,IAAIxxB,UAAU8O,MAAM2iB,MAChCrY,EAAI9Y,KAAKS,GACTqY,EAAI9Y,KAAKS,EAAE,GACXqY,EAAI9Y,KAAKS,EAAE,GACXqY,EAAI9Y,KAAKS,EAAE,IAIX2wB,EAAY,IAAI1xB,UAAU8O,MAAM2iB,MAChCpY,EAAI/Y,KAAKS,GACTsY,EAAI/Y,KAAKS,EAAE,GACXsY,EAAI/Y,KAAKS,EAAE,GACXsY,EAAI/Y,KAAKS,EAAE,IAIfid,EAAiBwT,EAAWE,GAG5BrY,EAAI/Y,KAAKS,GAAO2wB,EAAUpY,IAC1BD,EAAI/Y,KAAKS,EAAE,GAAK2wB,EAAUnY,MAC1BF,EAAI/Y,KAAKS,EAAE,GAAK2wB,EAAUlY,KAC1BH,EAAI/Y,KAAKS,EAAE,GAAK2wB,EAAUtjB,MAK9BhL,EAAQuuB,aAAatY,EAAK1R,EAAGuG,GAC7BmiB,GAAQ,IAiCZjwB,KAAKqY,IAAM,SAAS5B,EAAUyF,EAAMC,EAAMC,EAAMC,EAAM9U,EAAGuG,GAErD,IAAIojB,EAAYza,EAASgI,YAGzB,KAAIvC,GAAQgV,EAAUxjB,OAASyO,GAAQ+U,EAAUvjB,UAG7CuO,EAAOE,EAAO8U,EAAUxjB,QACxB0O,EAAO8U,EAAUxjB,MAAQwO,GAEzBC,EAAOE,EAAO6U,EAAUvjB,SACxB0O,EAAO6U,EAAUvjB,OAASwO,GAGjB,IAATC,GAAuB,IAATC,GAAlB,CAEI/O,EAAMyO,UAAU8U,EAAQtpB,EAAGuG,EAAGsO,EAAMC,GAGxC,IAAIrD,EAAMvC,EAASgI,YAAYJ,WAAW,MAAM8S,aAAajV,EAAMC,EAAMC,EAAMC,GAC/ErZ,EAAQuuB,aAAavY,EAAKzR,EAAGuG,GAC7BmiB,GAAQ,IAoCZjwB,KAAKoU,KAAO,SAASqC,EAAUyF,EAAMC,EAAMC,EAAMC,EAAM9U,EAAGuG,GAEtD,IAAIojB,EAAYza,EAASgI,YAGrBvC,GAAQgV,EAAUxjB,OAASyO,GAAQ+U,EAAUvjB,SAG7CuO,EAAOE,EAAO8U,EAAUxjB,QACxB0O,EAAO8U,EAAUxjB,MAAQwO,GAEzBC,EAAOE,EAAO6U,EAAUvjB,SACxB0O,EAAO6U,EAAUvjB,OAASwO,GAGjB,IAATC,GAAuB,IAATC,IAEd/O,EAAMyO,UAAU8U,EAAQtpB,EAAGuG,EAAGsO,EAAMC,GACxCrZ,EAAQ2Z,UAAUuU,EAAWhV,EAAMC,EAAMC,EAAMC,EAAM9U,EAAGuG,EAAGsO,EAAMC,GACjE4T,GAAQ,KAaZjwB,KAAKiY,OAAS,SAAS1Q,EAAGuG,GAGlBoiB,IACAltB,EAAQwuB,YACRtB,GAAa,GAGb5iB,EAAMyO,UAAU8U,EAAQtpB,EAAGuG,EAAG,EAAG,GACrC9K,EAAQiV,OAAO1Q,EAAGuG,IAatB9N,KAAK4W,OAAS,SAASrP,EAAGuG,GAGlBoiB,IACAltB,EAAQwuB,YACRtB,GAAa,GAGb5iB,EAAMyO,UAAU8U,EAAQtpB,EAAGuG,EAAG,EAAG,GACrC9K,EAAQ4T,OAAOrP,EAAGuG,IA2BtB9N,KAAK8S,IAAM,SAASvL,EAAGuG,EAAGiF,EAAQC,EAAYC,EAAUC,GAGhDgd,IACAltB,EAAQwuB,YACRtB,GAAa,GAGb5iB,EAAMyO,UAAU8U,EAAQtpB,EAAGuG,EAAG,EAAG,GACrC9K,EAAQ8P,IAAIvL,EAAGuG,EAAGiF,EAAQC,EAAYC,EAAUC,IAyBpDlT,KAAK2V,QAAU,SAASJ,EAAMC,EAAMC,EAAMC,EAAMnO,EAAGuG,GAG3CoiB,IACAltB,EAAQwuB,YACRtB,GAAa,GAGb5iB,EAAMyO,UAAU8U,EAAQtpB,EAAGuG,EAAG,EAAG,GACrC9K,EAAQyuB,cAAclc,EAAMC,EAAMC,EAAMC,EAAMnO,EAAGuG,IAQrD9N,KAAKmU,MAAQ,WACTnR,EAAQ0uB,YACRxB,GAAa,GAkBjBlwB,KAAK2X,KAAO,SAASpQ,EAAGuG,EAAG8J,EAAGC,GAGtBqY,IACAltB,EAAQwuB,YACRtB,GAAa,GAGb5iB,EAAMyO,UAAU8U,EAAQtpB,EAAGuG,EAAG8J,EAAGC,GACrC7U,EAAQ2U,KAAKpQ,EAAGuG,EAAG8J,EAAGC,IAU1B7X,KAAKiU,KAAO,WAGRjR,EAAQiR,OAGRic,GAAa,GA+BjBlwB,KAAKiV,YAAc,SAASH,EAAKC,EAAMC,EAAWnB,EAAGC,EAAGC,EAAGlM,GAGvD7E,EAAQgJ,QAAU8I,EAClB9R,EAAQiJ,SAAW8I,EACnB/R,EAAQ2uB,UAAY3c,EACpBhS,EAAQ4uB,YAAc,QAAU/d,EAAI,IAAMC,EAAI,IAAMC,EAAI,IAAMlM,EAAE,IAAQ,IACxE7E,EAAQ6uB,SACR5B,GAAQ,EAGRC,GAAa,GAsBjBlwB,KAAKgU,UAAY,SAASH,EAAGC,EAAGC,EAAGlM,GAG/B7E,EAAQ8uB,UAAY,QAAUje,EAAI,IAAMC,EAAI,IAAMC,EAAI,IAAMlM,EAAE,IAAQ,IACtE7E,EAAQ+uB,OACR9B,GAAQ,EAGRC,GAAa,GAuBjBlwB,KAAK8W,YAAc,SAAShC,EAAKC,EAAMC,EAAWyB,GAG9CzT,EAAQgJ,QAAU8I,EAClB9R,EAAQiJ,SAAW8I,EACnB/R,EAAQ2uB,UAAY3c,EACpBhS,EAAQ4uB,YAAc5uB,EAAQgvB,cAC1Bvb,EAASgI,YACT,UAEJzb,EAAQ6uB,SACR5B,GAAQ,EAGRC,GAAa,GAcjBlwB,KAAK0W,UAAY,SAASD,GAGtBzT,EAAQ8uB,UAAY9uB,EAAQgvB,cACxBvb,EAASgI,YACT,UAEJzb,EAAQ+uB,OACR9B,GAAQ,EAGRC,GAAa,GAOjBlwB,KAAKoF,KAAO,WAGRpC,EAAQgtB,OACRG,KAOJnwB,KAAK0X,IAAM,WAGHyY,EAAY,IACZntB,EAAQivB,UACR9B,MASRnwB,KAAK+X,MAAQ,WAGT,KAAOoY,EAAY,GACfntB,EAAQivB,UACR9B,IAIJntB,EAAQivB,UACRjvB,EAAQgtB,OAGRhtB,EAAQwuB,YACRtB,GAAa,GA0BjBlwB,KAAKoW,aAAe,SAASvO,EAAGkM,EAAG8B,EAAGC,EAAGzT,EAAG0T,GACxC/S,EAAQoT,aACJvO,EAAGkM,EAAG8B,EACNC,EAAGzT,EAAG0T,IA2Bd/V,KAAKuY,UAAY,SAAS1Q,EAAGkM,EAAG8B,EAAGC,EAAGzT,EAAG0T,GACrC/S,EAAQuV,UACJ1Q,EAAGkM,EAAG8B,EACNC,EAAGzT,EAAG0T,IAiBd/V,KAAKyO,eAAiB,SAASoP,GAC3B7a,EAAQ4tB,yBAA2BR,EAAmBvS,IAY1D7d,KAAKsS,cAAgB,SAASwL,GAC1B9a,EAAQkvB,WAAapU,GAIzBtP,EAAOd,EAAOC,GAKdJ,EAAOuM,MAAM6F,QAAU,GAS3B/f,UAAU8O,MAAMyjB,KAAQ,EAOxBvyB,UAAU8O,MAAM0jB,KAAQ,EAOxBxyB,UAAU8O,MAAM2jB,IAAQ,GAOxBzyB,UAAU8O,MAAM4jB,MAAQ,GAOxB1yB,UAAU8O,MAAM6jB,KAAQ,GAOxB3yB,UAAU8O,MAAM8jB,KAAQ,GAUxB5yB,UAAU8O,MAAM+jB,IAAQ,EAUxB7yB,UAAU8O,MAAMgkB,GAAQ,EAUxB9yB,UAAU8O,MAAMikB,IAAQ,EAUxB/yB,UAAU8O,MAAMkkB,MAAQ,EAUxBhzB,UAAU8O,MAAMC,IAAQ,GAoBxB/O,UAAU8O,MAAM2iB,MAAQ,SAASxd,EAAGC,EAAGC,EAAGlM,GAQtC7H,KAAKkZ,IAAQrF,EAQb7T,KAAKmZ,MAAQrF,EAQb9T,KAAKoZ,KAAQrF,EAQb/T,KAAKgO,MAAQnG,IAuBbjI,UAAYA,WAAa,IA2BnBizB,MAAQ,SAAetW,GAE7B3c,UAAUizB,MAAMhT,MAAMgB,OAAOR,KAAKrgB,MAQlC,IAAI8yB,EAAa9yB,KAQjBA,KAAK+yB,oBAAsB,EAQ3B/yB,KAAKgzB,gBAAkB,GAOvBhzB,KAAKizB,gBAAkB,GAOvBjzB,KAAKkzB,gBAAyC,GAAvBlzB,KAAKizB,gBAS5B,IAAIE,EAAgB,CAChBvzB,UAAUizB,MAAMO,MAAMC,QAAQC,KAC9B1zB,UAAUizB,MAAMO,MAAMC,QAAQE,OAC9B3zB,UAAUizB,MAAMO,MAAMC,QAAQG,OAU9BC,EAAe,EAUfC,EAAe,EAyEnB,SAASC,IAA6BF,EAAeX,EAAWC,oBAOhE,SAASa,EAAmBvxB,GAGxB,IAAIwxB,EAAQxxB,EAAEyxB,SAAWzxB,EAAE0xB,cAAgB1xB,EAAE2xB,WAwB7C,GApBIH,EAGoB,IAAhBxxB,EAAE4xB,UACFJ,EAAQxxB,EAAEyxB,OAAShB,EAAWG,gBAGT,IAAhB5wB,EAAE4xB,YACPJ,EAAQxxB,EAAEyxB,OAAShB,EAAWI,iBAMlCW,EAAQxxB,EAAE6xB,OAASpB,EAAWG,iBAGlCS,GAAgBG,KAGKf,EAAWE,gBAAiB,CAG7C,GACIF,EAAW3Q,MAAMviB,UAAUizB,MAAMO,MAAMC,QAAQc,IAC/CT,GAAgBZ,EAAWE,sBACtBU,IAAiBZ,EAAWE,iBAGrCU,EAAe,EAKnB,GAAIA,GAAgBZ,EAAWE,gBAAiB,CAG5C,GACIF,EAAW3Q,MAAMviB,UAAUizB,MAAMO,MAAMC,QAAQe,MAC/CV,GAAgBZ,EAAWE,sBACtBU,GAAgBZ,EAAWE,iBAGpCU,EAAe,EAQnB9zB,UAAUigB,MAAMM,SAASS,YAAYve,GAvIzCka,EAAQgB,iBAAiB,eAAe,SAASlb,GAC7CzC,UAAUigB,MAAMM,SAASS,YAAYve,MACtC,GAEHka,EAAQgB,iBAAiB,aAAa,SAASlb,GAG3C,GAAIoxB,EAGA,OAFA7zB,UAAUigB,MAAMM,SAASS,YAAYve,QACrCoxB,IAIJX,EAAWjkB,KAAKjP,UAAUy0B,SAASC,mBAAmB/X,EAASla,EAAEkyB,QAASlyB,EAAEmyB,SAAUnyB,MAEvF,GAEHka,EAAQgB,iBAAiB,aAAa,SAASlb,GAG3C,GAAIoxB,EACA7zB,UAAUigB,MAAMM,SAASS,YAAYve,OADzC,CAKA,IAAIoyB,EAAStB,EAAc9wB,EAAEoyB,QACzBA,GACA3B,EAAW7E,MAAMwG,EAAQpyB,OAE9B,GAEHka,EAAQgB,iBAAiB,WAAW,SAASlb,GAGzC,GAAIoxB,EACA7zB,UAAUigB,MAAMM,SAASS,YAAYve,OADzC,CAKA,IAAIoyB,EAAStB,EAAc9wB,EAAEoyB,QACzBA,GACA3B,EAAW3E,QAAQsG,EAAQpyB,OAEhC,GAEHka,EAAQgB,iBAAiB,YAAY,SAASlb,GAGrCA,IAAGA,EAAIjC,OAAOqgB,OAInB,IADA,IAAIiU,EAASryB,EAAEsyB,eAAiBtyB,EAAEuyB,UAC3BF,GAAQ,CACX,GAAIA,IAAWnY,EACX,OACJmY,EAASA,EAAOlY,WAIpBsW,EAAW/a,MAAM1V,GACjBywB,EAAW+B,IAAIxyB,MAEhB,GAGHka,EAAQgB,iBAAiB,eAAe,SAASlb,GAC7CzC,UAAUigB,MAAMM,SAASS,YAAYve,MACtC,GAKHka,EAAQgB,iBAAiB,YAAcoW,GAA0B,GACjEpX,EAAQgB,iBAAiB,aAAcoW,GAA0B,GACjEpX,EAAQgB,iBAAiB,WAAcoW,GAA0B,GAiEjEpX,EAAQgB,iBAAiB,iBAAkBqW,GAAoB,GAC/DrX,EAAQgB,iBAAiB,aAAkBqW,GAAoB,GAC/DrX,EAAQgB,iBAAiB,QAAkBqW,GAAoB,GAS/D,IAAIkB,EAAwB,WAExB,IAAItV,EAAM5F,SAASC,cAAc,OAGjC,KAAM,WAAY2F,EAAI1F,OAClB,OAAO,EAEX,IAEI0F,EAAI1F,MAAM5E,OAAS,wJAMvB,MAAO7S,GACH,OAAO,EAIX,MAAO,4BAA4B0yB,KAAKvV,EAAI1F,MAAM5E,QAAU,IArBpC,GAgD5BlV,KAAKqV,UAAY,SAAS9H,EAAQhG,EAAGuG,GAGjC,GAAIgnB,EAAuB,CACvB,IAAIE,EAAUznB,EAAOM,UAAU,aAE/B,OADA0O,EAAQzC,MAAM5E,OAAS,OAAS8f,EAAU,KAAOztB,EAAI,IAAMuG,EAAI,UACxD,EAIX,OAAO,IAeflO,UAAUizB,MAAMO,MAAQ,SAAe6B,GAqCnC,IAAIC,EAAoB,SAA2B3tB,EAAGuG,EAAG8B,EAAMC,EAAQC,EAAOC,EAAIC,GAC9E,MAAO,CACHzI,EAASA,EACTuG,EAASA,EACT8B,KAASA,EACTC,OAASA,EACTC,MAASA,EACTC,GAASA,EACTC,KAASA,IAMbilB,EADAE,UAAU30B,OAAS,EACR00B,EAAkB9V,MAAMpf,KAAMm1B,WAE9BF,GAAY,GAE3Br1B,UAAUy0B,SAAShU,KAAKrgB,KAAMi1B,GAQ9Bj1B,KAAK4P,KAAOqlB,EAASrlB,OAAQ,EAQ7B5P,KAAK6P,OAASolB,EAASplB,SAAU,EAQjC7P,KAAK8P,MAAQmlB,EAASnlB,QAAS,EAU/B9P,KAAK+P,GAAKklB,EAASllB,KAAM,EAUzB/P,KAAKgQ,KAAOilB,EAASjlB,OAAQ,GAWjCpQ,UAAUizB,MAAMO,MAAMC,QAAU,CAS5BC,KAAO,OASPC,OAAS,SASTC,MAAQ,QAURW,GAAK,KAULC,KAAO,QAoBXx0B,UAAUizB,MAAMhT,MAAQ,SAAoB1V,EAAMxB,EAAOyX,GAErDxgB,UAAUigB,MAAMM,SAASE,KAAKrgB,KAAMmK,EAAMiW,GAU1C,IAAIgV,EAAoB,KAAOp1B,KAAKmK,KAOpCnK,KAAK2I,MAAQA,EAKb3I,KAAKigB,oBAAsB,SAA6ByU,GAChDA,EAAOU,KAEPp1B,KAAKwgB,iBACLxgB,KAAK2gB,kBAEL+T,EAAOU,GAAmBp1B,KAAK2I,UAmB3C/I,UAAUizB,MAAMhT,MAAMgB,OAAS,WAE3BjhB,UAAUigB,MAAMgB,OAAOR,KAAKrgB,MAS5BA,KAAK6L,aAAe,IAAIjM,UAAUizB,MAAMO,MA0ExCpzB,KAAKiuB,MAAQ,SAAewG,EAAQrU,GAC3BpgB,KAAK6L,aAAa4oB,KACnBz0B,KAAK6L,aAAa4oB,IAAU,EAC5Bz0B,KAAKohB,SAAS,IAAIxhB,UAAUizB,MAAMhT,MAAM,YAAa7f,KAAK6L,aAAcuU,MAmBhFpgB,KAAKmuB,QAAU,SAAiBsG,EAAQrU,GAChCpgB,KAAK6L,aAAa4oB,KAClBz0B,KAAK6L,aAAa4oB,IAAU,EAC5Bz0B,KAAKohB,SAAS,IAAIxhB,UAAUizB,MAAMhT,MAAM,UAAW7f,KAAK6L,aAAcuU,MAoB9EpgB,KAAKmiB,MAAQ,SAAesS,EAAQrU,GAChCpgB,KAAKiuB,MAAMwG,EAAQrU,GACnBpgB,KAAKmuB,QAAQsG,EAAQrU,IAgBzBpgB,KAAK6O,KAAO,SAAckL,EAAUqG,GAE5BpgB,KAAK6L,aAAatE,IAAMwS,EAASxS,GAAKvH,KAAK6L,aAAaiC,IAAMiM,EAASjM,IACvE9N,KAAK6L,aAAatE,EAAIwS,EAASxS,EAC/BvH,KAAK6L,aAAaiC,EAAIiM,EAASjM,EAC/B9N,KAAKohB,SAAS,IAAIxhB,UAAUizB,MAAMhT,MAAM,YAAa7f,KAAK6L,aAAcuU,MAehFpgB,KAAK60B,IAAM,SAAazU,GACpBpgB,KAAKohB,SAAS,IAAIxhB,UAAUizB,MAAMhT,MAAM,WAAY7f,KAAK6L,aAAcuU,KAY3EpgB,KAAK+X,MAAQ,SAAeqI,GACxB,IAAK,IAAIqU,KAAU70B,UAAUizB,MAAMO,MAAMC,QACrCrzB,KAAKmuB,QAAQvuB,UAAUizB,MAAMO,MAAMC,QAAQoB,GAASrU,KAiChExgB,UAAUizB,MAAMwC,SAAW,SAAkB9Y,GAEzC3c,UAAUizB,MAAMhT,MAAMgB,OAAOR,KAAKrgB,MAelC,IAAIs1B,EAAgBt1B,KAQpBA,KAAKgzB,gBAAkB,IAAM5yB,OAAOm1B,kBAAoB,GAQxDv1B,KAAKw1B,qBAAuB,IAQ5Bx1B,KAAKy1B,mBAAqB,IAAMr1B,OAAOm1B,kBAAoB,GAS3Dv1B,KAAK6L,aAAe,IAAIjM,UAAUizB,MAAMO,MAExC,IAAIsC,EAAc,EACdC,EAAe,EACfC,EAAe,EACfC,EAAkB,EAClBC,EAAe,EAEfC,EAAgB,CAChB,EAAG,OACH,EAAG,QACH,EAAG,UAGHC,GAAsB,EACtBC,EAAwB,KAE5B1Z,EAAQgB,iBAAiB,YAAY,SAASlb,GAK1C,GAHAA,EAAEme,iBAGEwV,GAA4C,IAArB3zB,EAAE6zB,QAAQ11B,OAAc,CAE/C,IAAI21B,GAAO,IAAIrW,MAAOC,UAGlB0U,EAASsB,EAAcL,GAGvBJ,EAAczpB,aAAa4oB,KAG3Ba,EAAcnH,QAAQsG,EAAQpyB,GAG1B4zB,IACA71B,OAAO8tB,aAAa+H,GACpBA,EAAwB,OAM5BE,EAAON,GAAmBP,EAAcE,sBACjCM,EAAeR,EAAcG,qBAGpCH,EAAcrH,MAAMwG,EAAQpyB,GAI5B4zB,EAAwB71B,OAAOsd,YAAW,WAGtC4X,EAAcnH,QAAQsG,EAAQpyB,GAG9B2zB,GAAsB,IAEvBV,EAAcE,uBAKhBS,IACDD,GAAsB,OAI/B,GAEHzZ,EAAQgB,iBAAiB,cAAc,SAASlb,GAe5C,GAbAA,EAAEme,iBAGFkV,EAAcnxB,KAAK4B,IAAI9D,EAAE6zB,QAAQ11B,OAAQ,GAGrCy1B,IACA71B,OAAO8tB,aAAa+H,GACpBA,EAAwB,OAKvBD,EAAqB,CAGtBA,GAAsB,EAGtB,IAAII,EAAiB/zB,EAAE6zB,QAAQ,GAC/BP,EAAeS,EAAe7B,QAC9BqB,EAAeQ,EAAe5B,QAC9BqB,GAAkB,IAAI/V,MAAOC,UAC7B+V,EAAe,MAIpB,GAEHvZ,EAAQgB,iBAAiB,aAAa,SAASlb,GAE3CA,EAAEme,iBAGF,IAAI6V,EAAQh0B,EAAE6zB,QAAQ,GAClBI,EAAUD,EAAM9B,QAAUoB,EAC1BY,EAAUF,EAAM7B,QAAUoB,EAM9B,GAHAE,GAAgBvxB,KAAKQ,IAAIuxB,GAAW/xB,KAAKQ,IAAIwxB,GAGzB,IAAhBb,EAAmB,CAGnB,IAGI3X,EAAQ,EAHG+X,IAAgB,IAAIhW,MAAOC,UAAY8V,GAMlD9b,EAAW,IAAIna,UAAUy0B,SAASiB,EAAczpB,cACpDkO,EAASxS,GAAK+uB,EAAQvY,EACtBhE,EAASjM,GAAKyoB,EAAQxY,EAGtBhE,EAASxS,EAAIhD,KAAK4B,IAAI5B,KAAKK,IAAI,EAAGmV,EAASxS,GAAIgV,EAAQia,YAAc,GACrEzc,EAASjM,EAAIvJ,KAAK4B,IAAI5B,KAAKK,IAAI,EAAGmV,EAASjM,GAAIyO,EAAQka,aAAe,GAGtEnB,EAAczmB,KAAKkL,EAAU1X,GAG7BszB,EAAeU,EAAM9B,QACrBqB,EAAeS,EAAM7B,aAKpB,GAAoB,IAAhBkB,EAAmB,CAMpB,IAAIjB,EAHR,GAAIlwB,KAAKQ,IAAIwxB,IAAYjB,EAActC,gBAIlByB,EAAb8B,EAAU,EAAY,OACA,KAE1BjB,EAAcnT,MAAMsS,EAAQpyB,GAI5BszB,EAAeU,EAAM9B,QACrBqB,EAAeS,EAAM7B,YAM9B,IAgCP50B,UAAUizB,MAAM6D,YAAc,SAAqBna,GAE/C3c,UAAUizB,MAAMhT,MAAMgB,OAAOR,KAAKrgB,MAelC,IAAI22B,EAAmB32B,KASnBg2B,GAAsB,EAQtBY,EAAkB,KAQlBC,EAAkB,KAQlBZ,EAAwB,KAQxBa,EAAqB,KA2CzB,SAASC,EAAa10B,GAClB,IAAIg0B,EAAQh0B,EAAE6zB,QAAQ,IAAM7zB,EAAE20B,eAAe,GACzCV,EAAUD,EAAM9B,QAAUqC,EAC1BL,EAAUF,EAAM7B,QAAUqC,EAC9B,OAAOtyB,KAAK0yB,KAAKX,EAAQA,EAAUC,EAAQA,IAAYI,EAAiBlB,mBAwB5E,SAASyB,IACL92B,OAAO8tB,aAAa+H,GACpB71B,OAAO8tB,aAAa4I,GACpBd,GAAsB,EAlE1Bh2B,KAAKgzB,gBAAkB,IAAM5yB,OAAOm1B,kBAAoB,GAQxDv1B,KAAKw1B,qBAAuB,IAQ5Bx1B,KAAKy1B,mBAAqB,IAAMr1B,OAAOm1B,kBAAoB,GAM3Dv1B,KAAKm3B,mBAAqB,IA+C1B5a,EAAQgB,iBAAiB,YAAY,SAASlb,GAG1C,GAAK2zB,EAIL,GAAyB,IAArB3zB,EAAE6zB,QAAQ11B,QAA4C,IAA5B6B,EAAE20B,eAAex2B,QAY/C,GANAJ,OAAO8tB,aAAa4I,GAGpBH,EAAiBxI,QAAQvuB,UAAUizB,MAAMO,MAAMC,QAAQC,KAAMjxB,IAGxD00B,EAAa10B,KAEdA,EAAEme,kBAGGmW,EAAiB9qB,aAAa+D,MAAM,CAErC,IAAIymB,EAAQh0B,EAAE20B,eAAe,GAC7BL,EAAiB9nB,KAAKjP,UAAUy0B,SAASC,mBAAmB/X,EAAS8Z,EAAM9B,QAAS8B,EAAM7B,UAC1FmC,EAAiB1I,MAAMruB,UAAUizB,MAAMO,MAAMC,QAAQC,KAAMjxB,GAG3D4zB,EAAwB71B,OAAOsd,YAAW,WACtCiZ,EAAiBxI,QAAQvuB,UAAUizB,MAAMO,MAAMC,QAAQC,KAAMjxB,GAC7D60B,MACDP,EAAiBnB,4BA1BxB0B,OAgCL,GAEH3a,EAAQgB,iBAAiB,cAAc,SAASlb,GAGnB,IAArBA,EAAE6zB,QAAQ11B,QAKd6B,EAAEme,iBArEN,SAAuBne,GACnB,IAAIg0B,EAAQh0B,EAAE6zB,QAAQ,GACtBF,GAAsB,EACtBY,EAAkBP,EAAM9B,QACxBsC,EAAkBR,EAAM7B,QAoExB4C,CAAc/0B,GAGdjC,OAAO8tB,aAAa+H,GAGpBa,EAAqB12B,OAAOsd,YAAW,WACnC,IAAI2Y,EAAQh0B,EAAE6zB,QAAQ,GACtBS,EAAiB9nB,KAAKjP,UAAUy0B,SAASC,mBAAmB/X,EAAS8Z,EAAM9B,QAAS8B,EAAM7B,UAC1FmC,EAAiBxU,MAAMviB,UAAUizB,MAAMO,MAAMC,QAAQG,MAAOnxB,GAC5D60B,MACDP,EAAiBQ,qBAlBhBD,OAoBL,GAEH3a,EAAQgB,iBAAiB,aAAa,SAASlb,GAG3C,GAAK2zB,EAQL,GAJIe,EAAa10B,IACbjC,OAAO8tB,aAAa4I,GAGC,IAArBz0B,EAAE6zB,QAAQ11B,QAMd,GAAIm2B,EAAiB9qB,aAAa+D,KAAM,CAEpCvN,EAAEme,iBAGF,IAAI6V,EAAQh0B,EAAE6zB,QAAQ,GACtBS,EAAiB9nB,KAAKjP,UAAUy0B,SAASC,mBAAmB/X,EAAS8Z,EAAM9B,QAAS8B,EAAM7B,SAAUnyB,SAXpG60B,OAeL,KAkDHt3B,WArBAA,UAAYA,WAAa,KAqBA,IAanBsW,OAAS,SAAyBuM,EAAQ3a,GAQhD,IAAIuvB,EAAar3B,KASbs3B,EAAgB,GA8DpBt3B,KAAK8H,MAAQA,EAmBb9H,KAAK0T,OAAS,SAA4B6jB,EAAa90B,EAAUsO,GAG7D,IAAI9D,EArEkB,SAA6B8D,GAGnD,IAAIymB,EAAYF,EAAcvmB,GAC9B,IAAKymB,EACD,OAAO,KAGX,IAAIvqB,EAAWuqB,EAAUryB,QAKzB,OAJyB,IAArBqyB,EAAUh3B,eACH82B,EAAcvmB,GAGlB9D,EAwDQwqB,CAAoB1mB,GAC/B9D,GACAA,EAASsqB,EAAa90B,IAU9BzC,KAAKyY,WAAa,KAelBzY,KAAK03B,mBAAqB,SAA4B3mB,EAAM4mB,GAGpDA,GAvEkB,SAA6B5mB,EAAM9D,GAGzD,IAAIuqB,EAAYF,EAAcvmB,GACzBymB,IACDA,EAAY,GACZF,EAAcvmB,GAAQymB,GAI1BA,EAAUpyB,KAAK6H,GA8DX2qB,CAAoB7mB,EAAM4mB,GAG9BlV,EAAOtR,yBAAyBkmB,EAAWvvB,MAAOiJ,IAmBtD/Q,KAAKwQ,mBAAqB,SAA4B/N,EAAUsO,GAC5D,OAAO0R,EAAOvR,yBAAyBmmB,EAAWvvB,MAAOrF,EAAUsO,KAY3EnR,UAAUsW,OAAO2hB,YAAc,IAU/Bj4B,UAAUsW,OAAO4hB,sBAAwB,yDAqBrCl4B,UAAYA,WAAa,IAWnBm4B,iBAAmB,SAASC,GAQlC,IAAIC,EAAMj4B,KAUNk4B,EAAkB,GAUlB9oB,EAAU,GAWV+oB,EAAiB,GAajBC,EAAW,SAAkB7b,EAAS8b,GAGlC9b,EAAQ+b,UACR/b,EAAQ+b,UAAUC,IAAIF,GAItB9b,EAAQic,WAAa,IAAMH,GAe/BI,EAAc,SAAqBlc,EAAS8b,GAGxC9b,EAAQ+b,UACR/b,EAAQ+b,UAAUI,OAAOL,GAIzB9b,EAAQic,UAAYjc,EAAQic,UAAUG,QAAQ,gBAC1C,SAA+BxU,EAAOyU,GAGlC,OAAIA,IAAkBP,EACX,GAGJlU,MAenB0U,EAAc,EAkCdC,EAAgB,SAAuBvc,EAAS7O,EAAOC,EAAQorB,GAQ9D/4B,KAAK0N,MAAQA,EAQb1N,KAAK2N,OAASA,EASf3N,KAAK+d,MAAQ,SAASib,GAGlBzc,EAAQzC,MAAMpM,MAAUA,EAASsrB,EAAU,KAC3Czc,EAAQzC,MAAMnM,OAAUA,EAASqrB,EAAU,KAGvCD,IACAxc,EAAQzC,MAAMmf,WAActrB,EAASqrB,EAAU,KAC/Czc,EAAQzC,MAAMof,SAAaF,EAAS,QAkB5CG,EAAmB,SAA0BC,GAG7C,IAAK,IAAIz4B,EAAE,EAAGA,EAAIy4B,EAAM54B,OAAQG,IAAK,CAIjC,KADWy4B,EAAMz4B,KACHu3B,GACV,OAAO,EAKf,OAAO,GAkBPmB,EAAe,SAAsBC,GAGrC,IAAIC,EAAOtB,EAAIsB,KAAKD,GACpB,IAAKC,EACD,OAAO,KAGX,IAAK,IAAI54B,EAAI44B,EAAK/4B,OAAS,EAAGG,GAAK,EAAGA,IAAK,CAGvC,IAAI64B,EAAYD,EAAK54B,GAGrB,GAAIw4B,EAAiBK,EAAUC,UAC3B,OAAOD,EAKf,OAAO,MAgBPvL,EAAQ,SAAeqL,EAASI,GAGhC,IAAKtqB,EAAQkqB,GAAU,CAEnBlB,EAASsB,EAAY,yBAGrB,IAAIvsB,EAAMksB,EAAaC,GAGvB,GAAInsB,EAAIohB,SAAU,CAGd,IAAIoL,EAAgB,0BAA4BC,EAAWzsB,EAAIohB,UAG3DsL,EAAiB3B,EAAgB/qB,EAAIohB,eAGlBuL,IAAnBD,GAEAzB,EAAS2B,EAAUJ,GACnBzB,EAAgB/qB,EAAIohB,UAAYphB,EAAIkC,OAGhClC,EAAIkC,QAAU4oB,EAAIrU,WAClBqU,EAAIrU,UAAUzW,EAAIkC,UAOtBopB,EAAYsB,EAAUJ,UACfzB,EAAgB/qB,EAAIohB,UAGvBsL,GAAkB5B,EAAIpU,SACtBoU,EAAIpU,QAAQgW,SAOf5B,EAAIrU,WACTqU,EAAIrU,UAAUzW,EAAIkC,QAGtBD,EAAQkqB,IAAW,IAkBvBnL,EAAU,SAAiBmL,EAASI,GAGpC,GAAItqB,EAAQkqB,GAAU,CAElBb,EAAYiB,EAAY,yBAGxB,IAAIvsB,EAAMksB,EAAaC,IAGlBnsB,EAAIohB,UAAY0J,EAAIpU,SACrBoU,EAAIpU,QAAQ1W,EAAIkC,QAGpBD,EAAQkqB,IAAW,IAOvBS,EAAWngB,SAASC,cAAc,OACtCkgB,EAASvB,UAAY,gBAGrBuB,EAASC,cACTD,EAASE,YACTF,EAASG,UACTH,EAASI,YAAgB,SAA2B93B,GAOhD,OAJIw2B,GACAA,IAEJx2B,EAAEse,mBACK,GAUX3gB,KAAK+yB,oBAAsB,EAS3B/yB,KAAK4jB,UAAY,KASjB5jB,KAAK6jB,QAAU,KAOf7jB,KAAKg4B,OAAS,IAAIp4B,UAAUm4B,iBAAiBqC,OAAOpC,GAQpDh4B,KAAKua,WAAa,WACd,OAAOwf,GAWX/5B,KAAKwO,OAAS,SAASd,GAMnB,IAHA,IAAI2sB,EAAO91B,KAAKC,MAAc,GAARkJ,EAAauqB,EAAID,OAAOtqB,OAAS,GAG9C/M,EAAE,EAAGA,EAAEw3B,EAAe33B,OAAQG,IAAK,CACpBw3B,EAAex3B,GACrBod,MAAMsc,KAuB5B,IAAIC,EAAa,SAAoBvpB,EAAMyC,GAGvC,GAAIA,aAAkB8M,MAAO,CAEzB,IADA,IAAIiZ,EAAO,GACF54B,EAAE,EAAGA,EAAI6S,EAAOhT,OAAQG,IAC7B44B,EAAKn0B,KAAK,IAAIxF,UAAUm4B,iBAAiBwC,IAAI/mB,EAAO7S,GAAIoQ,IAE5D,OAAOwoB,EAIX,MAAsB,iBAAX/lB,EACA,CAAC,IAAI5T,UAAUm4B,iBAAiBwC,IAAI,CACvCxpB,KAASA,EACT1B,OAASmE,KAKK,iBAAXA,EACA,CAAC,IAAI5T,UAAUm4B,iBAAiBwC,IAAI,CACvCxpB,KAAQA,EACRypB,MAAQhnB,KAKT,CAAC,IAAI5T,UAAUm4B,iBAAiBwC,IAAI/mB,EAAQzC,KAuCvD/Q,KAAKu5B,KAnBS,SAAiBA,GAE3B,IAAIkB,EAAY,GAGhB,IAAK,IAAI1pB,KAAQinB,EAAOuB,KACpBkB,EAAU1pB,GAAQupB,EAAWvpB,EAAMwoB,EAAKxoB,IAG5C,OAAO0pB,EAUCC,CAAQ1C,EAAOuB,MAiB3B,IAAIK,EAAa,SAAoB7oB,GAQjC,OALcA,EACN4nB,QAAQ,kBAAmB,SAC3BA,QAAQ,iBAAkB,KAC1B7K,gBA6CS,SAAS6M,EAAepe,EAAS/I,EAAQzC,GAE1D,IAAIpQ,EAGA6e,EAAM5F,SAASC,cAAc,OAOjC,GAJI9I,GACAqnB,EAAS5Y,EAAK,iBAAmBoa,EAAW7oB,IAG5CyC,aAAkB8M,MAMlB,IAHA8X,EAAS5Y,EAAK,uBAGT7e,EAAE,EAAGA,EAAI6S,EAAOhT,OAAQG,IACzBg6B,EAAenb,EAAKhM,EAAO7S,SAK9B,GAAI6S,aAAkB0C,OAAQ,CAG/BkiB,EAAS5Y,EAAK,uBAGd,IAAI4Z,EAAQljB,OAAOqjB,KAAK/lB,GAAQmL,OAChC,IAAKhe,EAAE,EAAGA,EAAIy4B,EAAM54B,OAAQG,IAAK,CACzBoQ,EAAOqoB,EAAMz4B,GACjBg6B,EAAenb,EAAKhM,EAAOzC,GAAOA,SAMrC,GAAsB,iBAAXyC,EAGZ4kB,EAAS5Y,EAAK,qBAGd2Y,EAAe/yB,KAAK,IAAI0zB,EAActZ,EAAKhM,EAAQA,SAKlD,GAAsB,iBAAXA,EAAqB,CAGjC,IAAI8lB,EAAU9lB,EACS,IAAnB8lB,EAAQ94B,SACR84B,EAAU,KAAOA,EAAQ14B,WAAW,GAAGg6B,SAAS,KAGpDxC,EAAS5Y,EAAK,+BAGd,IAAIka,EAAa9f,SAASC,cAAc,OACxC6f,EAAWlB,UAAY,uCACuBoB,EAAWN,GAGzD,IAAIC,EAAOtB,EAAIsB,KAAK/lB,GACpB,GAAI+lB,EACA,IAAK54B,EAAE,EAAGA,EAAI44B,EAAK/4B,OAAQG,IAAK,CAG5B,IAAIwM,EAAMosB,EAAK54B,GAGXk6B,EAAajhB,SAASC,cAAc,OACxCghB,EAAWrC,UAAc,oBACzBqC,EAAWC,YAAc3tB,EAAIqtB,MAG7B,IAAK,IAAIO,EAAE,EAAGA,EAAI5tB,EAAIssB,SAASj5B,OAAQu6B,IAAK,CACxC,IAAIC,EAAc7tB,EAAIssB,SAASsB,GAC/B3C,EAASyC,EAAY,0BAA4BjB,EAAWoB,IAC5D5C,EAASsB,EAAY,sBAA4BE,EAAWoB,IAIhEtB,EAAWpf,YAAYugB,GAM/Brb,EAAIlF,YAAYof,GAChBvB,EAAe/yB,KAAK,IAAI0zB,EAActZ,EAAKyY,EAAID,OAAOiD,UAAUznB,IAAW,EAAG,GAAG,IAWjF,IA6CI0nB,EAAe,SAAsB74B,GACrCA,EAAEme,iBACkB,IAAhBqY,GACA1K,EAAQ3a,EAAQkmB,IAIxBA,EAAWnc,iBAAiB,cApDX,SAAoBlb,GACjCA,EAAEme,iBACFqY,EAAcZ,EAAIlF,oBAClB9E,EAAMza,EAAQkmB,MAiDsC,GACxDA,EAAWnc,iBAAiB,YAtCT,SAAsBlb,GACrCA,EAAEme,iBACFqY,EAAcZ,EAAIlF,oBAClB5E,EAAQ3a,EAAQkmB,MAmCoC,GAGxDA,EAAWnc,iBAAiB,aA1BX,SAAoBlb,GACjCA,EAAEme,iBACkB,IAAhBqY,GACA5K,EAAMza,EAAQkmB,MAuBiC,GACvDA,EAAWnc,iBAAiB,UAAa2d,GAAc,GACvDxB,EAAWnc,iBAAiB,WAAa2d,GAAc,GAK3D3e,EAAQjC,YAAYkF,GAKxBmb,CAAeZ,EAAU/B,EAAOA,SAapCp4B,UAAUm4B,iBAAiBqC,OAAS,SAASnF,GASzCj1B,KAAKm7B,SAAWlG,EAASkG,SAQzBn7B,KAAKmK,KAAO8qB,EAAS9qB,KAUrBnK,KAAKu5B,KAAOtE,EAASsE,KAarBv5B,KAAKg4B,OAAS/C,EAAS+C,OAUvBh4B,KAAK0N,MAAQunB,EAASvnB,MAUtB1N,KAAKi7B,UAAYhG,EAASgG,WAAa,IAqB3Cr7B,UAAUm4B,iBAAiBwC,IAAM,SAAStF,EAAUlkB,GAOhD/Q,KAAK+Q,KAAOA,GAAQkkB,EAASlkB,KAQ7B/Q,KAAKw6B,MAAQvF,EAASuF,OAASx6B,KAAK+Q,KASpC/Q,KAAKqP,OAAS4lB,EAAS5lB,QAAU,SAAuBmrB,GAGpD,IAAKA,GAA0B,IAAjBA,EAAMh6B,OAChB,OAAO,KAGX,IAAI46B,EAAWZ,EAAM55B,WAAW,GAChC,OAAIw6B,GAAY,GAAUA,GAAY,IAC3BA,EAGPA,GAAY,KAAUA,GAAY,QAC3B,SAAaA,EAGjB,KAhBsB,CAkB9Bp7B,KAAKw6B,OAWRx6B,KAAKuuB,SAAW0G,EAAS1G,SAWzBvuB,KAAKy5B,SAAWxE,EAASwE,UAAY,KAuBrC75B,UAAYA,WAAa,IAYnB8Q,aAAe,SAAS+R,EAAQ3a,GAQtC,IAAI4a,EAAc1iB,KAMlBA,KAAK8H,MAAQA,EAUb9H,KAAKwB,MAAQ,KAQbxB,KAAKsB,SAAW,SAASpB,GACrBuiB,EAAOnhB,SAASohB,EAAY5a,MAAO5H,IAMvCF,KAAK+B,QAAU,WACX0gB,EAAOpR,UAAUqR,EAAY5a,UAwBjClI,UAAYA,WAAa,IAQnBwX,OAAS,WAMf,IAAID,EAASnX,KASTgF,EAAS,GAQTq2B,EAAiB,GAGjBC,GAAe,EAGfC,EAAc,EAUlBv7B,KAAKuX,QAAU,SAASzT,GAiBpB,IAdIy3B,EAAc,MAAQD,GAAeC,IAErCv2B,EAASA,EAAO4oB,UAAU2N,GAG1BD,GAAeC,EACfA,EAAc,GAKlBv2B,GAAUlB,EAGHw3B,EAAct2B,EAAOxE,QAAQ,CAGhC,GAAI86B,GAAeC,EAAa,CAG5B,IAAIhf,EAAUvX,EAAO4oB,UAAU2N,EAAaD,GACxCE,EAAax2B,EAAO4oB,UAAU0N,EAAaA,EAAY,GAM3D,GAHAD,EAAej2B,KAAKmX,GAGF,KAAdif,EAAmB,CAGnB,IAAI3iB,EAASwiB,EAAel2B,QAGA,MAAxBgS,EAAOE,eACPF,EAAOE,cAAcwB,EAAQwiB,GAGjCA,EAAe76B,OAAS,OAGvB,GAAkB,KAAdg7B,EACL,MAAM,IAAIC,MAAM,uBAIpBF,EAAcD,EAAc,EAKhC,IAAII,EAAa12B,EAAO0oB,QAAQ,IAAK6N,GACrC,IAAmB,GAAfG,EAiBC,CACDH,EAAcv2B,EAAOxE,OACrB,MAhBA,IAAIA,EAAS6M,SAASrI,EAAO4oB,UAAU0N,EAAY,EAAGI,IACtD,GAAIC,MAAMn7B,GACN,MAAM,IAAIi7B,MAAM,4CAMpBH,GAHAC,EAAcG,EAAa,GAGCl7B,IAyBxCR,KAAKqX,cAAgB,OAuBrBzX,UAAYA,WAAa,IAUnBy0B,SAAW,SAAkBY,GAEnCA,EAAWA,GAAY,GAQvBj1B,KAAKuH,EAAI0tB,EAAS1tB,GAAK,EAQvBvH,KAAK8N,EAAImnB,EAASnnB,GAAK,EAkBvB9N,KAAKs0B,mBAAqB,SAA4B/X,EAASgY,EAASC,GAEpEx0B,KAAKuH,EAAIgtB,EAAUhY,EAAQqf,WAC3B57B,KAAK8N,EAAI0mB,EAAUjY,EAAQsf,UAI3B,IADA,IAAI3tB,EAASqO,EAAQuf,aACd5tB,GAAYA,IAAW0L,SAAStG,MACnCtT,KAAKuH,GAAK2G,EAAO0tB,WAAa1tB,EAAO6tB,WACrC/7B,KAAK8N,GAAKI,EAAO2tB,UAAa3tB,EAAO8tB,UAErC9tB,EAASA,EAAO4tB,aAKpB,GAAI5tB,EAAQ,CACR,IAAI+tB,EAAqBriB,SAAStG,KAAKyoB,YAAcniB,SAASsiB,gBAAgBH,WAC1EI,EAAoBviB,SAAStG,KAAK0oB,WAAapiB,SAASsiB,gBAAgBF,UAE5Eh8B,KAAKuH,GAAK2G,EAAO0tB,WAAaK,EAC9Bj8B,KAAK8N,GAAKI,EAAO2tB,UAAaM,KA2B1Cv8B,UAAUy0B,SAASC,mBAAqB,SAA4B/X,EAASgY,EAASC,GAClF,IAAIza,EAAW,IAAIna,UAAUy0B,SAE7B,OADAta,EAASua,mBAAmB/X,EAASgY,EAASC,GACvCza,IAsBPna,UAAYA,WAAa,IAanBkD,eAAiB,SAAwBmyB,GAQ/Cj1B,KAAKqD,eAAiB4xB,EAAS5xB,eAO/BrD,KAAKyE,SAAWwwB,EAASxwB,SAOzBzE,KAAK2E,KAAOswB,EAAStwB,MAiBzB/E,UAAUkD,eAAeC,MAAQ,SAAqBN,GAElD,IAAIY,EAIAsB,EAAO,KAGPF,EAAW,EAGf,GAAiC,cAA7BhC,EAASmrB,UAAU,EAAG,GACtBnrB,EAAWA,EAASmrB,UAAU,GAC9BvqB,EAAiB,MAIhB,CAAA,GAAkC,eAA9BZ,EAASmrB,UAAU,EAAG,IAO3B,OAAO,KANPnrB,EAAWA,EAASmrB,UAAU,IAC9BvqB,EAAiB,EASrB,IADA,IAAIsP,EAAalQ,EAAS25B,MAAM,KACvBz7B,EAAI,EAAGA,EAAIgS,EAAWnS,OAAQG,IAAK,CAExC,IAAI07B,EAAY1pB,EAAWhS,GAGvB27B,EAASD,EAAU3O,QAAQ,KAC/B,IAAgB,IAAZ4O,EACA,OAAO,KAGX,IAAIvrB,EAAQsrB,EAAUzO,UAAU,EAAG0O,GAC/BjqB,EAAQgqB,EAAUzO,UAAU0O,EAAO,GAGvC,OAAQvrB,GAGJ,IAAK,WACDtM,EAAW4I,SAASgF,GACpB,MAGJ,IAAK,OACD1N,EAAO0I,SAASgF,GAChB,MAGJ,QACI,OAAO,MAOnB,OAAa,OAAT1N,EACO,KAGJ,IAAI/E,UAAUkD,eAAe,CAChCO,eAAiBA,EACjBoB,SAAiBA,EACjBE,KAAiBA,MAwBrB/E,UAAYA,WAAa,IAcnB28B,iBAAmB,SAA0B5wB,GAQnD,IAAI6wB,EAAYx8B,KAsCZ8a,EAAS,GAST2hB,EAAe,GASfC,EAA8B,EAS9BC,EAAwB,EASxBC,EAAiB,IAAIh9B,UAAU28B,iBAAiBM,gBAShDC,EAAiB,IAAIl9B,UAAU8L,OAAOkxB,GAStCG,GAAgB,EAShBC,EAAsB,KAStBC,EAAqB,KAUrBC,EAAc,KAGlBJ,EAAer3B,UAGfq3B,EAAe9tB,aAAagI,YAAW,GAGvCrL,EAAO0L,cAAgB,SAA2BwB,EAAQskB,GAGtD,IAAIC,EAAc,IAAIx9B,UAAU28B,iBAAiBc,OAAOC,YAAYzkB,EAAQskB,EAAKl4B,SAMjF,GALAw3B,EAAar3B,KAAKg4B,GAClBV,GAA+BU,EAAYG,UAI5B,SAAX1kB,EAAmB,CAGnB,IAAIX,EAAY7K,SAAS8vB,EAAK,IAG1BliB,EAAQ,IAAIrb,UAAU28B,iBAAiBc,OAAOnlB,EAAWukB,GAC7D3hB,EAAO1V,KAAK6V,IAKU,IAAlBH,EAAOta,QAAiBk8B,GA5IP,OA6IVxkB,EAAYykB,GApIF,OAqIjB1hB,EAAMuiB,UAAW,EACjBb,EAAwBzkB,EACxBwkB,EAA8B,GAIlCD,EAAe,GAGXD,EAAUnyB,YACVmyB,EAAUnyB,WAAWmyB,EAAUiB,iBAkB3C,IAAIC,EAAsB,SAA6BxlB,GAGnD,OAAsB,IAAlB4C,EAAOta,OACA,EAGJ0X,EAAY4C,EAAO,GAAG5C,WAyB7BylB,EAAY,SAASA,EAAUC,EAAUC,EAAU3lB,GAGnD,GAAI0lB,IAAaC,EACb,OAAOD,EAGX,IAAIE,EAAWv5B,KAAKC,OAAOo5B,EAAWC,GAAY,GAC9CE,EAAeL,EAAoB5iB,EAAOgjB,GAAU5lB,WAGxD,OAAIA,EAAY6lB,GAAgBD,EAAWF,EAChCD,EAAUC,EAAUE,EAAW,EAAG5lB,GAGzCA,EAAY6lB,GAAgBD,EAAWD,EAChCF,EAAUG,EAAW,EAAGD,EAAU3lB,GAItC4lB,GAaPE,EAAc,SAAqBl2B,GAKnC,IAHA,IAAImT,EAAQH,EAAOhT,GAGVnH,EAAI,EAAGA,EAAIsa,EAAMwhB,aAAaj8B,OAAQG,IAAK,CAChD,IAAIy8B,EAAcniB,EAAMwhB,aAAa97B,GACrCi8B,EAAeqB,mBAAmBb,EAAYvkB,OAAQukB,EAAYD,MAIlEliB,EAAMuiB,WAAaviB,EAAMijB,aACzBpB,EAAe9vB,aAAY,SAA0BrE,GACjDsS,EAAMijB,YAAcv1B,MAyB5Bw1B,EAAc,SAASA,EAAYr2B,EAAOmF,EAAUmxB,GAGpDC,IAGAnB,EAAc98B,OAAOsd,YAAW,WAE5B,IAAI4gB,EAGJ,IAAKA,EAAax2B,EAAOw2B,GAAc,EAAGA,IAAc,CAEpD,IAAIrjB,EAAQH,EAAOwjB,GAInB,GAAIA,IAAevB,EACf,MAIJ,GAAI9hB,EAAMijB,YAAa,CACnBpB,EAAe1uB,YAAY6M,EAAMijB,aACjC,OAMRI,IAKA,IAHA,IAAIC,GAAY,IAAIze,MAAOC,UAGpBue,GAAcx2B,EAAOw2B,IAAc,CAItC,IADkB,IAAIxe,MAAOC,UACXwe,GApSN,EAqSR,MAEJP,EAAYM,GAIhBvB,EAAeuB,EAAa,EAGxB9B,EAAUgC,QACVhC,EAAUgC,OAAOhC,EAAUiC,eAG3B1B,IAAiBj1B,EACjBq2B,EAAYr2B,EAAOmF,EACf1I,KAAKK,IAAIw5B,IAAS,IAAIte,MAAOC,UAAYwe,GAAY,IAIzDtxB,MAELmxB,GAAS,IAUZC,EAAY,WACZj+B,OAAO8tB,aAAagP,IAUpBwB,EAAmB,SAASA,IAG5B,GAAI3B,EAAe,EAAIjiB,EAAOta,OAAQ,CAGlC,IAIIm+B,EAJO7jB,EAAOiiB,EAAe,GAIJ7kB,UAAY8kB,EAAsBC,EAI3DmB,EAAQ75B,KAAKK,IAAI+5B,GAAoB,IAAI7e,MAAOC,UAAW,GAG/Doe,EAAYpB,EAAe,GAAG,WAC1B2B,MACDN,QAMH5B,EAAUoC,SAYlB5+B,KAAKqK,WAAa,KAOlBrK,KAAK6+B,OAAS,KAUd7+B,KAAK8+B,QAAU,KASf9+B,KAAKw+B,OAAS,KAUdx+B,KAAKyF,QAAU,SAAiBvF,GAC5ByL,EAAOlG,QAAQvF,IAOnBF,KAAKmJ,WAAa,WACdwC,EAAOxC,cAaXnJ,KAAKgP,WAAa,WACd,OAAO8tB,EAAe9tB,cAS1BhP,KAAK++B,UAAY,WACb,QAAS/B,GAUbh9B,KAAKy+B,YAAc,WAGf,OAAsB,IAAlB1B,EACO,EAIJW,EAAoB5iB,EAAOiiB,GAAc7kB,YAWpDlY,KAAKy9B,YAAc,WAGf,OAAsB,IAAlB3iB,EAAOta,OACA,EAGJk9B,EAAoB5iB,EAAOA,EAAOta,OAAS,GAAG0X,YAczDlY,KAAKqd,KAAO,WAIR,IAAKmf,EAAUuC,aAAehC,EAAe,EAAIjiB,EAAOta,OAAQ,CAGxDg8B,EAAUqC,QACVrC,EAAUqC,SAId,IAAIpuB,EAAOqK,EAAOiiB,EAAe,GACjCC,EAAsBvsB,EAAKyH,UAC3B+kB,GAAqB,IAAInd,MAAOC,UAGhC2e,MAoBR1+B,KAAKg/B,KAAO,SAAcjlB,EAAU9M,GAGhC,GAAsB,IAAlB6N,EAAOta,OAAX,CAIA,IAAIy+B,EAAoBzC,EAAUuC,YAClCvC,EAAUoC,QAGVT,EAAYR,EAAU,EAAG7iB,EAAOta,OAAS,EAAGuZ,IAAW,WAG/CklB,GACAzC,EAAUnf,OAGVpQ,GACAA,SAaZjN,KAAK4+B,MAAQ,WAGTP,IAGI7B,EAAUuC,cAGNvC,EAAUsC,SACVtC,EAAUsC,UAGd9B,EAAsB,KACtBC,EAAqB,QAyBjCr9B,UAAU28B,iBAAiBc,OAAS,SAAgBnlB,EAAWukB,GAW3Dz8B,KAAKw9B,UAAW,EAQhBx9B,KAAKkY,UAAYA,EAQjBlY,KAAKy8B,aAAeA,EAUpBz8B,KAAKk+B,YAAc,MAgBvBt+B,UAAU28B,iBAAiBc,OAAOC,YAAc,SAAqBzkB,EAAQskB,GAQzE,IAAIC,EAAcp9B,KAOlBA,KAAK6Y,OAASA,EAOd7Y,KAAKm9B,KAAOA,EAWZn9B,KAAKu9B,QAAU,WAMX,IAHA,IAAIzyB,EAAOsyB,EAAYvkB,OAAOrY,OAGrBG,EAAI,EAAGA,EAAIy8B,EAAYD,KAAK38B,OAAQG,IACzCmK,GAAQsyB,EAAYD,KAAKx8B,GAAGH,OAEhC,OAAOsK,IAcflL,UAAU28B,iBAAiBM,gBAAkB,WAQzC,IAAIlxB,EAAS3L,KAEbA,KAAKyF,QAAU,SAAiBvF,KAIhCF,KAAKkP,YAAc,SAAqBgwB,KAIxCl/B,KAAKmJ,WAAa,aAgBlBnJ,KAAKi+B,mBAAqB,SAA4BplB,EAAQskB,GACtDxxB,EAAO0L,eACP1L,EAAO0L,cAAcwB,EAAQskB,MAwBrCv9B,UAAYA,WAAa,IAcnBoJ,OAAS,SAASD,EAAMqI,GAQ9B,IAAI+tB,EAAcn/B,KAQlBA,KAAK+I,KAAOA,EAUZ/I,KAAKoR,QAAUA,EAQfpR,KAAKwL,QAAU,WACX,OAAO2zB,EAAYp2B,KAAO,GAAKo2B,EAAYp2B,KAAO,MAQ1DnJ,UAAUoJ,OAAOC,KAAO,CAOpBC,QAAW,EAOXk2B,YAAe,IAOfC,aAAgB,IAOhBC,YAAe,IAQfC,iBAAoB,IAQpBC,eAAkB,IAQlBC,mBAAsB,IAQtBC,kBAAqB,IAQrBl2B,gBAAmB,IAQnBm2B,mBAAsB,IAQtBC,qBAAwB,IAQxBC,iBAAoB,IAQpBC,gBAAmB,IAOnBC,eAAkB,IAOlBC,mBAAsB,IAQtBC,oBAAuB,IAQvBC,iBAAoB,IAOpBC,eAAkB,IAOlBC,eAAkB,IAOlBC,gBAAmB,IAQnBC,gBAAmB,KAgBvB1gC,UAAUoJ,OAAOC,KAAKs3B,aAAe,SAAsB9+B,GAGvD,OAAQA,GAGJ,KAAK,IACD,OAAO7B,UAAUoJ,OAAOC,KAAK+2B,mBAGjC,KAAK,IACD,OAAOpgC,UAAUoJ,OAAOC,KAAKi3B,iBAGjC,KAAK,IACD,OAAOtgC,UAAUoJ,OAAOC,KAAKw2B,mBAGjC,KAAK,IACD,OAAO7/B,UAAUoJ,OAAOC,KAAKq3B,gBAGjC,KAAK,IACD,OAAO1gC,UAAUoJ,OAAOC,KAAKq2B,YAKrC,OAAO1/B,UAAUoJ,OAAOC,KAAKo2B,cAgBjCz/B,UAAUoJ,OAAOC,KAAKu3B,kBAAoB,SAA2Bz3B,GAGjE,OAAQA,GAGJ,KAAK,IACD,OAAOnJ,UAAUoJ,OAAOC,KAAKC,QAGjC,KAAK,KACL,KAAK,KACD,OAAOtJ,UAAUoJ,OAAOC,KAAK02B,mBAGjC,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACD,OAAO//B,UAAUoJ,OAAOC,KAAK22B,qBAKrC,OAAOhgC,UAAUoJ,OAAOC,KAAKo2B,eAuB7Bz/B,UAAYA,WAAa,IAWnBsjB,aAAe,SAASpjB,GAQ9B,IAAIC,EAAcC,KAQdygC,EAAe,IAAI7gC,UAAUC,kBAAkBC,GAQ/C4gC,EAAkB,EAQlB3S,EAAY,EA+EhB0S,EAAa5/B,OAAS,SAASmE,GAG3B,IAAIue,EArER,SAAuBve,GAKnB,IAHA,IAAIue,EAAO,GAEPriB,EAAQ,IAAIR,WAAWsE,GAClBrE,EAAE,EAAGA,EAAEO,EAAMV,OAAQG,IAAK,CAG/B,IAAI0R,EAAQnR,EAAMP,GAGM,IAApB+/B,EAGuB,MAAV,IAARruB,GACDkR,GAAQniB,OAAOC,aAAagR,GAGJ,MAAV,GAARA,IACN0b,EAAoB,GAAR1b,EACZquB,EAAkB,GAIM,MAAV,GAARruB,IACN0b,EAAoB,GAAR1b,EACZquB,EAAkB,GAIM,MAAV,EAARruB,IACN0b,EAAoB,EAAR1b,EACZquB,EAAkB,GAKlBnd,GAAQ,IAKY,MAAV,GAARlR,IAEN0b,EAAaA,GAAa,EAAc,GAAR1b,EAIR,KAHxBquB,IAIInd,GAAQniB,OAAOC,aAAa0sB,MAMhC2S,EAAkB,EAClBnd,GAAQ,KAKhB,OAAOA,EAQIod,CAAc37B,GAGrBjF,EAAYujB,QACZvjB,EAAYujB,OAAOC,IAK3Bkd,EAAa3/B,MAAQ,WACbf,EAAYe,OACZf,EAAYe,SAUpBd,KAAKsjB,OAAS,KAMdtjB,KAAKc,MAAQ,OAsBblB,UAAYA,WAAa,IAUnBghC,aAAe,SAAS9gC,GAQ9B,IAAIkB,EAAchB,KAQd6gC,EAAe,IAAIjhC,UAAUmB,kBAAkBjB,GAQ/CkF,EAAS,IAAItE,WAAW,MAQxBF,EAAS,EAqCb,SAASsgC,EAAc/S,GAEnB,IAAIlQ,EACA3c,EAGJ,GAAI6sB,GAAa,IACblQ,EAAO,EACP3c,EAAQ,OAIP,GAAI6sB,GAAa,KAClBlQ,EAAO,IACP3c,EAAQ,OAIP,GAAI6sB,GAAa,MAClBlQ,EAAO,IACP3c,EAAQ,MAIP,CAAA,KAAI6sB,GAAa,SAQlB,YADA+S,EAAc,OANdjjB,EAAO,IACP3c,EAAQ,GA/ChB,SAAkBA,GAGd,GAAIV,EAAOU,GAAS8D,EAAOxE,OAAQ,CAC/B,IAAIugC,EAAa,IAAIrgC,WAA0B,GAAdF,EAAOU,IACxC6/B,EAAW/8B,IAAIgB,GACfA,EAAS+7B,EAGbvgC,GAAUU,EAgDV8/B,CAAS9/B,GAIT,IAHA,IAAIW,EAASrB,EAAS,EAGbG,EAAE,EAAGA,EAAEO,EAAOP,IACnBqE,EAAOnD,KAAY,IAAoB,GAAZksB,EAC3BA,IAAc,EAIlB/oB,EAAOnD,GAAUgc,EAAOkQ,EAhF5B8S,EAAar/B,MAAQ,SAASC,GACtBT,EAAYQ,OACZR,EAAYQ,MAAMC,IAoH1BzB,KAAKihC,SAAW,SAAS1d,GACjBA,EAAK/iB,QACLqgC,EAAaj/B,SAzBrB,SAAuB2hB,GAGnB,IAAK,IAAI5iB,EAAE,EAAGA,EAAE4iB,EAAK/iB,OAAQG,IAEzBmgC,EADgBvd,EAAK3iB,WAAWD,IAKpC,GAAIH,EAAS,EAAG,CACZ,IAAI0gC,EAAal8B,EAAOlD,SAAS,EAAGtB,GAEpC,OADAA,EAAS,EACF0gC,GAaeC,CAAc5d,KAO5CvjB,KAAK+B,QAAU,WACX8+B,EAAa9+B,WAUjB/B,KAAKwB,MAAQ,OAsBb5B,UAAYA,WAAa,IAanBwhC,MAAQ,SAAe7kB,GAE7B3c,UAAUigB,MAAMgB,OAAOR,KAAKrgB,MAQ5B,IAAIqhC,EAAYrhC,KAUZshC,EAAyB/8B,KAAKC,MAAM,GAAKpE,OAAOm1B,kBAOpDv1B,KAAKk2B,QAAU,GAMfl2B,KAAKuhC,cAAgB,EAgCrBhlB,EAAQgB,iBAAiB,cAAc,SAAoBlb,GAGvD,IAAK,IAAI1B,EAAI,EAAGA,EAAI0B,EAAE20B,eAAex2B,OAAQG,IAAK,CAE9C,IAAI6gC,EAAen/B,EAAE20B,eAAer2B,GAChC2sB,EAAakU,EAAalU,WAG9B,IAAI+T,EAAUnL,QAAQ5I,GAAtB,CAGA,IAAI+I,EAAQgL,EAAUnL,QAAQ5I,GAAc,IAAI1tB,UAAUwhC,MAAMhO,MAAM,CAClEjjB,GAAUmd,EACVld,QAAUoxB,EAAapxB,SAAWkxB,EAClCjxB,QAAUmxB,EAAanxB,SAAWixB,EAClChxB,MAAUkxB,EAAalxB,OAAS,EAChCC,MAAUixB,EAAajxB,OAAS,IAGpC8wB,EAAUE,gBAEVlL,EAAM/B,mBAAmB/X,EAASilB,EAAajN,QAASiN,EAAahN,SACrE6M,EAAUjgB,SAAS,IAAIxhB,UAAUwhC,MAAMvhB,MAAM,YAAaxd,EAAGg0B,SAIlE,GAEH9Z,EAAQgB,iBAAiB,aAAa,SAAoBlb,GAGtD,IAAK,IAAI1B,EAAI,EAAGA,EAAI0B,EAAE20B,eAAex2B,OAAQG,IAAK,CAE9C,IAAI6gC,EAAen/B,EAAE20B,eAAer2B,GAChC2sB,EAAakU,EAAalU,WAG1B+I,EAAQgL,EAAUnL,QAAQ5I,GACzB+I,IAKDmL,EAAajxB,QACb8lB,EAAM9lB,MAAQixB,EAAajxB,OAG/B8lB,EAAM/lB,MAAQkxB,EAAalxB,OAAS,EACpC+lB,EAAMjmB,QAAUoxB,EAAapxB,SAAWkxB,EACxCjL,EAAMhmB,QAAUmxB,EAAanxB,SAAWixB,EAGxCjL,EAAM/B,mBAAmB/X,EAASilB,EAAajN,QAASiN,EAAahN,SACrE6M,EAAUjgB,SAAS,IAAIxhB,UAAUwhC,MAAMvhB,MAAM,YAAaxd,EAAGg0B,SAIlE,GAEH9Z,EAAQgB,iBAAiB,YAAY,SAAoBlb,GAGrD,IAAK,IAAI1B,EAAI,EAAGA,EAAI0B,EAAE20B,eAAex2B,OAAQG,IAAK,CAE9C,IAAI6gC,EAAen/B,EAAE20B,eAAer2B,GAChC2sB,EAAakU,EAAalU,WAG1B+I,EAAQgL,EAAUnL,QAAQ5I,GACzB+I,WAIEgL,EAAUnL,QAAQ5I,GACzB+T,EAAUE,gBAGVlL,EAAM9lB,MAAQ,EAGd8lB,EAAM/B,mBAAmB/X,EAASilB,EAAajN,QAASiN,EAAahN,SACrE6M,EAAUjgB,SAAS,IAAIxhB,UAAUwhC,MAAMvhB,MAAM,WAAYxd,EAAGg0B,SAIjE,IAaPz2B,UAAUwhC,MAAMhO,MAAQ,SAAe6B,GAEnCA,EAAWA,GAAY,GAEvBr1B,UAAUy0B,SAAShU,KAAKrgB,KAAMi1B,GAS9Bj1B,KAAKmQ,GAAK8kB,EAAS9kB,IAAM,EASzBnQ,KAAKoQ,QAAU6kB,EAAS7kB,SAAW,EASnCpQ,KAAKqQ,QAAU4kB,EAAS5kB,SAAW,EASnCrQ,KAAKsQ,MAAQ2kB,EAAS3kB,OAAS,EAU/BtQ,KAAKuQ,MAAQ0kB,EAAS1kB,OAAS,GAsBnC3Q,UAAUwhC,MAAMvhB,MAAQ,SAAoB1V,EAAMsW,EAAO9X,GAErD/I,UAAUigB,MAAMM,SAASE,KAAKrgB,KAAMmK,EAAM,CAAEsW,IAO5CzgB,KAAK2I,MAAQA,IAuBb/I,UAAYA,WAAa,IAWnB6hC,OAAS,WAUfzhC,KAAKyF,QAAU,SAASvF,KAKxBF,KAAKmJ,WAAa,aAUlBnJ,KAAKkP,YAAc,SAASgwB,KAU5Bl/B,KAAK6M,SAAW,SAASlE,GAGjBA,IAAU3I,KAAK2I,QACf3I,KAAK2I,MAAQA,EACT3I,KAAK8M,eACL9M,KAAK8M,cAAcnE,KAa/B3I,KAAK0hC,QAAU,SAAiBC,GAC5B3hC,KAAK2hC,KAAOA,EACR3hC,KAAK4hC,QACL5hC,KAAK4hC,OAAOD,IASpB3hC,KAAK+M,YAAc,WACf,OAAO/M,KAAK2I,QAAU/I,UAAU6hC,OAAOrO,MAAMyO,MACtC7hC,KAAK2I,QAAU/I,UAAU6hC,OAAOrO,MAAM0O,UAQjD9hC,KAAK2I,MAAQ/I,UAAU6hC,OAAOrO,MAAM2O,WASpC/hC,KAAKgiC,eAAiB,KAWtBhiC,KAAKiiC,kBAAoB,KAQzBjiC,KAAK2hC,KAAO,KASZ3hC,KAAK4hC,OAAS,KASd5hC,KAAKuG,QAAU,KASfvG,KAAK8M,cAAgB,KAYrB9M,KAAKqX,cAAgB,MAezBzX,UAAU6hC,OAAOS,qBAAuB,GAOxCtiC,UAAU6hC,OAAOrO,MAAQ,CAQrB2O,WAAc,EAOdF,KAAQ,EASRM,OAAU,EAQVL,SAAa,GAuBjBliC,UAAUwiC,WAAa,SAASC,EAAWC,EAAaC,GAQpD,IAAI52B,EAAS3L,KAETwiC,EAAiBH,EAAY,WAC7BI,EAAiBJ,EAAY,SAC7BK,EAAiBL,EAAY,UAM7BM,EAJsB,EAMtBC,GAAkB,EAClBC,EAAsB,GAItBC,IAAoBR,EAQpBS,EAAkB,KAQlBC,EAAkB,KASlBj3B,EAAe,KAoBfk3B,EAAeV,GAAsB,GAUrCW,EAAsB,yBAStBC,EAAqB,KAYzB,SAASC,EAAgBC,EAASC,GAC9B,IAAK,IAAIvyB,KAAQuyB,EACbD,EAAQE,iBAAiBxyB,EAAMuyB,EAAQvyB,IAU/C,SAASyyB,IAGLpjC,OAAO8tB,aAAa6U,GACpB3iC,OAAO8tB,aAAa8U,GAGhBr3B,EAAOhD,QAAU/I,UAAU6hC,OAAOrO,MAAM0O,UACxCn2B,EAAOkB,SAASjN,UAAU6hC,OAAOrO,MAAMyO,MAG3CkB,EAAkB3iC,OAAOsd,YAAW,WAChC+lB,EAAa,IAAI7jC,UAAUoJ,OAAOpJ,UAAUoJ,OAAOC,KAAKs2B,iBAAkB,sBAC3E5zB,EAAOq2B,gBAGVgB,EAAkB5iC,OAAOsd,YAAW,WAChC/R,EAAOkB,SAASjN,UAAU6hC,OAAOrO,MAAM0O,YACxCn2B,EAAOs2B,mBAad,SAASwB,EAAahiC,GAGlBrB,OAAO8tB,aAAa6U,GACpB3iC,OAAO8tB,aAAa8U,GAGpB5iC,OAAO0Y,cAAc/M,GAGjBJ,EAAOhD,QAAU/I,UAAU6hC,OAAOrO,MAAM+O,SAIxC1gC,EAAOsH,OAASnJ,UAAUoJ,OAAOC,KAAKC,SAAWyC,EAAOpF,UAIpDoF,EAAOhD,QAAU/I,UAAU6hC,OAAOrO,MAAM2O,YACjCtgC,EAAOsH,OAASnJ,UAAUoJ,OAAOC,KAAKw2B,oBAC7C9zB,EAAOpF,QAAQ9E,IAKvBmhC,GAAkB,EAGlBj3B,EAAOkB,SAASjN,UAAU6hC,OAAOrO,MAAM+O,SAkD3C,SAASuB,IAGL,GAAK/3B,EAAOoB,cAGZ,GAAI81B,EAAoBriC,OAAS,EAAG,CAEhCoiC,GAAkB,EAElB,IAAIe,EAAyB,IAAIC,eACjCD,EAAuBE,KAAK,OAAQnB,EAAe/2B,EAAOg2B,MAC1DgC,EAAuBb,gBAAkBA,EACzCM,EAAgBO,EAAwBV,GACxCU,EAAuBJ,iBAAiB,eAAgB,4BACxDI,EAAuBJ,iBAAiBL,EAAqBC,GAG7DQ,EAAuBG,mBAAqB,WACE,IAAtCH,EAAuBI,aAEvBP,IAGsC,MAAlCG,EAAuBliC,OACvBuiC,EAAsBL,GAItBD,MAKZC,EAAuBM,KAAKpB,GAC5BA,EAAsB,QAItBD,GAAkB,EAI1B,SAASoB,EAAsBE,GAG3B,IAAIn7B,EAAOsE,SAAS62B,EAAeC,kBAAkB,0BACrD,GAAIp7B,EAAM,CACN,IAAIqI,EAAU8yB,EAAeC,kBAAkB,2BAC/CV,EAAa,IAAI7jC,UAAUoJ,OAAOD,EAAMqI,SAKnC8yB,EAAeziC,OACpBgiC,EAAa,IAAI7jC,UAAUoJ,OACvBpJ,UAAUoJ,OAAOC,KAAKs3B,aAAa2D,EAAeziC,QAC9CyiC,EAAeE,aAIvBX,EAAa,IAAI7jC,UAAUoJ,OAAOpJ,UAAUoJ,OAAOC,KAAK02B,qBAIhE,SAAS0E,EAAeH,GAEpB,IAAII,EAAW,KACXC,EAAc,KAEdC,EAAmB,EAGnBC,GAAc,EAGdnG,EAAa,EAGbY,EAAW,IAAI5e,MAEnB,SAASokB,IAGL,GAAK/4B,EAAOoB,eAUZ,KAAIm3B,EAAeH,WAAa,GAAhC,CAGA,IAAItiC,EACJ,IAAMA,EAASyiC,EAAeziC,OAG9B,MAAOY,GAAKZ,EAAS,IAOrB,GAJK8iC,GAA0B,MAAX9iC,IAChB8iC,EAAcI,KAGgB,IAA9BT,EAAeH,YACe,IAA9BG,EAAeH,WAAkB,CAajC,GAXAP,IA/Tc,IAkUVb,IACkC,IAA9BuB,EAAeH,YAAqBO,EAED,IAA9BJ,EAAeH,YAAoBO,GACxCxrB,cAAcwrB,GAFdA,EAAWvrB,YAAY2rB,EAAe,KAMhB,IAA1BR,EAAeziC,OAEf,YADAkK,EAAOxC,aAKN,GAA8B,MAA1B+6B,EAAeziC,OAEpB,YADAuiC,EAAsBE,GAK1B,IAAIU,EACJ,IAAMA,EAAUV,EAAeW,aAG/B,MAAOxiC,GAAK,OAGZ,KAAOoiC,EAAaG,EAAQpkC,QAAQ,CAGhC,GAAIikC,GAAcnG,EAAY,CAG1B,IAAI/hB,EAAUqoB,EAAQhX,UAAU0Q,EAAYmG,GACxCjJ,EAAaoJ,EAAQhX,UAAU6W,EAAYA,EAAW,GAM1D,GAHAvF,EAAS95B,KAAKmX,GAGK,MAAfif,EAAoB,CAGpB,IAAI3iB,EAASqmB,EAAS/5B,QAGlBwG,EAAO0L,eACP1L,EAAO0L,cAAcwB,EAAQqmB,GAGjCA,EAAS1+B,OAAS,EAMtB89B,EAAamG,EAAa,EAK9B,IAAIK,EAAYF,EAAQlX,QAAQ,IAAK4Q,GACrC,IAAmB,IAAfwG,EAmCC,CACDxG,EAAasG,EAAQpkC,OACrB,MAlCA,IAAIA,EAAS6M,SAASu3B,EAAQhX,UAAU6W,EAAW,EAAGK,IAGtD,GAAe,IAAXtkC,EAAc,CAGV8jC,GACAxrB,cAAcwrB,GAGlBJ,EAAeJ,mBAAqB,KACpCI,EAAea,QAGXR,GACAF,EAAeE,GAGnB,MAQJE,GAHAnG,EAAawG,EAAY,GAGCtkC,UAtHjB,OAAb8jC,GACAxrB,cAAcwrB,GAyItBJ,EAAeJ,mBAjbG,IAgblBnB,EACoC,WAIE,IAA9BuB,EAAeH,cACfS,GACwB,IACpB7B,EAvbM,EAwbNuB,EAAeJ,mBAAqBY,GAI5CA,KAMgCA,EAExCA,IAlSJ1kC,KAAKkP,YAAc,WAGf,GAAKvD,EAAOoB,eAIa,IAArBooB,UAAU30B,OAAd,CAuBA,IAHA,IAAI4Q,EAAUmJ,EAAW4a,UAAU,IAG1Bx0B,EAAE,EAAGA,EAAEw0B,UAAU30B,OAAQG,IAC9ByQ,GAAW,IAAMmJ,EAAW4a,UAAUx0B,IAM1CkiC,GAHAzxB,GAAW,IAMNwxB,GACDc,IApBJ,SAASnpB,EAAWlI,GAChB,IAAI2yB,EAAS,IAAI5jC,OAAOiR,GACxB,OAAO2yB,EAAOxkC,OAAS,IAAMwkC,IAmRrC,IAAIC,EAAa,EAEjB,SAASN,IAGL,IAAIT,EAAiB,IAAIN,eAOzB,OANAM,EAAeL,KAAK,MAAOpB,EAAc92B,EAAOg2B,KAAO,IAAOsD,KAC9Df,EAAeX,iBAAiBL,EAAqBC,GACrDe,EAAepB,gBAAkBA,EACjCM,EAAgBc,EAAgBjB,GAChCiB,EAAeD,KAAK,MAEbC,EAIXlkC,KAAKyF,QAAU,SAASvF,GAGpBsjC,IAGA73B,EAAOkB,SAASjN,UAAU6hC,OAAOrO,MAAM2O,YAGvC,IAAImD,EAAyB,IAAItB,eACjCsB,EAAuBpB,mBAAqB,WAEE,IAAtCoB,EAAuBnB,aAIW,MAAlCmB,EAAuBzjC,QAK3B+hC,IAGA73B,EAAO+1B,QAAQwD,EAAuBL,eACtC1B,EAAqB+B,EAAuBf,kBAAkBjB,KAS9Dv3B,EAAOkB,SAASjN,UAAU6hC,OAAOrO,MAAMyO,MAGvC91B,EAAegN,aAAY,WACvBpN,EAAOuD,YAAY,SArdV,KAydbm1B,EAAeM,MAbXlB,EAAa,IAAI7jC,UAAUoJ,OAAOpJ,UAAUoJ,OAAOC,KAAK02B,sBAZxDqE,EAAsBkB,KA6B9BA,EAAuBrB,KAAK,OAAQrB,GAAgB,GACpD0C,EAAuBpC,gBAAkBA,EACzCM,EAAgB8B,EAAwBjC,GACxCiC,EAAuB3B,iBAAiB,eAAgB,oDACxD2B,EAAuBjB,KAAK/jC,IAIhCF,KAAKmJ,WAAa,WACds6B,EAAa,IAAI7jC,UAAUoJ,OAAOpJ,UAAUoJ,OAAOC,KAAKC,QAAS,uBAKzEtJ,UAAUwiC,WAAWh8B,UAAY,IAAIxG,UAAU6hC,OAU/C7hC,UAAUulC,gBAAkB,SAAS9C,GAQjC,IAAI12B,EAAS3L,KAQTolC,EAAS,KAQTrC,EAAkB,KAQlBC,EAAkB,KASlBj3B,EAAe,KA2BnB,GAAqC,QAA9Bs2B,EAAUzU,UAAU,EAAG,IACO,SAA9ByU,EAAUzU,UAAU,EAAG,GAAe,CAEzC,IAAIyX,EArBU,CACd,QAAU,MACV,SAAU,QAmBiBjlC,OAAOskB,SAAS2gB,UAG3C,GAAkC,MAA9BhD,EAAUzU,UAAU,EAAG,GACvByU,EACIgD,EACE,KAAOjlC,OAAOskB,SAAS4gB,KACvBjD,MAGL,CAGD,IAAIkD,EAAQnlC,OAAOskB,SAAS8gB,SAASC,YAAY,KAC7CC,EAAQtlC,OAAOskB,SAAS8gB,SAAS5X,UAAU,EAAG2X,EAAQ,GAG1DlD,EACIgD,EACE,KAAOjlC,OAAOskB,SAAS4gB,KACvBI,EACArD,GAYd,SAASmB,IAGLpjC,OAAO8tB,aAAa6U,GACpB3iC,OAAO8tB,aAAa8U,GAGhBr3B,EAAOhD,QAAU/I,UAAU6hC,OAAOrO,MAAM0O,UACxCn2B,EAAOkB,SAASjN,UAAU6hC,OAAOrO,MAAMyO,MAG3CkB,EAAkB3iC,OAAOsd,YAAW,WAChC+lB,EAAa,IAAI7jC,UAAUoJ,OAAOpJ,UAAUoJ,OAAOC,KAAKs2B,iBAAkB,sBAC3E5zB,EAAOq2B,gBAGVgB,EAAkB5iC,OAAOsd,YAAW,WAChC/R,EAAOkB,SAASjN,UAAU6hC,OAAOrO,MAAM0O,YACxCn2B,EAAOs2B,mBAad,SAASwB,EAAahiC,GAGlBrB,OAAO8tB,aAAa6U,GACpB3iC,OAAO8tB,aAAa8U,GAGpB5iC,OAAO0Y,cAAc/M,GAGjBJ,EAAOhD,QAAU/I,UAAU6hC,OAAOrO,MAAM+O,SAIxC1gC,EAAOsH,OAASnJ,UAAUoJ,OAAOC,KAAKC,SAAWyC,EAAOpF,SACxDoF,EAAOpF,QAAQ9E,GAGnBkK,EAAOkB,SAASjN,UAAU6hC,OAAOrO,MAAM+O,QAEvCiD,EAAOjxB,SAIXnU,KAAKkP,YAAc,SAASgwB,GAGxB,GAAKvzB,EAAOoB,eAIa,IAArBooB,UAAU30B,OAAd,CAuBA,IAHA,IAAI4Q,EAAUmJ,EAAW4a,UAAU,IAG1Bx0B,EAAE,EAAGA,EAAEw0B,UAAU30B,OAAQG,IAC9ByQ,GAAW,IAAMmJ,EAAW4a,UAAUx0B,IAG1CyQ,GAAW,IAEXg0B,EAAOnB,KAAK7yB,GAfZ,SAASmJ,EAAWlI,GAChB,IAAI2yB,EAAS,IAAI5jC,OAAOiR,GACxB,OAAO2yB,EAAOxkC,OAAS,IAAMwkC,IAiBrChlC,KAAKyF,QAAU,SAASvF,GAEpBsjC,IAGA73B,EAAOkB,SAASjN,UAAU6hC,OAAOrO,MAAM2O,aAGvCqD,EAAS,IAAIO,UAAUtD,EAAY,IAAMniC,EAAM,cAExC0lC,OAAS,SAASnlB,GACrB+iB,IAGAz3B,EAAegN,aAAY,WACvBpN,EAAOuD,YAAYtP,UAAU6hC,OAAOS,qBAChC,QAAQ,IAAIpiB,MAAOC,aAxJd,MA6JjBqlB,EAAO9+B,QAAU,SAASma,GAGlBA,EAAM5N,OACN4wB,EAAa,IAAI7jC,UAAUoJ,OAAOqE,SAASoT,EAAM5N,QAAS4N,EAAM5N,SAI3D4N,EAAM1X,KACX06B,EAAa,IAAI7jC,UAAUoJ,OAAOpJ,UAAUoJ,OAAOC,KAAKu3B,kBAAkB/f,EAAM1X,QAIhF06B,EAAa,IAAI7jC,UAAUoJ,OAAOpJ,UAAUoJ,OAAOC,KAAK02B,sBAIhEyF,EAAOS,UAAY,SAASplB,GAExB+iB,IAEA,IAEIiB,EAFArzB,EAAUqP,EAAMvgB,KAChBo+B,EAAa,EAGbY,EAAW,GAEf,EAAG,CAGC,IAAI4F,EAAY1zB,EAAQsc,QAAQ,IAAK4Q,GACrC,IAAmB,IAAfwG,EASAL,GAHAnG,EAAawG,EAAY,GAHZz3B,SAAS+D,EAAQwc,UAAU6W,EAAW,EAAGK,SAYtDrB,EAAa,IAAI7jC,UAAUoJ,OAAOpJ,UAAUoJ,OAAOC,KAAKo2B,aAAc,4BAG1E,IAAI9iB,EAAUnL,EAAQwc,UAAU0Q,EAAYmG,GACxCjJ,EAAapqB,EAAQwc,UAAU6W,EAAYA,EAAW,GAM1D,GAHAvF,EAAS95B,KAAKmX,GAGK,MAAfif,EAAoB,CAGpB,IAAI3iB,EAASqmB,EAAS/5B,QAGF,OAAhBwG,EAAOg2B,OAGH9oB,IAAWjZ,UAAU6hC,OAAOS,sBAC5Bv2B,EAAO+1B,QAAQxC,EAAS,IAG5BvzB,EAAOkB,SAASjN,UAAU6hC,OAAOrO,MAAMyO,OAKvChpB,IAAWjZ,UAAU6hC,OAAOS,sBAAwBv2B,EAAO0L,eAC3D1L,EAAO0L,cAAcwB,EAAQqmB,GAGjCA,EAAS1+B,OAAS,EAMtB89B,EAAamG,EAAa,QAErBnG,EAAaltB,EAAQ5Q,UAMtCR,KAAKmJ,WAAa,WACds6B,EAAa,IAAI7jC,UAAUoJ,OAAOpJ,UAAUoJ,OAAOC,KAAKC,QAAS,uBAKzEtJ,UAAUulC,gBAAgB/+B,UAAY,IAAIxG,UAAU6hC,OAcpD7hC,UAAUkmC,cAAgB,SAASC,GAgC/B,IA1BA,IAOIC,EAPAC,EAAiBjmC,KAcjBkmC,EAAU,GASVC,EAAkB,KAGbxlC,EAAE,EAAGA,EAAEw0B,UAAU30B,OAAQG,IAC9BulC,EAAQ9gC,KAAK+vB,UAAUx0B,IAS3B,SAASylC,EAAOz6B,GAGZs6B,EAAe98B,WAAcwC,EAAOxC,WACpC88B,EAAe/2B,YAAcvD,EAAOuD,YAepC,IAAIm3B,EAAa,SAAoB5kC,GAGjC,GAAIA,GAAUA,EAAOsH,OAASnJ,UAAUoJ,OAAOC,KAAKs2B,iBAEhD,OADA2G,EAAU,GACH,KAIX,IAAII,EAAcJ,EAAQ/gC,QAU1B,OAPImhC,IACA36B,EAAOpF,QAAU,KACjBoF,EAAO0L,cAAgB,KACvB1L,EAAOmB,cAAgB,KACvBs5B,EAAOE,IAGJA,GAUX,SAASC,IAEL56B,EAAOmB,cAAgBm5B,EAAen5B,cACtCnB,EAAO0L,cAAgB4uB,EAAe5uB,cACtC1L,EAAOpF,QAAU0/B,EAAe1/B,QAChCoF,EAAOi2B,OAASqE,EAAerE,OAG3Bj2B,EAAOg2B,MACPsE,EAAevE,QAAQ/1B,EAAOg2B,MAElCwE,EAAkBx6B,EAKtBA,EAAOmB,cAAgB,SAASnE,GAE5B,OAAQA,GAGJ,KAAK/I,UAAU6hC,OAAOrO,MAAMyO,KACxB0E,IACIN,EAAen5B,eACfm5B,EAAen5B,cAAcnE,GACjC,MAGJ,KAAK/I,UAAU6hC,OAAOrO,MAAM+O,QACnBkE,KAAgBJ,EAAen5B,eAChCm5B,EAAen5B,cAAcnE,KAQ7CgD,EAAO0L,cAAgB,SAASwB,EAAQqmB,GAGpCqH,IAGIN,EAAe5uB,eACf4uB,EAAe5uB,cAAcwB,EAAQqmB,IAK7CvzB,EAAOpF,QAAU,SAAS9E,IAGjB4kC,EAAW5kC,IAAWwkC,EAAe1/B,SACtC0/B,EAAe1/B,QAAQ9E,IAK/BkK,EAAOlG,QAAQugC,GAInBhmC,KAAKyF,QAAU,SAASvF,GAGpB8lC,EAAe9lC,EAGf,IAAIomC,EAAcH,GAAoCD,EAAQ/gC,QAG1DmhC,EACAF,EAAOE,GAGFL,EAAe1/B,SACpB0/B,EAAe1/B,QAAQ3G,UAAUoJ,OAAOC,KAAKo2B,aAAc,wBAMvEz/B,UAAUkmC,cAAc1/B,UAAY,IAAIxG,UAAU6hC,OAsBlD7hC,UAAU4mC,iBAAmB,SAA0B54B,EAAK00B,EAAaC,GAOrE,IAAI52B,EAAS3L,KASTymC,EAAM,KAUNxD,EAAeV,GAAsB,GAmBzCviC,KAAKkP,YAAc,SAAqBgwB,KAIxCl/B,KAAKyF,QAAU,SAAiBvF,GAG5ByL,EAAOxC,aAGPwC,EAAOkB,SAASjN,UAAU6hC,OAAOrO,MAAM2O,aAGvC0E,EAAM,IAAI7C,gBACNC,KAAK,MAAOj2B,GAChB64B,EAAI3D,kBAAoBR,EArB5B,SAAyBe,EAASC,GAC9B,IAAK,IAAIvyB,KAAQuyB,EACbD,EAAQE,iBAAiBxyB,EAAMuyB,EAAQvyB,IAoB3CqyB,CAAgBqD,EAAKxD,GACrBwD,EAAIC,aAAe,OACnBD,EAAIxC,KAAK,MAET,IAAIpiC,EAAS,EAGTsV,EAAS,IAAIvX,UAAUwX,OAG3BD,EAAOE,cAAgB,SAA6BwB,EAAQskB,GACpDxxB,EAAO0L,eACP1L,EAAO0L,cAAcwB,EAAQskB,IAIrCsJ,EAAI3C,mBAAqB,WAGrB,GAAuB,IAAnB2C,EAAI1C,YAAuC,IAAnB0C,EAAI1C,WAAkB,CAG9Cp4B,EAAOkB,SAASjN,UAAU6hC,OAAOrO,MAAMyO,MAEvC,IAAI78B,EAASyhC,EAAI5B,aACbrkC,EAASwE,EAAOxE,OAGhBqB,EAASrB,IACT2W,EAAOI,QAAQvS,EAAO4oB,UAAU/rB,IAChCA,EAASrB,GAMM,IAAnBimC,EAAI1C,YACJp4B,EAAOxC,cAKfs9B,EAAIlgC,QAAU,WAGNoF,EAAOpF,SACPoF,EAAOpF,QAAQ,IAAI3G,UAAUoJ,OACzBpJ,UAAUoJ,OAAOC,KAAKs3B,aAAakG,EAAIhlC,QAASglC,EAAIrC,aAE5Dz4B,EAAOxC,eAKfnJ,KAAKmJ,WAAa,WAGVs9B,IACAA,EAAI1B,QACJ0B,EAAM,MAIV96B,EAAOkB,SAASjN,UAAU6hC,OAAOrO,MAAM+O,UAM/CviC,UAAU4mC,iBAAiBpgC,UAAY,IAAIxG,UAAU6hC,QAqBjD7hC,UAAYA,WAAa,IAUnB+mC,YAAc,SAqBpB/mC,UAAYA,WAAa,IAWnBgZ,YAAc,WAQpB5Y,KAAKuC,KAAO,cAkBhB3C,UAAUgZ,YAAYpW,gBAAkB,SAAyBC,GAI7D,OAAO,GAcX7C,UAAUgZ,YAAYjW,kBAAoB,WAItC,MAAO,IAwBX/C,UAAUgZ,YAAYhW,YAAc,SAAqB9C,EAAQwN,EAAO7K,GAGpE,OAAO","file":"guacamole-common.min.js","sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar Guacamole = Guacamole || {};\n\n/**\n * A reader which automatically handles the given input stream, returning\n * strictly received packets as array buffers. Note that this object will\n * overwrite any installed event handlers on the given Guacamole.InputStream.\n * \n * @constructor\n * @param {!Guacamole.InputStream} stream\n *     The stream that data will be read from.\n */\nGuacamole.ArrayBufferReader = function(stream) {\n\n    /**\n     * Reference to this Guacamole.InputStream.\n     * @private\n     */\n    var guac_reader = this;\n\n    // Receive blobs as array buffers\n    stream.onblob = function(data) {\n\n        // Convert to ArrayBuffer\n        var binary = window.atob(data);\n        var arrayBuffer = new ArrayBuffer(binary.length);\n        var bufferView = new Uint8Array(arrayBuffer);\n\n        for (var i=0; i<binary.length; i++)\n            bufferView[i] = binary.charCodeAt(i);\n\n        // Call handler, if present\n        if (guac_reader.ondata)\n            guac_reader.ondata(arrayBuffer);\n\n    };\n\n    // Simply call onend when end received\n    stream.onend = function() {\n        if (guac_reader.onend)\n            guac_reader.onend();\n    };\n\n    /**\n     * Fired once for every blob of data received.\n     * \n     * @event\n     * @param {!ArrayBuffer} buffer\n     *     The data packet received.\n     */\n    this.ondata = null;\n\n    /**\n     * Fired once this stream is finished and no further data will be written.\n     * @event\n     */\n    this.onend = null;\n\n};\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar Guacamole = Guacamole || {};\n\n/**\n * A writer which automatically writes to the given output stream with arbitrary\n * binary data, supplied as ArrayBuffers.\n * \n * @constructor\n * @param {!Guacamole.OutputStream} stream\n *     The stream that data will be written to.\n */\nGuacamole.ArrayBufferWriter = function(stream) {\n\n    /**\n     * Reference to this Guacamole.StringWriter.\n     *\n     * @private\n     * @type {!Guacamole.ArrayBufferWriter}\n     */\n    var guac_writer = this;\n\n    // Simply call onack for acknowledgements\n    stream.onack = function(status) {\n        if (guac_writer.onack)\n            guac_writer.onack(status);\n    };\n\n    /**\n     * Encodes the given data as base64, sending it as a blob. The data must\n     * be small enough to fit into a single blob instruction.\n     * \n     * @private\n     * @param {!Uint8Array} bytes\n     *     The data to send.\n     */\n    function __send_blob(bytes) {\n\n        var binary = \"\";\n\n        // Produce binary string from bytes in buffer\n        for (var i=0; i<bytes.byteLength; i++)\n            binary += String.fromCharCode(bytes[i]);\n\n        // Send as base64\n        stream.sendBlob(window.btoa(binary));\n\n    }\n\n    /**\n     * The maximum length of any blob sent by this Guacamole.ArrayBufferWriter,\n     * in bytes. Data sent via\n     * [sendData()]{@link Guacamole.ArrayBufferWriter#sendData} which exceeds\n     * this length will be split into multiple blobs. As the Guacamole protocol\n     * limits the maximum size of any instruction or instruction element to\n     * 8192 bytes, and the contents of blobs will be base64-encoded, this value\n     * should only be increased with extreme caution.\n     *\n     * @type {!number}\n     * @default {@link Guacamole.ArrayBufferWriter.DEFAULT_BLOB_LENGTH}\n     */\n    this.blobLength = Guacamole.ArrayBufferWriter.DEFAULT_BLOB_LENGTH;\n\n    /**\n     * Sends the given data.\n     * \n     * @param {!(ArrayBuffer|TypedArray)} data\n     *     The data to send.\n     */\n    this.sendData = function(data) {\n\n        var bytes = new Uint8Array(data);\n\n        // If small enough to fit into single instruction, send as-is\n        if (bytes.length <= guac_writer.blobLength)\n            __send_blob(bytes);\n\n        // Otherwise, send as multiple instructions\n        else {\n            for (var offset=0; offset<bytes.length; offset += guac_writer.blobLength)\n                __send_blob(bytes.subarray(offset, offset + guac_writer.blobLength));\n        }\n\n    };\n\n    /**\n     * Signals that no further text will be sent, effectively closing the\n     * stream.\n     */\n    this.sendEnd = function() {\n        stream.sendEnd();\n    };\n\n    /**\n     * Fired for received data, if acknowledged by the server.\n     * @event\n     * @param {!Guacamole.Status} status\n     *     The status of the operation.\n     */\n    this.onack = null;\n\n};\n\n/**\n * The default maximum blob length for new Guacamole.ArrayBufferWriter\n * instances.\n *\n * @constant\n * @type {!number}\n */\nGuacamole.ArrayBufferWriter.DEFAULT_BLOB_LENGTH = 6048;\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar Guacamole = Guacamole || {};\n\n/**\n * Maintains a singleton instance of the Web Audio API AudioContext class,\n * instantiating the AudioContext only in response to the first call to\n * getAudioContext(), and only if no existing AudioContext instance has been\n * provided via the singleton property. Subsequent calls to getAudioContext()\n * will return the same instance.\n *\n * @namespace\n */\nGuacamole.AudioContextFactory = {\n\n    /**\n     * A singleton instance of a Web Audio API AudioContext object, or null if\n     * no instance has yes been created. This property may be manually set if\n     * you wish to supply your own AudioContext instance, but care must be\n     * taken to do so as early as possible. Assignments to this property will\n     * not retroactively affect the value returned by previous calls to\n     * getAudioContext().\n     *\n     * @type {AudioContext}\n     */\n    'singleton' : null,\n\n    /**\n     * Returns a singleton instance of a Web Audio API AudioContext object.\n     *\n     * @return {AudioContext}\n     *     A singleton instance of a Web Audio API AudioContext object, or null\n     *     if the Web Audio API is not supported.\n     */\n    'getAudioContext' : function getAudioContext() {\n\n        // Fallback to Webkit-specific AudioContext implementation\n        var AudioContext = window.AudioContext || window.webkitAudioContext;\n\n        // Get new AudioContext instance if Web Audio API is supported\n        if (AudioContext) {\n            try {\n\n                // Create new instance if none yet exists\n                if (!Guacamole.AudioContextFactory.singleton)\n                    Guacamole.AudioContextFactory.singleton = new AudioContext();\n\n                // Return singleton instance\n                return Guacamole.AudioContextFactory.singleton;\n\n            }\n            catch (e) {\n                // Do not use Web Audio API if not allowed by browser\n            }\n        }\n\n        // Web Audio API not supported\n        return null;\n\n    }\n\n};\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar Guacamole = Guacamole || {};\n\n/**\n * Abstract audio player which accepts, queues and plays back arbitrary audio\n * data. It is up to implementations of this class to provide some means of\n * handling a provided Guacamole.InputStream. Data received along the provided\n * stream is to be played back immediately.\n *\n * @constructor\n */\nGuacamole.AudioPlayer = function AudioPlayer() {\n\n    /**\n     * Notifies this Guacamole.AudioPlayer that all audio up to the current\n     * point in time has been given via the underlying stream, and that any\n     * difference in time between queued audio data and the current time can be\n     * considered latency.\n     */\n    this.sync = function sync() {\n        // Default implementation - do nothing\n    };\n\n};\n\n/**\n * Determines whether the given mimetype is supported by any built-in\n * implementation of Guacamole.AudioPlayer, and thus will be properly handled\n * by Guacamole.AudioPlayer.getInstance().\n *\n * @param {!string} mimetype\n *     The mimetype to check.\n *\n * @returns {!boolean}\n *     true if the given mimetype is supported by any built-in\n *     Guacamole.AudioPlayer, false otherwise.\n */\nGuacamole.AudioPlayer.isSupportedType = function isSupportedType(mimetype) {\n\n    return Guacamole.RawAudioPlayer.isSupportedType(mimetype);\n\n};\n\n/**\n * Returns a list of all mimetypes supported by any built-in\n * Guacamole.AudioPlayer, in rough order of priority. Beware that only the core\n * mimetypes themselves will be listed. Any mimetype parameters, even required\n * ones, will not be included in the list. For example, \"audio/L8\" is a\n * supported raw audio mimetype that is supported, but it is invalid without\n * additional parameters. Something like \"audio/L8;rate=44100\" would be valid,\n * however (see https://tools.ietf.org/html/rfc4856).\n *\n * @returns {!string[]}\n *     A list of all mimetypes supported by any built-in Guacamole.AudioPlayer,\n *     excluding any parameters.\n */\nGuacamole.AudioPlayer.getSupportedTypes = function getSupportedTypes() {\n\n    return Guacamole.RawAudioPlayer.getSupportedTypes();\n\n};\n\n/**\n * Returns an instance of Guacamole.AudioPlayer providing support for the given\n * audio format. If support for the given audio format is not available, null\n * is returned.\n *\n * @param {!Guacamole.InputStream} stream\n *     The Guacamole.InputStream to read audio data from.\n *\n * @param {!string} mimetype\n *     The mimetype of the audio data in the provided stream.\n *\n * @return {Guacamole.AudioPlayer}\n *     A Guacamole.AudioPlayer instance supporting the given mimetype and\n *     reading from the given stream, or null if support for the given mimetype\n *     is absent.\n */\nGuacamole.AudioPlayer.getInstance = function getInstance(stream, mimetype) {\n\n    // Use raw audio player if possible\n    if (Guacamole.RawAudioPlayer.isSupportedType(mimetype))\n        return new Guacamole.RawAudioPlayer(stream, mimetype);\n\n    // No support for given mimetype\n    return null;\n\n};\n\n/**\n * Implementation of Guacamole.AudioPlayer providing support for raw PCM format\n * audio. This player relies only on the Web Audio API and does not require any\n * browser-level support for its audio formats.\n *\n * @constructor\n * @augments Guacamole.AudioPlayer\n * @param {!Guacamole.InputStream} stream\n *     The Guacamole.InputStream to read audio data from.\n *\n * @param {!string} mimetype\n *     The mimetype of the audio data in the provided stream, which must be a\n *     \"audio/L8\" or \"audio/L16\" mimetype with necessary parameters, such as:\n *     \"audio/L16;rate=44100,channels=2\".\n */\nGuacamole.RawAudioPlayer = function RawAudioPlayer(stream, mimetype) {\n\n    /**\n     * The format of audio this player will decode.\n     *\n     * @private\n     * @type {Guacamole.RawAudioFormat}\n     */\n    var format = Guacamole.RawAudioFormat.parse(mimetype);\n\n    /**\n     * An instance of a Web Audio API AudioContext object, or null if the\n     * Web Audio API is not supported.\n     *\n     * @private\n     * @type {AudioContext}\n     */\n    var context = Guacamole.AudioContextFactory.getAudioContext();\n\n    /**\n     * The earliest possible time that the next packet could play without\n     * overlapping an already-playing packet, in seconds. Note that while this\n     * value is in seconds, it is not an integer value and has microsecond\n     * resolution.\n     *\n     * @private\n     * @type {!number}\n     */\n    var nextPacketTime = context.currentTime;\n\n    /**\n     * Guacamole.ArrayBufferReader wrapped around the audio input stream\n     * provided with this Guacamole.RawAudioPlayer was created.\n     *\n     * @private\n     * @type {!Guacamole.ArrayBufferReader}\n     */\n    var reader = new Guacamole.ArrayBufferReader(stream);\n\n    /**\n     * The minimum size of an audio packet split by splitAudioPacket(), in\n     * seconds. Audio packets smaller than this will not be split, nor will the\n     * split result of a larger packet ever be smaller in size than this\n     * minimum.\n     *\n     * @private\n     * @constant\n     * @type {!number}\n     */\n    var MIN_SPLIT_SIZE = 0.02;\n\n    /**\n     * The maximum amount of latency to allow between the buffered data stream\n     * and the playback position, in seconds. Initially, this is set to\n     * roughly one third of a second.\n     *\n     * @private\n     * @type {!number}\n     */\n    var maxLatency = 0.3;\n\n    /**\n     * The type of typed array that will be used to represent each audio packet\n     * internally. This will be either Int8Array or Int16Array, depending on\n     * whether the raw audio format is 8-bit or 16-bit.\n     *\n     * @private\n     * @constructor\n     */\n    var SampleArray = (format.bytesPerSample === 1) ? window.Int8Array : window.Int16Array;\n\n    /**\n     * The maximum absolute value of any sample within a raw audio packet\n     * received by this audio player. This depends only on the size of each\n     * sample, and will be 128 for 8-bit audio and 32768 for 16-bit audio.\n     *\n     * @private\n     * @type {!number}\n     */\n    var maxSampleValue = (format.bytesPerSample === 1) ? 128 : 32768;\n\n    /**\n     * The queue of all pending audio packets, as an array of sample arrays.\n     * Audio packets which are pending playback will be added to this queue for\n     * further manipulation prior to scheduling via the Web Audio API. Once an\n     * audio packet leaves this queue and is scheduled via the Web Audio API,\n     * no further modifications can be made to that packet.\n     *\n     * @private\n     * @type {!SampleArray[]}\n     */\n    var packetQueue = [];\n\n    /**\n     * Given an array of audio packets, returns a single audio packet\n     * containing the concatenation of those packets.\n     *\n     * @private\n     * @param {!SampleArray[]} packets\n     *     The array of audio packets to concatenate.\n     *\n     * @returns {SampleArray}\n     *     A single audio packet containing the concatenation of all given\n     *     audio packets. If no packets are provided, this will be undefined.\n     */\n    var joinAudioPackets = function joinAudioPackets(packets) {\n\n        // Do not bother joining if one or fewer packets are in the queue\n        if (packets.length <= 1)\n            return packets[0];\n\n        // Determine total sample length of the entire queue\n        var totalLength = 0;\n        packets.forEach(function addPacketLengths(packet) {\n            totalLength += packet.length;\n        });\n\n        // Append each packet within queue\n        var offset = 0;\n        var joined = new SampleArray(totalLength);\n        packets.forEach(function appendPacket(packet) {\n            joined.set(packet, offset);\n            offset += packet.length;\n        });\n\n        return joined;\n\n    };\n\n    /**\n     * Given a single packet of audio data, splits off an arbitrary length of\n     * audio data from the beginning of that packet, returning the split result\n     * as an array of two packets. The split location is determined through an\n     * algorithm intended to minimize the liklihood of audible clicking between\n     * packets. If no such split location is possible, an array containing only\n     * the originally-provided audio packet is returned.\n     *\n     * @private\n     * @param {!SampleArray} data\n     *     The audio packet to split.\n     *\n     * @returns {!SampleArray[]}\n     *     An array of audio packets containing the result of splitting the\n     *     provided audio packet. If splitting is possible, this array will\n     *     contain two packets. If splitting is not possible, this array will\n     *     contain only the originally-provided packet.\n     */\n    var splitAudioPacket = function splitAudioPacket(data) {\n\n        var minValue = Number.MAX_VALUE;\n        var optimalSplitLength = data.length;\n\n        // Calculate number of whole samples in the provided audio packet AND\n        // in the minimum possible split packet\n        var samples = Math.floor(data.length / format.channels);\n        var minSplitSamples = Math.floor(format.rate * MIN_SPLIT_SIZE);\n\n        // Calculate the beginning of the \"end\" of the audio packet\n        var start = Math.max(\n            format.channels * minSplitSamples,\n            format.channels * (samples - minSplitSamples)\n        );\n\n        // For all samples at the end of the given packet, find a point where\n        // the perceptible volume across all channels is lowest (and thus is\n        // the optimal point to split)\n        for (var offset = start; offset < data.length; offset += format.channels) {\n\n            // Calculate the sum of all values across all channels (the result\n            // will be proportional to the average volume of a sample)\n            var totalValue = 0;\n            for (var channel = 0; channel < format.channels; channel++) {\n                totalValue += Math.abs(data[offset + channel]);\n            }\n\n            // If this is the smallest average value thus far, set the split\n            // length such that the first packet ends with the current sample\n            if (totalValue <= minValue) {\n                optimalSplitLength = offset + format.channels;\n                minValue = totalValue;\n            }\n\n        }\n\n        // If packet is not split, return the supplied packet untouched\n        if (optimalSplitLength === data.length)\n            return [data];\n\n        // Otherwise, split the packet into two new packets according to the\n        // calculated optimal split length\n        return [\n            new SampleArray(data.buffer.slice(0, optimalSplitLength * format.bytesPerSample)),\n            new SampleArray(data.buffer.slice(optimalSplitLength * format.bytesPerSample))\n        ];\n\n    };\n\n    /**\n     * Pushes the given packet of audio data onto the playback queue. Unlike\n     * other private functions within Guacamole.RawAudioPlayer, the type of the\n     * ArrayBuffer packet of audio data here need not be specific to the type\n     * of audio (as with SampleArray). The ArrayBuffer type provided by a\n     * Guacamole.ArrayBufferReader, for example, is sufficient. Any necessary\n     * conversions will be performed automatically internally.\n     *\n     * @private\n     * @param {!ArrayBuffer} data\n     *     A raw packet of audio data that should be pushed onto the audio\n     *     playback queue.\n     */\n    var pushAudioPacket = function pushAudioPacket(data) {\n        packetQueue.push(new SampleArray(data));\n    };\n\n    /**\n     * Shifts off and returns a packet of audio data from the beginning of the\n     * playback queue. The length of this audio packet is determined\n     * dynamically according to the click-reduction algorithm implemented by\n     * splitAudioPacket().\n     *\n     * @private\n     * @returns {SampleArray}\n     *     A packet of audio data pulled from the beginning of the playback\n     *     queue. If there is no audio currently in the playback queue, this\n     *     will be null.\n     */\n    var shiftAudioPacket = function shiftAudioPacket() {\n\n        // Flatten data in packet queue\n        var data = joinAudioPackets(packetQueue);\n        if (!data)\n            return null;\n\n        // Pull an appropriate amount of data from the front of the queue\n        packetQueue = splitAudioPacket(data);\n        data = packetQueue.shift();\n\n        return data;\n\n    };\n\n    /**\n     * Converts the given audio packet into an AudioBuffer, ready for playback\n     * by the Web Audio API. Unlike the raw audio packets received by this\n     * audio player, AudioBuffers require floating point samples and are split\n     * into isolated planes of channel-specific data.\n     *\n     * @private\n     * @param {!SampleArray} data\n     *     The raw audio packet that should be converted into a Web Audio API\n     *     AudioBuffer.\n     *\n     * @returns {!AudioBuffer}\n     *     A new Web Audio API AudioBuffer containing the provided audio data,\n     *     converted to the format used by the Web Audio API.\n     */\n    var toAudioBuffer = function toAudioBuffer(data) {\n\n        // Calculate total number of samples\n        var samples = data.length / format.channels;\n\n        // Determine exactly when packet CAN play\n        var packetTime = context.currentTime;\n        if (nextPacketTime < packetTime)\n            nextPacketTime = packetTime;\n\n        // Get audio buffer for specified format\n        var audioBuffer = context.createBuffer(format.channels, samples, format.rate);\n\n        // Convert each channel\n        for (var channel = 0; channel < format.channels; channel++) {\n\n            var audioData = audioBuffer.getChannelData(channel);\n\n            // Fill audio buffer with data for channel\n            var offset = channel;\n            for (var i = 0; i < samples; i++) {\n                audioData[i] = data[offset] / maxSampleValue;\n                offset += format.channels;\n            }\n\n        }\n\n        return audioBuffer;\n\n    };\n\n    // Defer playback of received audio packets slightly\n    reader.ondata = function playReceivedAudio(data) {\n\n        // Push received samples onto queue\n        pushAudioPacket(new SampleArray(data));\n\n        // Shift off an arbitrary packet of audio data from the queue (this may\n        // be different in size from the packet just pushed)\n        var packet = shiftAudioPacket();\n        if (!packet)\n            return;\n\n        // Determine exactly when packet CAN play\n        var packetTime = context.currentTime;\n        if (nextPacketTime < packetTime)\n            nextPacketTime = packetTime;\n\n        // Set up buffer source\n        var source = context.createBufferSource();\n        source.connect(context.destination);\n\n        // Use noteOn() instead of start() if necessary\n        if (!source.start)\n            source.start = source.noteOn;\n\n        // Schedule packet\n        source.buffer = toAudioBuffer(packet);\n        source.start(nextPacketTime);\n\n        // Update timeline by duration of scheduled packet\n        nextPacketTime += packet.length / format.channels / format.rate;\n\n    };\n\n    /** @override */\n    this.sync = function sync() {\n\n        // Calculate elapsed time since last sync\n        var now = context.currentTime;\n\n        // Reschedule future playback time such that playback latency is\n        // bounded within a reasonable latency threshold\n        nextPacketTime = Math.min(nextPacketTime, now + maxLatency);\n\n    };\n\n};\n\nGuacamole.RawAudioPlayer.prototype = new Guacamole.AudioPlayer();\n\n/**\n * Determines whether the given mimetype is supported by\n * Guacamole.RawAudioPlayer.\n *\n * @param {!string} mimetype\n *     The mimetype to check.\n *\n * @returns {!boolean}\n *     true if the given mimetype is supported by Guacamole.RawAudioPlayer,\n *     false otherwise.\n */\nGuacamole.RawAudioPlayer.isSupportedType = function isSupportedType(mimetype) {\n\n    // No supported types if no Web Audio API\n    if (!Guacamole.AudioContextFactory.getAudioContext())\n        return false;\n\n    return Guacamole.RawAudioFormat.parse(mimetype) !== null;\n\n};\n\n/**\n * Returns a list of all mimetypes supported by Guacamole.RawAudioPlayer. Only\n * the core mimetypes themselves will be listed. Any mimetype parameters, even\n * required ones, will not be included in the list. For example, \"audio/L8\" is\n * a raw audio mimetype that may be supported, but it is invalid without\n * additional parameters. Something like \"audio/L8;rate=44100\" would be valid,\n * however (see https://tools.ietf.org/html/rfc4856).\n *\n * @returns {!string[]}\n *     A list of all mimetypes supported by Guacamole.RawAudioPlayer, excluding\n *     any parameters. If the necessary JavaScript APIs for playing raw audio\n *     are absent, this list will be empty.\n */\nGuacamole.RawAudioPlayer.getSupportedTypes = function getSupportedTypes() {\n\n    // No supported types if no Web Audio API\n    if (!Guacamole.AudioContextFactory.getAudioContext())\n        return [];\n\n    // We support 8-bit and 16-bit raw PCM\n    return [\n        'audio/L8',\n        'audio/L16'\n    ];\n\n};\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar Guacamole = Guacamole || {};\n\n/**\n * Abstract audio recorder which streams arbitrary audio data to an underlying\n * Guacamole.OutputStream. It is up to implementations of this class to provide\n * some means of handling this Guacamole.OutputStream. Data produced by the\n * recorder is to be sent along the provided stream immediately.\n *\n * @constructor\n */\nGuacamole.AudioRecorder = function AudioRecorder() {\n\n    /**\n     * Callback which is invoked when the audio recording process has stopped\n     * and the underlying Guacamole stream has been closed normally. Audio will\n     * only resume recording if a new Guacamole.AudioRecorder is started. This\n     * Guacamole.AudioRecorder instance MAY NOT be reused.\n     *\n     * @event\n     */\n    this.onclose = null;\n\n    /**\n     * Callback which is invoked when the audio recording process cannot\n     * continue due to an error, if it has started at all. The underlying\n     * Guacamole stream is automatically closed. Future attempts to record\n     * audio should not be made, and this Guacamole.AudioRecorder instance\n     * MAY NOT be reused.\n     *\n     * @event\n     */\n    this.onerror = null;\n\n};\n\n/**\n * Determines whether the given mimetype is supported by any built-in\n * implementation of Guacamole.AudioRecorder, and thus will be properly handled\n * by Guacamole.AudioRecorder.getInstance().\n *\n * @param {!string} mimetype\n *     The mimetype to check.\n *\n * @returns {!boolean}\n *     true if the given mimetype is supported by any built-in\n *     Guacamole.AudioRecorder, false otherwise.\n */\nGuacamole.AudioRecorder.isSupportedType = function isSupportedType(mimetype) {\n\n    return Guacamole.RawAudioRecorder.isSupportedType(mimetype);\n\n};\n\n/**\n * Returns a list of all mimetypes supported by any built-in\n * Guacamole.AudioRecorder, in rough order of priority. Beware that only the\n * core mimetypes themselves will be listed. Any mimetype parameters, even\n * required ones, will not be included in the list. For example, \"audio/L8\" is\n * a supported raw audio mimetype that is supported, but it is invalid without\n * additional parameters. Something like \"audio/L8;rate=44100\" would be valid,\n * however (see https://tools.ietf.org/html/rfc4856).\n *\n * @returns {!string[]}\n *     A list of all mimetypes supported by any built-in\n *     Guacamole.AudioRecorder, excluding any parameters.\n */\nGuacamole.AudioRecorder.getSupportedTypes = function getSupportedTypes() {\n\n    return Guacamole.RawAudioRecorder.getSupportedTypes();\n\n};\n\n/**\n * Returns an instance of Guacamole.AudioRecorder providing support for the\n * given audio format. If support for the given audio format is not available,\n * null is returned.\n *\n * @param {!Guacamole.OutputStream} stream\n *     The Guacamole.OutputStream to send audio data through.\n *\n * @param {!string} mimetype\n *     The mimetype of the audio data to be sent along the provided stream.\n *\n * @return {Guacamole.AudioRecorder}\n *     A Guacamole.AudioRecorder instance supporting the given mimetype and\n *     writing to the given stream, or null if support for the given mimetype\n *     is absent.\n */\nGuacamole.AudioRecorder.getInstance = function getInstance(stream, mimetype) {\n\n    // Use raw audio recorder if possible\n    if (Guacamole.RawAudioRecorder.isSupportedType(mimetype))\n        return new Guacamole.RawAudioRecorder(stream, mimetype);\n\n    // No support for given mimetype\n    return null;\n\n};\n\n/**\n * Implementation of Guacamole.AudioRecorder providing support for raw PCM\n * format audio. This recorder relies only on the Web Audio API and does not\n * require any browser-level support for its audio formats.\n *\n * @constructor\n * @augments Guacamole.AudioRecorder\n * @param {!Guacamole.OutputStream} stream\n *     The Guacamole.OutputStream to write audio data to.\n *\n * @param {!string} mimetype\n *     The mimetype of the audio data to send along the provided stream, which\n *     must be a \"audio/L8\" or \"audio/L16\" mimetype with necessary parameters,\n *     such as: \"audio/L16;rate=44100,channels=2\".\n */\nGuacamole.RawAudioRecorder = function RawAudioRecorder(stream, mimetype) {\n\n    /**\n     * Reference to this RawAudioRecorder.\n     *\n     * @private\n     * @type {!Guacamole.RawAudioRecorder}\n     */\n    var recorder = this;\n\n    /**\n     * The size of audio buffer to request from the Web Audio API when\n     * recording or processing audio, in sample-frames. This must be a power of\n     * two between 256 and 16384 inclusive, as required by\n     * AudioContext.createScriptProcessor().\n     *\n     * @private\n     * @constant\n     * @type {!number}\n     */\n    var BUFFER_SIZE = 2048;\n\n    /**\n     * The window size to use when applying Lanczos interpolation, commonly\n     * denoted by the variable \"a\".\n     * See: https://en.wikipedia.org/wiki/Lanczos_resampling\n     *\n     * @private\n     * @contant\n     * @type {!number}\n     */\n    var LANCZOS_WINDOW_SIZE = 3;\n\n    /**\n     * The format of audio this recorder will encode.\n     *\n     * @private\n     * @type {Guacamole.RawAudioFormat}\n     */\n    var format = Guacamole.RawAudioFormat.parse(mimetype);\n\n    /**\n     * An instance of a Web Audio API AudioContext object, or null if the\n     * Web Audio API is not supported.\n     *\n     * @private\n     * @type {AudioContext}\n     */\n    var context = Guacamole.AudioContextFactory.getAudioContext();\n\n    // Some browsers do not implement navigator.mediaDevices - this\n    // shims in this functionality to ensure code compatibility.\n    if (!navigator.mediaDevices)\n        navigator.mediaDevices = {};\n\n    // Browsers that either do not implement navigator.mediaDevices\n    // at all or do not implement it completely need the getUserMedia\n    // method defined.  This shims in this function by detecting\n    // one of the supported legacy methods.\n    if (!navigator.mediaDevices.getUserMedia)\n        navigator.mediaDevices.getUserMedia = (navigator.getUserMedia\n                || navigator.webkitGetUserMedia\n                || navigator.mozGetUserMedia\n                || navigator.msGetUserMedia).bind(navigator);\n\n    /**\n     * Guacamole.ArrayBufferWriter wrapped around the audio output stream\n     * provided when this Guacamole.RawAudioRecorder was created.\n     *\n     * @private\n     * @type {!Guacamole.ArrayBufferWriter}\n     */\n    var writer = new Guacamole.ArrayBufferWriter(stream);\n\n    /**\n     * The type of typed array that will be used to represent each audio packet\n     * internally. This will be either Int8Array or Int16Array, depending on\n     * whether the raw audio format is 8-bit or 16-bit.\n     *\n     * @private\n     * @constructor\n     */\n    var SampleArray = (format.bytesPerSample === 1) ? window.Int8Array : window.Int16Array;\n\n    /**\n     * The maximum absolute value of any sample within a raw audio packet sent\n     * by this audio recorder. This depends only on the size of each sample,\n     * and will be 128 for 8-bit audio and 32768 for 16-bit audio.\n     *\n     * @private\n     * @type {!number}\n     */\n    var maxSampleValue = (format.bytesPerSample === 1) ? 128 : 32768;\n\n    /**\n     * The total number of audio samples read from the local audio input device\n     * over the life of this audio recorder.\n     *\n     * @private\n     * @type {!number}\n     */\n    var readSamples = 0;\n\n    /**\n     * The total number of audio samples written to the underlying Guacamole\n     * connection over the life of this audio recorder.\n     *\n     * @private\n     * @type {!number}\n     */\n    var writtenSamples = 0;\n\n    /**\n     * The audio stream provided by the browser, if allowed. If no stream has\n     * yet been received, this will be null.\n     *\n     * @private\n     * @type {MediaStream}\n     */\n    var mediaStream = null;\n\n    /**\n     * The source node providing access to the local audio input device.\n     *\n     * @private\n     * @type {MediaStreamAudioSourceNode}\n     */\n    var source = null;\n\n    /**\n     * The script processing node which receives audio input from the media\n     * stream source node as individual audio buffers.\n     *\n     * @private\n     * @type {ScriptProcessorNode}\n     */\n    var processor = null;\n\n    /**\n     * The normalized sinc function. The normalized sinc function is defined as\n     * 1 for x=0 and sin(PI * x) / (PI * x) for all other values of x.\n     *\n     * See: https://en.wikipedia.org/wiki/Sinc_function\n     *\n     * @private\n     * @param {!number} x\n     *     The point at which the normalized sinc function should be computed.\n     *\n     * @returns {!number}\n     *     The value of the normalized sinc function at x.\n     */\n    var sinc = function sinc(x) {\n\n        // The value of sinc(0) is defined as 1\n        if (x === 0)\n            return 1;\n\n        // Otherwise, normlized sinc(x) is sin(PI * x) / (PI * x)\n        var piX = Math.PI * x;\n        return Math.sin(piX) / piX;\n\n    };\n\n    /**\n     * Calculates the value of the Lanczos kernal at point x for a given window\n     * size. See: https://en.wikipedia.org/wiki/Lanczos_resampling\n     *\n     * @private\n     * @param {!number} x\n     *     The point at which the value of the Lanczos kernel should be\n     *     computed.\n     *\n     * @param {!number} a\n     *     The window size to use for the Lanczos kernel.\n     *\n     * @returns {!number}\n     *     The value of the Lanczos kernel at the given point for the given\n     *     window size.\n     */\n    var lanczos = function lanczos(x, a) {\n\n        // Lanczos is sinc(x) * sinc(x / a) for -a < x < a ...\n        if (-a < x && x < a)\n            return sinc(x) * sinc(x / a);\n\n        // ... and 0 otherwise\n        return 0;\n\n    };\n\n    /**\n     * Determines the value of the waveform represented by the audio data at\n     * the given location. If the value cannot be determined exactly as it does\n     * not correspond to an exact sample within the audio data, the value will\n     * be derived through interpolating nearby samples.\n     *\n     * @private\n     * @param {!Float32Array} audioData\n     *     An array of audio data, as returned by AudioBuffer.getChannelData().\n     *\n     * @param {!number} t\n     *     The relative location within the waveform from which the value\n     *     should be retrieved, represented as a floating point number between\n     *     0 and 1 inclusive, where 0 represents the earliest point in time and\n     *     1 represents the latest.\n     *\n     * @returns {!number}\n     *     The value of the waveform at the given location.\n     */\n    var interpolateSample = function getValueAt(audioData, t) {\n\n        // Convert [0, 1] range to [0, audioData.length - 1]\n        var index = (audioData.length - 1) * t;\n\n        // Determine the start and end points for the summation used by the\n        // Lanczos interpolation algorithm (see: https://en.wikipedia.org/wiki/Lanczos_resampling)\n        var start = Math.floor(index) - LANCZOS_WINDOW_SIZE + 1;\n        var end = Math.floor(index) + LANCZOS_WINDOW_SIZE;\n\n        // Calculate the value of the Lanczos interpolation function for the\n        // required range\n        var sum = 0;\n        for (var i = start; i <= end; i++) {\n            sum += (audioData[i] || 0) * lanczos(index - i, LANCZOS_WINDOW_SIZE);\n        }\n\n        return sum;\n\n    };\n\n    /**\n     * Converts the given AudioBuffer into an audio packet, ready for streaming\n     * along the underlying output stream. Unlike the raw audio packets used by\n     * this audio recorder, AudioBuffers require floating point samples and are\n     * split into isolated planes of channel-specific data.\n     *\n     * @private\n     * @param {!AudioBuffer} audioBuffer\n     *     The Web Audio API AudioBuffer that should be converted to a raw\n     *     audio packet.\n     *\n     * @returns {!SampleArray}\n     *     A new raw audio packet containing the audio data from the provided\n     *     AudioBuffer.\n     */\n    var toSampleArray = function toSampleArray(audioBuffer) {\n\n        // Track overall amount of data read\n        var inSamples = audioBuffer.length;\n        readSamples += inSamples;\n\n        // Calculate the total number of samples that should be written as of\n        // the audio data just received and adjust the size of the output\n        // packet accordingly\n        var expectedWrittenSamples = Math.round(readSamples * format.rate / audioBuffer.sampleRate);\n        var outSamples = expectedWrittenSamples - writtenSamples;\n\n        // Update number of samples written\n        writtenSamples += outSamples;\n\n        // Get array for raw PCM storage\n        var data = new SampleArray(outSamples * format.channels);\n\n        // Convert each channel\n        for (var channel = 0; channel < format.channels; channel++) {\n\n            var audioData = audioBuffer.getChannelData(channel);\n\n            // Fill array with data from audio buffer channel\n            var offset = channel;\n            for (var i = 0; i < outSamples; i++) {\n                data[offset] = interpolateSample(audioData, i / (outSamples - 1)) * maxSampleValue;\n                offset += format.channels;\n            }\n\n        }\n\n        return data;\n\n    };\n\n    /**\n     * getUserMedia() callback which handles successful retrieval of an\n     * audio stream (successful start of recording).\n     *\n     * @private\n     * @param {!MediaStream} stream\n     *     A MediaStream which provides access to audio data read from the\n     *     user's local audio input device.\n     */\n    var streamReceived = function streamReceived(stream) {\n\n        // Create processing node which receives appropriately-sized audio buffers\n        processor = context.createScriptProcessor(BUFFER_SIZE, format.channels, format.channels);\n        processor.connect(context.destination);\n\n        // Send blobs when audio buffers are received\n        processor.onaudioprocess = function processAudio(e) {\n            writer.sendData(toSampleArray(e.inputBuffer).buffer);\n        };\n\n        // Connect processing node to user's audio input source\n        source = context.createMediaStreamSource(stream);\n        source.connect(processor);\n\n        // Attempt to explicitly resume AudioContext, as it may be paused\n        // by default\n        if (context.state === 'suspended')\n            context.resume();\n\n        // Save stream for later cleanup\n        mediaStream = stream;\n\n    };\n\n    /**\n     * getUserMedia() callback which handles audio recording denial. The\n     * underlying Guacamole output stream is closed, and the failure to\n     * record is noted using onerror.\n     *\n     * @private\n     */\n    var streamDenied = function streamDenied() {\n\n        // Simply end stream if audio access is not allowed\n        writer.sendEnd();\n\n        // Notify of closure\n        if (recorder.onerror)\n            recorder.onerror();\n\n    };\n\n    /**\n     * Requests access to the user's microphone and begins capturing audio. All\n     * received audio data is resampled as necessary and forwarded to the\n     * Guacamole stream underlying this Guacamole.RawAudioRecorder. This\n     * function must be invoked ONLY ONCE per instance of\n     * Guacamole.RawAudioRecorder.\n     *\n     * @private\n     */\n    var beginAudioCapture = function beginAudioCapture() {\n\n        // Attempt to retrieve an audio input stream from the browser\n        var promise = navigator.mediaDevices.getUserMedia({\n            'audio' : true\n        }, streamReceived, streamDenied);\n\n        // Handle stream creation/rejection via Promise for newer versions of\n        // getUserMedia()\n        if (promise && promise.then)\n            promise.then(streamReceived, streamDenied);\n\n    };\n\n    /**\n     * Stops capturing audio, if the capture has started, freeing all associated\n     * resources. If the capture has not started, this function simply ends the\n     * underlying Guacamole stream.\n     *\n     * @private\n     */\n    var stopAudioCapture = function stopAudioCapture() {\n\n        // Disconnect media source node from script processor\n        if (source)\n            source.disconnect();\n\n        // Disconnect associated script processor node\n        if (processor)\n            processor.disconnect();\n\n        // Stop capture\n        if (mediaStream) {\n            var tracks = mediaStream.getTracks();\n            for (var i = 0; i < tracks.length; i++)\n                tracks[i].stop();\n        }\n\n        // Remove references to now-unneeded components\n        processor = null;\n        source = null;\n        mediaStream = null;\n\n        // End stream\n        writer.sendEnd();\n\n    };\n\n    // Once audio stream is successfully open, request and begin reading audio\n    writer.onack = function audioStreamAcknowledged(status) {\n\n        // Begin capture if successful response and not yet started\n        if (status.code === Guacamole.Status.Code.SUCCESS && !mediaStream)\n            beginAudioCapture();\n\n        // Otherwise stop capture and cease handling any further acks\n        else {\n\n            // Stop capturing audio\n            stopAudioCapture();\n            writer.onack = null;\n\n            // Notify if stream has closed normally\n            if (status.code === Guacamole.Status.Code.RESOURCE_CLOSED) {\n                if (recorder.onclose)\n                    recorder.onclose();\n            }\n\n            // Otherwise notify of closure due to error\n            else {\n                if (recorder.onerror)\n                    recorder.onerror();\n            }\n\n        }\n\n    };\n\n};\n\nGuacamole.RawAudioRecorder.prototype = new Guacamole.AudioRecorder();\n\n/**\n * Determines whether the given mimetype is supported by\n * Guacamole.RawAudioRecorder.\n *\n * @param {!string} mimetype\n *     The mimetype to check.\n *\n * @returns {!boolean}\n *     true if the given mimetype is supported by Guacamole.RawAudioRecorder,\n *     false otherwise.\n */\nGuacamole.RawAudioRecorder.isSupportedType = function isSupportedType(mimetype) {\n\n    // No supported types if no Web Audio API\n    if (!Guacamole.AudioContextFactory.getAudioContext())\n        return false;\n\n    return Guacamole.RawAudioFormat.parse(mimetype) !== null;\n\n};\n\n/**\n * Returns a list of all mimetypes supported by Guacamole.RawAudioRecorder. Only\n * the core mimetypes themselves will be listed. Any mimetype parameters, even\n * required ones, will not be included in the list. For example, \"audio/L8\" is\n * a raw audio mimetype that may be supported, but it is invalid without\n * additional parameters. Something like \"audio/L8;rate=44100\" would be valid,\n * however (see https://tools.ietf.org/html/rfc4856).\n *\n * @returns {!string[]}\n *     A list of all mimetypes supported by Guacamole.RawAudioRecorder,\n *     excluding any parameters. If the necessary JavaScript APIs for recording\n *     raw audio are absent, this list will be empty.\n */\nGuacamole.RawAudioRecorder.getSupportedTypes = function getSupportedTypes() {\n\n    // No supported types if no Web Audio API\n    if (!Guacamole.AudioContextFactory.getAudioContext())\n        return [];\n\n    // We support 8-bit and 16-bit raw PCM\n    return [\n        'audio/L8',\n        'audio/L16'\n    ];\n\n};\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar Guacamole = Guacamole || {};\n\n/**\n * A reader which automatically handles the given input stream, assembling all\n * received blobs into a single blob by appending them to each other in order.\n * Note that this object will overwrite any installed event handlers on the\n * given Guacamole.InputStream.\n * \n * @constructor\n * @param {!Guacamole.InputStream} stream\n *     The stream that data will be read from.\n *\n * @param {!string} mimetype\n *     The mimetype of the blob being built.\n */\nGuacamole.BlobReader = function(stream, mimetype) {\n\n    /**\n     * Reference to this Guacamole.InputStream.\n     *\n     * @private\n     * @type {!Guacamole.BlobReader}\n     */\n    var guac_reader = this;\n\n    /**\n     * The length of this Guacamole.InputStream in bytes.\n     *\n     * @private\n     * @type {!number}\n     */\n    var length = 0;\n\n    // Get blob builder\n    var blob_builder;\n    if      (window.BlobBuilder)       blob_builder = new BlobBuilder();\n    else if (window.WebKitBlobBuilder) blob_builder = new WebKitBlobBuilder();\n    else if (window.MozBlobBuilder)    blob_builder = new MozBlobBuilder();\n    else\n        blob_builder = new (function() {\n\n            var blobs = [];\n\n            /** @ignore */\n            this.append = function(data) {\n                blobs.push(new Blob([data], {\"type\": mimetype}));\n            };\n\n            /** @ignore */\n            this.getBlob = function() {\n                return new Blob(blobs, {\"type\": mimetype});\n            };\n\n        })();\n\n    // Append received blobs\n    stream.onblob = function(data) {\n\n        // Convert to ArrayBuffer\n        var binary = window.atob(data);\n        var arrayBuffer = new ArrayBuffer(binary.length);\n        var bufferView = new Uint8Array(arrayBuffer);\n\n        for (var i=0; i<binary.length; i++)\n            bufferView[i] = binary.charCodeAt(i);\n\n        blob_builder.append(arrayBuffer);\n        length += arrayBuffer.byteLength;\n\n        // Call handler, if present\n        if (guac_reader.onprogress)\n            guac_reader.onprogress(arrayBuffer.byteLength);\n\n        // Send success response\n        stream.sendAck(\"OK\", 0x0000);\n\n    };\n\n    // Simply call onend when end received\n    stream.onend = function() {\n        if (guac_reader.onend)\n            guac_reader.onend();\n    };\n\n    /**\n     * Returns the current length of this Guacamole.InputStream, in bytes.\n     *\n     * @return {!number}\n     *     The current length of this Guacamole.InputStream.\n     */\n    this.getLength = function() {\n        return length;\n    };\n\n    /**\n     * Returns the contents of this Guacamole.BlobReader as a Blob.\n     *\n     * @return {!Blob}\n     *     The contents of this Guacamole.BlobReader.\n     */\n    this.getBlob = function() {\n        return blob_builder.getBlob();\n    };\n\n    /**\n     * Fired once for every blob of data received.\n     * \n     * @event\n     * @param {!number} length\n     *     The number of bytes received.\n     */\n    this.onprogress = null;\n\n    /**\n     * Fired once this stream is finished and no further data will be written.\n     * @event\n     */\n    this.onend = null;\n\n};\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar Guacamole = Guacamole || {};\n\n/**\n * A writer which automatically writes to the given output stream with the\n * contents of provided Blob objects.\n *\n * @constructor\n * @param {!Guacamole.OutputStream} stream\n *     The stream that data will be written to.\n */\nGuacamole.BlobWriter = function BlobWriter(stream) {\n\n    /**\n     * Reference to this Guacamole.BlobWriter.\n     *\n     * @private\n     * @type {!Guacamole.BlobWriter}\n     */\n    var guacWriter = this;\n\n    /**\n     * Wrapped Guacamole.ArrayBufferWriter which will be used to send any\n     * provided file data.\n     *\n     * @private\n     * @type {!Guacamole.ArrayBufferWriter}\n     */\n    var arrayBufferWriter = new Guacamole.ArrayBufferWriter(stream);\n\n    // Initially, simply call onack for acknowledgements\n    arrayBufferWriter.onack = function(status) {\n        if (guacWriter.onack)\n            guacWriter.onack(status);\n    };\n\n    /**\n     * Browser-independent implementation of Blob.slice() which uses an end\n     * offset to determine the span of the resulting slice, rather than a\n     * length.\n     *\n     * @private\n     * @param {!Blob} blob\n     *     The Blob to slice.\n     *\n     * @param {!number} start\n     *     The starting offset of the slice, in bytes, inclusive.\n     *\n     * @param {!number} end\n     *     The ending offset of the slice, in bytes, exclusive.\n     *\n     * @returns {!Blob}\n     *     A Blob containing the data within the given Blob starting at\n     *     <code>start</code> and ending at <code>end - 1</code>.\n     */\n    var slice = function slice(blob, start, end) {\n\n        // Use prefixed implementations if necessary\n        var sliceImplementation = (\n                blob.slice\n             || blob.webkitSlice\n             || blob.mozSlice\n        ).bind(blob);\n\n        var length = end - start;\n\n        // The old Blob.slice() was length-based (not end-based). Try the\n        // length version first, if the two calls are not equivalent.\n        if (length !== end) {\n\n            // If the result of the slice() call matches the expected length,\n            // trust that result. It must be correct.\n            var sliceResult = sliceImplementation(start, length);\n            if (sliceResult.size === length)\n                return sliceResult;\n\n        }\n\n        // Otherwise, use the most-recent standard: end-based slice()\n        return sliceImplementation(start, end);\n\n    };\n\n    /**\n     * Sends the contents of the given blob over the underlying stream.\n     *\n     * @param {!Blob} blob\n     *     The blob to send.\n     */\n    this.sendBlob = function sendBlob(blob) {\n\n        var offset = 0;\n        var reader = new FileReader();\n\n        /**\n         * Reads the next chunk of the blob provided to\n         * [sendBlob()]{@link Guacamole.BlobWriter#sendBlob}. The chunk itself\n         * is read asynchronously, and will not be available until\n         * reader.onload fires.\n         *\n         * @private\n         */\n        var readNextChunk = function readNextChunk() {\n\n            // If no further chunks remain, inform of completion and stop\n            if (offset >= blob.size) {\n\n                // Fire completion event for completed blob\n                if (guacWriter.oncomplete)\n                    guacWriter.oncomplete(blob);\n\n                // No further chunks to read\n                return;\n\n            }\n\n            // Obtain reference to next chunk as a new blob\n            var chunk = slice(blob, offset, offset + arrayBufferWriter.blobLength);\n            offset += arrayBufferWriter.blobLength;\n\n            // Attempt to read the blob contents represented by the blob into\n            // a new array buffer\n            reader.readAsArrayBuffer(chunk);\n\n        };\n\n        // Send each chunk over the stream, continue reading the next chunk\n        reader.onload = function chunkLoadComplete() {\n\n            // Send the successfully-read chunk\n            arrayBufferWriter.sendData(reader.result);\n\n            // Continue sending more chunks after the latest chunk is\n            // acknowledged\n            arrayBufferWriter.onack = function sendMoreChunks(status) {\n\n                if (guacWriter.onack)\n                    guacWriter.onack(status);\n\n                // Abort transfer if an error occurs\n                if (status.isError())\n                    return;\n\n                // Inform of blob upload progress via progress events\n                if (guacWriter.onprogress)\n                    guacWriter.onprogress(blob, offset - arrayBufferWriter.blobLength);\n\n                // Queue the next chunk for reading\n                readNextChunk();\n\n            };\n\n        };\n\n        // If an error prevents further reading, inform of error and stop\n        reader.onerror = function chunkLoadFailed() {\n\n            // Fire error event, including the context of the error\n            if (guacWriter.onerror)\n                guacWriter.onerror(blob, offset, reader.error);\n\n        };\n\n        // Begin reading the first chunk\n        readNextChunk();\n\n    };\n\n    /**\n     * Signals that no further text will be sent, effectively closing the\n     * stream.\n     */\n    this.sendEnd = function sendEnd() {\n        arrayBufferWriter.sendEnd();\n    };\n\n    /**\n     * Fired for received data, if acknowledged by the server.\n     *\n     * @event\n     * @param {!Guacamole.Status} status\n     *     The status of the operation.\n     */\n    this.onack = null;\n\n    /**\n     * Fired when an error occurs reading a blob passed to\n     * [sendBlob()]{@link Guacamole.BlobWriter#sendBlob}. The transfer for the\n     * the given blob will cease, but the stream will remain open.\n     *\n     * @event\n     * @param {!Blob} blob\n     *     The blob that was being read when the error occurred.\n     *\n     * @param {!number} offset\n     *     The offset of the failed read attempt within the blob, in bytes.\n     *\n     * @param {!DOMError} error\n     *     The error that occurred.\n     */\n    this.onerror = null;\n\n    /**\n     * Fired for each successfully-read chunk of data as a blob is being sent\n     * via [sendBlob()]{@link Guacamole.BlobWriter#sendBlob}.\n     *\n     * @event\n     * @param {!Blob} blob\n     *     The blob that is being read.\n     *\n     * @param {!number} offset\n     *     The offset of the read that just succeeded.\n     */\n    this.onprogress = null;\n\n    /**\n     * Fired when a blob passed to\n     * [sendBlob()]{@link Guacamole.BlobWriter#sendBlob} has finished being\n     * sent.\n     *\n     * @event\n     * @param {!Blob} blob\n     *     The blob that was sent.\n     */\n    this.oncomplete = null;\n\n};\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar Guacamole = Guacamole || {};\n\n/**\n * Guacamole protocol client. Given a {@link Guacamole.Tunnel},\n * automatically handles incoming and outgoing Guacamole instructions via the\n * provided tunnel, updating its display using one or more canvas elements.\n * \n * @constructor\n * @param {!Guacamole.Tunnel} tunnel\n *     The tunnel to use to send and receive Guacamole instructions.\n */\nGuacamole.Client = function(tunnel) {\n\n    var guac_client = this;\n\n    var STATE_IDLE          = 0;\n    var STATE_CONNECTING    = 1;\n    var STATE_WAITING       = 2;\n    var STATE_CONNECTED     = 3;\n    var STATE_DISCONNECTING = 4;\n    var STATE_DISCONNECTED  = 5;\n\n    var currentState = STATE_IDLE;\n    \n    var currentTimestamp = 0;\n    var pingInterval = null;\n\n    /**\n     * Translation from Guacamole protocol line caps to Layer line caps.\n     *\n     * @private\n     * @type {!Object.<number, string>}\n     */\n    var lineCap = {\n        0: \"butt\",\n        1: \"round\",\n        2: \"square\"\n    };\n\n    /**\n     * Translation from Guacamole protocol line caps to Layer line caps.\n     *\n     * @private\n     * @type {!Object.<number, string>}\n     */\n    var lineJoin = {\n        0: \"bevel\",\n        1: \"miter\",\n        2: \"round\"\n    };\n\n    /**\n     * The underlying Guacamole display.\n     *\n     * @private\n     * @type {!Guacamole.Display}\n     */\n    var display = new Guacamole.Display();\n\n    /**\n     * All available layers and buffers\n     *\n     * @private\n     * @type {!Object.<number, (Guacamole.Display.VisibleLayer|Guacamole.Layer)>}\n     */\n    var layers = {};\n    \n    /**\n     * All audio players currently in use by the client. Initially, this will\n     * be empty, but audio players may be allocated by the server upon request.\n     *\n     * @private\n     * @type {!Object.<number, Guacamole.AudioPlayer>}\n     */\n    var audioPlayers = {};\n\n    /**\n     * All video players currently in use by the client. Initially, this will\n     * be empty, but video players may be allocated by the server upon request.\n     *\n     * @private\n     * @type {!Object.<number, Guacamole.VideoPlayer>}\n     */\n    var videoPlayers = {};\n\n    // No initial parsers\n    var parsers = [];\n\n    // No initial streams \n    var streams = [];\n\n    /**\n     * All current objects. The index of each object is dictated by the\n     * Guacamole server.\n     *\n     * @private\n     * @type {!Guacamole.Object[]}\n     */\n    var objects = [];\n\n    // Pool of available stream indices\n    var stream_indices = new Guacamole.IntegerPool();\n\n    // Array of allocated output streams by index\n    var output_streams = [];\n\n    function setState(state) {\n        if (state != currentState) {\n            currentState = state;\n            if (guac_client.onstatechange)\n                guac_client.onstatechange(currentState);\n        }\n    }\n\n    function isConnected() {\n        return currentState == STATE_CONNECTED\n            || currentState == STATE_WAITING;\n    }\n\n    /**\n     * Produces an opaque representation of Guacamole.Client state which can be\n     * later imported through a call to importState(). This object is\n     * effectively an independent, compressed snapshot of protocol and display\n     * state. Invoking this function implicitly flushes the display.\n     *\n     * @param {!function} callback\n     *     Callback which should be invoked once the state object is ready. The\n     *     state object will be passed to the callback as the sole parameter.\n     *     This callback may be invoked immediately, or later as the display\n     *     finishes rendering and becomes ready.\n     */\n    this.exportState = function exportState(callback) {\n\n        // Start with empty state\n        var state = {\n            'currentState' : currentState,\n            'currentTimestamp' : currentTimestamp,\n            'layers' : {}\n        };\n\n        var layersSnapshot = {};\n\n        // Make a copy of all current layers (protocol state)\n        for (var key in layers) {\n            layersSnapshot[key] = layers[key];\n        }\n\n        // Populate layers once data is available (display state, requires flush)\n        display.flush(function populateLayers() {\n\n            // Export each defined layer/buffer\n            for (var key in layersSnapshot) {\n\n                var index = parseInt(key);\n                var layer = layersSnapshot[key];\n                var canvas = layer.toCanvas();\n\n                // Store layer/buffer dimensions\n                var exportLayer = {\n                    'width'  : layer.width,\n                    'height' : layer.height\n                };\n\n                // Store layer/buffer image data, if it can be generated\n                if (layer.width && layer.height)\n                    exportLayer.url = canvas.toDataURL('image/png');\n\n                // Add layer properties if not a buffer nor the default layer\n                if (index > 0) {\n                    exportLayer.x = layer.x;\n                    exportLayer.y = layer.y;\n                    exportLayer.z = layer.z;\n                    exportLayer.alpha = layer.alpha;\n                    exportLayer.matrix = layer.matrix;\n                    exportLayer.parent = getLayerIndex(layer.parent);\n                }\n\n                // Store exported layer\n                state.layers[key] = exportLayer;\n\n            }\n\n            // Invoke callback now that the state is ready\n            callback(state);\n\n        });\n\n    };\n\n    /**\n     * Restores Guacamole.Client protocol and display state based on an opaque\n     * object from a prior call to exportState(). The Guacamole.Client instance\n     * used to export that state need not be the same as this instance.\n     *\n     * @param {!object} state\n     *     An opaque representation of Guacamole.Client state from a prior call\n     *     to exportState().\n     *\n     * @param {function} [callback]\n     *     The function to invoke when state has finished being imported. This\n     *     may happen immediately, or later as images within the provided state\n     *     object are loaded.\n     */\n    this.importState = function importState(state, callback) {\n\n        var key;\n        var index;\n\n        currentState = state.currentState;\n        currentTimestamp = state.currentTimestamp;\n\n        // Dispose of all layers\n        for (key in layers) {\n            index = parseInt(key);\n            if (index > 0)\n                display.dispose(layers[key]);\n        }\n\n        layers = {};\n\n        // Import state of each layer/buffer\n        for (key in state.layers) {\n\n            index = parseInt(key);\n\n            var importLayer = state.layers[key];\n            var layer = getLayer(index);\n\n            // Reset layer size\n            display.resize(layer, importLayer.width, importLayer.height);\n\n            // Initialize new layer if it has associated data\n            if (importLayer.url) {\n                display.setChannelMask(layer, Guacamole.Layer.SRC);\n                display.draw(layer, 0, 0, importLayer.url);\n            }\n\n            // Set layer-specific properties if not a buffer nor the default layer\n            if (index > 0 && importLayer.parent >= 0) {\n\n                // Apply layer position and set parent\n                var parent = getLayer(importLayer.parent);\n                display.move(layer, parent, importLayer.x, importLayer.y, importLayer.z);\n\n                // Set layer transparency\n                display.shade(layer, importLayer.alpha);\n\n                // Apply matrix transform\n                var matrix = importLayer.matrix;\n                display.distort(layer,\n                    matrix[0], matrix[1], matrix[2],\n                    matrix[3], matrix[4], matrix[5]);\n\n            }\n\n        }\n\n        // Flush changes to display\n        display.flush(callback);\n\n    };\n\n    /**\n     * Returns the underlying display of this Guacamole.Client. The display\n     * contains an Element which can be added to the DOM, causing the\n     * display to become visible.\n     * \n     * @return {!Guacamole.Display}\n     *     The underlying display of this Guacamole.Client.\n     */\n    this.getDisplay = function() {\n        return display;\n    };\n\n    /**\n     * Sends the current size of the screen.\n     * \n     * @param {!number} width\n     *     The width of the screen.\n     *\n     * @param {!number} height\n     *     The height of the screen.\n     */\n    this.sendSize = function(width, height) {\n\n        // Do not send requests if not connected\n        if (!isConnected())\n            return;\n\n        tunnel.sendMessage(\"size\", width, height);\n\n    };\n\n    /**\n     * Sends a key event having the given properties as if the user\n     * pressed or released a key.\n     * \n     * @param {!boolean} pressed\n     *     Whether the key is pressed (true) or released (false).\n     *\n     * @param {!number} keysym\n     *     The keysym of the key being pressed or released.\n     */\n    this.sendKeyEvent = function(pressed, keysym) {\n        // Do not send requests if not connected\n        if (!isConnected())\n            return;\n\n        tunnel.sendMessage(\"key\", keysym, pressed);\n    };\n\n    /**\n     * Sends a mouse event having the properties provided by the given mouse\n     * state.\n     * \n     * @param {!Guacamole.Mouse.State} mouseState\n     *     The state of the mouse to send in the mouse event.\n     *\n     * @param {boolean} [applyDisplayScale=false]\n     *     Whether the provided mouse state uses local display units, rather\n     *     than remote display units, and should be scaled to match the\n     *     {@link Guacamole.Display}.\n     */\n    this.sendMouseState = function sendMouseState(mouseState, applyDisplayScale) {\n\n        // Do not send requests if not connected\n        if (!isConnected())\n            return;\n\n        var x = mouseState.x;\n        var y = mouseState.y;\n\n        // Translate for display units if requested\n        if (applyDisplayScale) {\n            x /= display.getScale();\n            y /= display.getScale();\n        }\n\n        // Update client-side cursor\n        display.moveCursor(\n            Math.floor(x),\n            Math.floor(y)\n        );\n\n        // Build mask\n        var buttonMask = 0;\n        if (mouseState.left)   buttonMask |= 1;\n        if (mouseState.middle) buttonMask |= 2;\n        if (mouseState.right)  buttonMask |= 4;\n        if (mouseState.up)     buttonMask |= 8;\n        if (mouseState.down)   buttonMask |= 16;\n\n        // Send message\n        tunnel.sendMessage(\"mouse\", Math.floor(x), Math.floor(y), buttonMask);\n    };\n\n    /**\n     * Sends a touch event having the properties provided by the given touch\n     * state.\n     *\n     * @param {!Guacamole.Touch.State} touchState\n     *     The state of the touch contact to send in the touch event.\n     *\n     * @param {boolean} [applyDisplayScale=false]\n     *     Whether the provided touch state uses local display units, rather\n     *     than remote display units, and should be scaled to match the\n     *     {@link Guacamole.Display}.\n     */\n    this.sendTouchState = function sendTouchState(touchState, applyDisplayScale) {\n\n        // Do not send requests if not connected\n        if (!isConnected())\n            return;\n\n        var x = touchState.x;\n        var y = touchState.y;\n\n        // Translate for display units if requested\n        if (applyDisplayScale) {\n            x /= display.getScale();\n            y /= display.getScale();\n        }\n\n        tunnel.sendMessage('touch', touchState.id, Math.floor(x), Math.floor(y),\n            Math.floor(touchState.radiusX), Math.floor(touchState.radiusY),\n            touchState.angle, touchState.force);\n\n    };\n\n    /**\n     * Allocates an available stream index and creates a new\n     * Guacamole.OutputStream using that index, associating the resulting\n     * stream with this Guacamole.Client. Note that this stream will not yet\n     * exist as far as the other end of the Guacamole connection is concerned.\n     * Streams exist within the Guacamole protocol only when referenced by an\n     * instruction which creates the stream, such as a \"clipboard\", \"file\", or\n     * \"pipe\" instruction.\n     *\n     * @returns {!Guacamole.OutputStream}\n     *     A new Guacamole.OutputStream with a newly-allocated index and\n     *     associated with this Guacamole.Client.\n     */\n    this.createOutputStream = function createOutputStream() {\n\n        // Allocate index\n        var index = stream_indices.next();\n\n        // Return new stream\n        var stream = output_streams[index] = new Guacamole.OutputStream(guac_client, index);\n        return stream;\n\n    };\n\n    /**\n     * Opens a new audio stream for writing, where audio data having the give\n     * mimetype will be sent along the returned stream. The instruction\n     * necessary to create this stream will automatically be sent.\n     *\n     * @param {!string} mimetype\n     *     The mimetype of the audio data that will be sent along the returned\n     *     stream.\n     *\n     * @return {!Guacamole.OutputStream}\n     *     The created audio stream.\n     */\n    this.createAudioStream = function(mimetype) {\n\n        // Allocate and associate stream with audio metadata\n        var stream = guac_client.createOutputStream();\n        tunnel.sendMessage(\"audio\", stream.index, mimetype);\n        return stream;\n\n    };\n\n    /**\n     * Opens a new file for writing, having the given index, mimetype and\n     * filename. The instruction necessary to create this stream will\n     * automatically be sent.\n     *\n     * @param {!string} mimetype\n     *     The mimetype of the file being sent.\n     *\n     * @param {!string} filename\n     *     The filename of the file being sent.\n     *\n     * @return {!Guacamole.OutputStream}\n     *     The created file stream.\n     */\n    this.createFileStream = function(mimetype, filename) {\n\n        // Allocate and associate stream with file metadata\n        var stream = guac_client.createOutputStream();\n        tunnel.sendMessage(\"file\", stream.index, mimetype, filename);\n        return stream;\n\n    };\n\n    /**\n     * Opens a new pipe for writing, having the given name and mimetype. The\n     * instruction necessary to create this stream will automatically be sent.\n     *\n     * @param {!string} mimetype\n     *     The mimetype of the data being sent.\n     *\n     * @param {!string} name\n     *     The name of the pipe.\n     *\n     * @return {!Guacamole.OutputStream}\n     *     The created file stream.\n     */\n    this.createPipeStream = function(mimetype, name) {\n\n        // Allocate and associate stream with pipe metadata\n        var stream = guac_client.createOutputStream();\n        tunnel.sendMessage(\"pipe\", stream.index, mimetype, name);\n        return stream;\n\n    };\n\n    /**\n     * Opens a new clipboard object for writing, having the given mimetype. The\n     * instruction necessary to create this stream will automatically be sent.\n     *\n     * @param {!string} mimetype\n     *     The mimetype of the data being sent.\n     *\n     * @param {!string} name\n     *     The name of the pipe.\n     *\n     * @return {!Guacamole.OutputStream}\n     *     The created file stream.\n     */\n    this.createClipboardStream = function(mimetype) {\n\n        // Allocate and associate stream with clipboard metadata\n        var stream = guac_client.createOutputStream();\n        tunnel.sendMessage(\"clipboard\", stream.index, mimetype);\n        return stream;\n\n    };\n\n    /**\n     * Opens a new argument value stream for writing, having the given\n     * parameter name and mimetype, requesting that the connection parameter\n     * with the given name be updated to the value described by the contents\n     * of the following stream. The instruction necessary to create this stream\n     * will automatically be sent.\n     *\n     * @param {!string} mimetype\n     *     The mimetype of the data being sent.\n     *\n     * @param {!string} name\n     *     The name of the connection parameter to attempt to update.\n     *\n     * @return {!Guacamole.OutputStream}\n     *     The created argument value stream.\n     */\n    this.createArgumentValueStream = function createArgumentValueStream(mimetype, name) {\n\n        // Allocate and associate stream with argument value metadata\n        var stream = guac_client.createOutputStream();\n        tunnel.sendMessage(\"argv\", stream.index, mimetype, name);\n        return stream;\n\n    };\n\n    /**\n     * Creates a new output stream associated with the given object and having\n     * the given mimetype and name. The legality of a mimetype and name is\n     * dictated by the object itself. The instruction necessary to create this\n     * stream will automatically be sent.\n     *\n     * @param {!number} index\n     *     The index of the object for which the output stream is being\n     *     created.\n     *\n     * @param {!string} mimetype\n     *     The mimetype of the data which will be sent to the output stream.\n     *\n     * @param {!string} name\n     *     The defined name of an output stream within the given object.\n     *\n     * @returns {!Guacamole.OutputStream}\n     *     An output stream which will write blobs to the named output stream\n     *     of the given object.\n     */\n    this.createObjectOutputStream = function createObjectOutputStream(index, mimetype, name) {\n\n        // Allocate and ssociate stream with object metadata\n        var stream = guac_client.createOutputStream();\n        tunnel.sendMessage(\"put\", index, stream.index, mimetype, name);\n        return stream;\n\n    };\n\n    /**\n     * Requests read access to the input stream having the given name. If\n     * successful, a new input stream will be created.\n     *\n     * @param {!number} index\n     *     The index of the object from which the input stream is being\n     *     requested.\n     *\n     * @param {!string} name\n     *     The name of the input stream to request.\n     */\n    this.requestObjectInputStream = function requestObjectInputStream(index, name) {\n\n        // Do not send requests if not connected\n        if (!isConnected())\n            return;\n\n        tunnel.sendMessage(\"get\", index, name);\n    };\n\n    /**\n     * Acknowledge receipt of a blob on the stream with the given index.\n     * \n     * @param {!number} index\n     *     The index of the stream associated with the received blob.\n     *\n     * @param {!string} message\n     *     A human-readable message describing the error or status.\n     *\n     * @param {!number} code\n     *     The error code, if any, or 0 for success.\n     */\n    this.sendAck = function(index, message, code) {\n\n        // Do not send requests if not connected\n        if (!isConnected())\n            return;\n\n        tunnel.sendMessage(\"ack\", index, message, code);\n    };\n\n    /**\n     * Given the index of a file, writes a blob of data to that file.\n     * \n     * @param {!number} index\n     *     The index of the file to write to.\n     *\n     * @param {!string} data\n     *     Base64-encoded data to write to the file.\n     */\n    this.sendBlob = function(index, data) {\n\n        // Do not send requests if not connected\n        if (!isConnected())\n            return;\n\n        tunnel.sendMessage(\"blob\", index, data);\n    };\n\n    /**\n     * Marks a currently-open stream as complete. The other end of the\n     * Guacamole connection will be notified via an \"end\" instruction that the\n     * stream is closed, and the index will be made available for reuse in\n     * future streams.\n     * \n     * @param {!number} index\n     *     The index of the stream to end.\n     */\n    this.endStream = function(index) {\n\n        // Do not send requests if not connected\n        if (!isConnected())\n            return;\n\n        // Explicitly close stream by sending \"end\" instruction\n        tunnel.sendMessage(\"end\", index);\n\n        // Free associated index and stream if they exist\n        if (output_streams[index]) {\n            stream_indices.free(index);\n            delete output_streams[index];\n        }\n\n    };\n\n    /**\n     * Fired whenever the state of this Guacamole.Client changes.\n     * \n     * @event\n     * @param {!number} state\n     *     The new state of the client.\n     */\n    this.onstatechange = null;\n\n    /**\n     * Fired when the remote client sends a name update.\n     * \n     * @event\n     * @param {!string} name\n     *     The new name of this client.\n     */\n    this.onname = null;\n\n    /**\n     * Fired when an error is reported by the remote client, and the connection\n     * is being closed.\n     * \n     * @event\n     * @param {!Guacamole.Status} status\n     *     A status object which describes the error.\n     */\n    this.onerror = null;\n\n    /**\n     * Fired when a audio stream is created. The stream provided to this event\n     * handler will contain its own event handlers for received data.\n     *\n     * @event\n     * @param {!Guacamole.InputStream} stream\n     *     The stream that will receive audio data from the server.\n     *\n     * @param {!string} mimetype\n     *     The mimetype of the audio data which will be received.\n     *\n     * @return {Guacamole.AudioPlayer}\n     *     An object which implements the Guacamole.AudioPlayer interface and\n     *     has been initialied to play the data in the provided stream, or null\n     *     if the built-in audio players of the Guacamole client should be\n     *     used.\n     */\n    this.onaudio = null;\n\n    /**\n     * Fired when a video stream is created. The stream provided to this event\n     * handler will contain its own event handlers for received data.\n     *\n     * @event\n     * @param {!Guacamole.InputStream} stream\n     *     The stream that will receive video data from the server.\n     *\n     * @param {!Guacamole.Display.VisibleLayer} layer\n     *     The destination layer on which the received video data should be\n     *     played. It is the responsibility of the Guacamole.VideoPlayer\n     *     implementation to play the received data within this layer.\n     *\n     * @param {!string} mimetype\n     *     The mimetype of the video data which will be received.\n     *\n     * @return {Guacamole.VideoPlayer}\n     *     An object which implements the Guacamole.VideoPlayer interface and\n     *     has been initialied to play the data in the provided stream, or null\n     *     if the built-in video players of the Guacamole client should be\n     *     used.\n     */\n    this.onvideo = null;\n\n    /**\n     * Fired when the remote client is explicitly declaring the level of\n     * multi-touch support provided by a particular display layer.\n     *\n     * @event\n     * @param {!Guacamole.Display.VisibleLayer} layer\n     *     The layer whose multi-touch support level is being declared.\n     *\n     * @param {!number} touches\n     *     The maximum number of simultaneous touches supported by the given\n     *     layer, where 0 indicates that touch events are not supported at all.\n     */\n    this.onmultitouch = null;\n\n    /**\n     * Fired when the current value of a connection parameter is being exposed\n     * by the server.\n     *\n     * @event\n     * @param {!Guacamole.InputStream} stream\n     *     The stream that will receive connection parameter data from the\n     *     server.\n     *\n     * @param {!string} mimetype\n     *     The mimetype of the data which will be received.\n     *\n     * @param {!string} name\n     *     The name of the connection parameter whose value is being exposed.\n     */\n    this.onargv = null;\n\n    /**\n     * Fired when the clipboard of the remote client is changing.\n     * \n     * @event\n     * @param {!Guacamole.InputStream} stream\n     *     The stream that will receive clipboard data from the server.\n     *\n     * @param {!string} mimetype\n     *     The mimetype of the data which will be received.\n     */\n    this.onclipboard = null;\n\n    /**\n     * Fired when a file stream is created. The stream provided to this event\n     * handler will contain its own event handlers for received data.\n     * \n     * @event\n     * @param {!Guacamole.InputStream} stream\n     *     The stream that will receive data from the server.\n     *\n     * @param {!string} mimetype\n     *     The mimetype of the file received.\n     *\n     * @param {!string} filename\n     *     The name of the file received.\n     */\n    this.onfile = null;\n\n    /**\n     * Fired when a filesystem object is created. The object provided to this\n     * event handler will contain its own event handlers and functions for\n     * requesting and handling data.\n     *\n     * @event\n     * @param {!Guacamole.Object} object\n     *     The created filesystem object.\n     *\n     * @param {!string} name\n     *     The name of the filesystem.\n     */\n    this.onfilesystem = null;\n\n    /**\n     * Fired when a pipe stream is created. The stream provided to this event\n     * handler will contain its own event handlers for received data;\n     * \n     * @event\n     * @param {!Guacamole.InputStream} stream\n     *     The stream that will receive data from the server.\n     *\n     * @param {!string} mimetype\n     *     The mimetype of the data which will be received.\n     *\n     * @param {!string} name\n     *     The name of the pipe.\n     */\n    this.onpipe = null;\n    \n    /**\n     * Fired when a \"required\" instruction is received. A required instruction\n     * indicates that additional parameters are required for the connection to\n     * continue, such as user credentials.\n     * \n     * @event\n     * @param {!string[]} parameters\n     *      The names of the connection parameters that are required to be\n     *      provided for the connection to continue.\n     */\n    this.onrequired = null;\n\n    /**\n     * Fired whenever a sync instruction is received from the server, indicating\n     * that the server is finished processing any input from the client and\n     * has sent any results.\n     * \n     * @event\n     * @param {!number} timestamp\n     *     The timestamp associated with the sync instruction.\n     */\n    this.onsync = null;\n\n    /**\n     * Returns the layer with the given index, creating it if necessary.\n     * Positive indices refer to visible layers, an index of zero refers to\n     * the default layer, and negative indices refer to buffers.\n     *\n     * @private\n     * @param {!number} index\n     *     The index of the layer to retrieve.\n     *\n     * @return {!(Guacamole.Display.VisibleLayer|Guacamole.Layer)}\n     *     The layer having the given index.\n     */\n    var getLayer = function getLayer(index) {\n\n        // Get layer, create if necessary\n        var layer = layers[index];\n        if (!layer) {\n\n            // Create layer based on index\n            if (index === 0)\n                layer = display.getDefaultLayer();\n            else if (index > 0)\n                layer = display.createLayer();\n            else\n                layer = display.createBuffer();\n                \n            // Add new layer\n            layers[index] = layer;\n\n        }\n\n        return layer;\n\n    };\n\n    /**\n     * Returns the index passed to getLayer() when the given layer was created.\n     * Positive indices refer to visible layers, an index of zero refers to the\n     * default layer, and negative indices refer to buffers.\n     *\n     * @param {!(Guacamole.Display.VisibleLayer|Guacamole.Layer)} layer\n     *     The layer whose index should be determined.\n     *\n     * @returns {number}\n     *     The index of the given layer, or null if no such layer is associated\n     *     with this client.\n     */\n    var getLayerIndex = function getLayerIndex(layer) {\n\n        // Avoid searching if there clearly is no such layer\n        if (!layer)\n            return null;\n\n        // Search through each layer, returning the index of the given layer\n        // once found\n        for (var key in layers) {\n            if (layer === layers[key])\n                return parseInt(key);\n        }\n\n        // Otherwise, no such index\n        return null;\n\n    };\n\n    function getParser(index) {\n\n        var parser = parsers[index];\n\n        // If parser not yet created, create it, and tie to the\n        // oninstruction handler of the tunnel.\n        if (parser == null) {\n            parser = parsers[index] = new Guacamole.Parser();\n            parser.oninstruction = tunnel.oninstruction;\n        }\n\n        return parser;\n\n    }\n\n    /**\n     * Handlers for all defined layer properties.\n     *\n     * @private\n     * @type {!Object.<string, function>}\n     */\n    var layerPropertyHandlers = {\n\n        \"miter-limit\": function(layer, value) {\n            display.setMiterLimit(layer, parseFloat(value));\n        },\n\n        \"multi-touch\" : function layerSupportsMultiTouch(layer, value) {\n\n            // Process \"multi-touch\" property only for true visible layers (not off-screen buffers)\n            if (guac_client.onmultitouch && layer instanceof Guacamole.Display.VisibleLayer)\n                guac_client.onmultitouch(layer, parseInt(value));\n\n        }\n\n    };\n    \n    /**\n     * Handlers for all instruction opcodes receivable by a Guacamole protocol\n     * client.\n     *\n     * @private\n     * @type {!Object.<string, function>}\n     */\n    var instructionHandlers = {\n\n        \"ack\": function(parameters) {\n\n            var stream_index = parseInt(parameters[0]);\n            var reason = parameters[1];\n            var code = parseInt(parameters[2]);\n\n            // Get stream\n            var stream = output_streams[stream_index];\n            if (stream) {\n\n                // Signal ack if handler defined\n                if (stream.onack)\n                    stream.onack(new Guacamole.Status(code, reason));\n\n                // If code is an error, invalidate stream if not already\n                // invalidated by onack handler\n                if (code >= 0x0100 && output_streams[stream_index] === stream) {\n                    stream_indices.free(stream_index);\n                    delete output_streams[stream_index];\n                }\n\n            }\n\n        },\n\n        \"arc\": function(parameters) {\n\n            var layer = getLayer(parseInt(parameters[0]));\n            var x = parseInt(parameters[1]);\n            var y = parseInt(parameters[2]);\n            var radius = parseInt(parameters[3]);\n            var startAngle = parseFloat(parameters[4]);\n            var endAngle = parseFloat(parameters[5]);\n            var negative = parseInt(parameters[6]);\n\n            display.arc(layer, x, y, radius, startAngle, endAngle, negative != 0);\n\n        },\n\n        \"argv\": function(parameters) {\n\n            var stream_index = parseInt(parameters[0]);\n            var mimetype = parameters[1];\n            var name = parameters[2];\n\n            // Create stream\n            if (guac_client.onargv) {\n                var stream = streams[stream_index] = new Guacamole.InputStream(guac_client, stream_index);\n                guac_client.onargv(stream, mimetype, name);\n            }\n\n            // Otherwise, unsupported\n            else\n                guac_client.sendAck(stream_index, \"Receiving argument values unsupported\", 0x0100);\n\n        },\n\n        \"audio\": function(parameters) {\n\n            var stream_index = parseInt(parameters[0]);\n            var mimetype = parameters[1];\n\n            // Create stream \n            var stream = streams[stream_index] =\n                    new Guacamole.InputStream(guac_client, stream_index);\n\n            // Get player instance via callback\n            var audioPlayer = null;\n            if (guac_client.onaudio)\n                audioPlayer = guac_client.onaudio(stream, mimetype);\n\n            // If unsuccessful, try to use a default implementation\n            if (!audioPlayer)\n                audioPlayer = Guacamole.AudioPlayer.getInstance(stream, mimetype);\n\n            // If we have successfully retrieved an audio player, send success response\n            if (audioPlayer) {\n                audioPlayers[stream_index] = audioPlayer;\n                guac_client.sendAck(stream_index, \"OK\", 0x0000);\n            }\n\n            // Otherwise, mimetype must be unsupported\n            else\n                guac_client.sendAck(stream_index, \"BAD TYPE\", 0x030F);\n\n        },\n\n        \"blob\": function(parameters) {\n\n            // Get stream \n            var stream_index = parseInt(parameters[0]);\n            var data = parameters[1];\n            var stream = streams[stream_index];\n\n            // Write data\n            if (stream && stream.onblob)\n                stream.onblob(data);\n\n        },\n\n        \"body\" : function handleBody(parameters) {\n\n            // Get object\n            var objectIndex = parseInt(parameters[0]);\n            var object = objects[objectIndex];\n\n            var streamIndex = parseInt(parameters[1]);\n            var mimetype = parameters[2];\n            var name = parameters[3];\n\n            // Create stream if handler defined\n            if (object && object.onbody) {\n                var stream = streams[streamIndex] = new Guacamole.InputStream(guac_client, streamIndex);\n                object.onbody(stream, mimetype, name);\n            }\n\n            // Otherwise, unsupported\n            else\n                guac_client.sendAck(streamIndex, \"Receipt of body unsupported\", 0x0100);\n\n        },\n\n        \"cfill\": function(parameters) {\n\n            var channelMask = parseInt(parameters[0]);\n            var layer = getLayer(parseInt(parameters[1]));\n            var r = parseInt(parameters[2]);\n            var g = parseInt(parameters[3]);\n            var b = parseInt(parameters[4]);\n            var a = parseInt(parameters[5]);\n\n            display.setChannelMask(layer, channelMask);\n            display.fillColor(layer, r, g, b, a);\n\n        },\n\n        \"clip\": function(parameters) {\n\n            var layer = getLayer(parseInt(parameters[0]));\n\n            display.clip(layer);\n\n        },\n\n        \"clipboard\": function(parameters) {\n\n            var stream_index = parseInt(parameters[0]);\n            var mimetype = parameters[1];\n\n            // Create stream \n            if (guac_client.onclipboard) {\n                var stream = streams[stream_index] = new Guacamole.InputStream(guac_client, stream_index);\n                guac_client.onclipboard(stream, mimetype);\n            }\n\n            // Otherwise, unsupported\n            else\n                guac_client.sendAck(stream_index, \"Clipboard unsupported\", 0x0100);\n\n        },\n\n        \"close\": function(parameters) {\n\n            var layer = getLayer(parseInt(parameters[0]));\n\n            display.close(layer);\n\n        },\n\n        \"copy\": function(parameters) {\n\n            var srcL = getLayer(parseInt(parameters[0]));\n            var srcX = parseInt(parameters[1]);\n            var srcY = parseInt(parameters[2]);\n            var srcWidth = parseInt(parameters[3]);\n            var srcHeight = parseInt(parameters[4]);\n            var channelMask = parseInt(parameters[5]);\n            var dstL = getLayer(parseInt(parameters[6]));\n            var dstX = parseInt(parameters[7]);\n            var dstY = parseInt(parameters[8]);\n\n            display.setChannelMask(dstL, channelMask);\n            display.copy(srcL, srcX, srcY, srcWidth, srcHeight, \n                         dstL, dstX, dstY);\n\n        },\n\n        \"cstroke\": function(parameters) {\n\n            var channelMask = parseInt(parameters[0]);\n            var layer = getLayer(parseInt(parameters[1]));\n            var cap = lineCap[parseInt(parameters[2])];\n            var join = lineJoin[parseInt(parameters[3])];\n            var thickness = parseInt(parameters[4]);\n            var r = parseInt(parameters[5]);\n            var g = parseInt(parameters[6]);\n            var b = parseInt(parameters[7]);\n            var a = parseInt(parameters[8]);\n\n            display.setChannelMask(layer, channelMask);\n            display.strokeColor(layer, cap, join, thickness, r, g, b, a);\n\n        },\n\n        \"cursor\": function(parameters) {\n\n            var cursorHotspotX = parseInt(parameters[0]);\n            var cursorHotspotY = parseInt(parameters[1]);\n            var srcL = getLayer(parseInt(parameters[2]));\n            var srcX = parseInt(parameters[3]);\n            var srcY = parseInt(parameters[4]);\n            var srcWidth = parseInt(parameters[5]);\n            var srcHeight = parseInt(parameters[6]);\n\n            display.setCursor(cursorHotspotX, cursorHotspotY,\n                              srcL, srcX, srcY, srcWidth, srcHeight);\n\n        },\n\n        \"curve\": function(parameters) {\n\n            var layer = getLayer(parseInt(parameters[0]));\n            var cp1x = parseInt(parameters[1]);\n            var cp1y = parseInt(parameters[2]);\n            var cp2x = parseInt(parameters[3]);\n            var cp2y = parseInt(parameters[4]);\n            var x = parseInt(parameters[5]);\n            var y = parseInt(parameters[6]);\n\n            display.curveTo(layer, cp1x, cp1y, cp2x, cp2y, x, y);\n\n        },\n\n        \"disconnect\" : function handleDisconnect(parameters) {\n\n            // Explicitly tear down connection\n            guac_client.disconnect();\n\n        },\n\n        \"dispose\": function(parameters) {\n            \n            var layer_index = parseInt(parameters[0]);\n\n            // If visible layer, remove from parent\n            if (layer_index > 0) {\n\n                // Remove from parent\n                var layer = getLayer(layer_index);\n                display.dispose(layer);\n\n                // Delete reference\n                delete layers[layer_index];\n\n            }\n\n            // If buffer, just delete reference\n            else if (layer_index < 0)\n                delete layers[layer_index];\n\n            // Attempting to dispose the root layer currently has no effect.\n\n        },\n\n        \"distort\": function(parameters) {\n\n            var layer_index = parseInt(parameters[0]);\n            var a = parseFloat(parameters[1]);\n            var b = parseFloat(parameters[2]);\n            var c = parseFloat(parameters[3]);\n            var d = parseFloat(parameters[4]);\n            var e = parseFloat(parameters[5]);\n            var f = parseFloat(parameters[6]);\n\n            // Only valid for visible layers (not buffers)\n            if (layer_index >= 0) {\n                var layer = getLayer(layer_index);\n                display.distort(layer, a, b, c, d, e, f);\n            }\n\n        },\n \n        \"error\": function(parameters) {\n\n            var reason = parameters[0];\n            var code = parseInt(parameters[1]);\n\n            // Call handler if defined\n            if (guac_client.onerror)\n                guac_client.onerror(new Guacamole.Status(code, reason));\n\n            guac_client.disconnect();\n\n        },\n\n        \"end\": function(parameters) {\n\n            var stream_index = parseInt(parameters[0]);\n\n            // Get stream\n            var stream = streams[stream_index];\n            if (stream) {\n\n                // Signal end of stream if handler defined\n                if (stream.onend)\n                    stream.onend();\n\n                // Invalidate stream\n                delete streams[stream_index];\n\n            }\n\n        },\n\n        \"file\": function(parameters) {\n\n            var stream_index = parseInt(parameters[0]);\n            var mimetype = parameters[1];\n            var filename = parameters[2];\n\n            // Create stream \n            if (guac_client.onfile) {\n                var stream = streams[stream_index] = new Guacamole.InputStream(guac_client, stream_index);\n                guac_client.onfile(stream, mimetype, filename);\n            }\n\n            // Otherwise, unsupported\n            else\n                guac_client.sendAck(stream_index, \"File transfer unsupported\", 0x0100);\n\n        },\n\n        \"filesystem\" : function handleFilesystem(parameters) {\n\n            var objectIndex = parseInt(parameters[0]);\n            var name = parameters[1];\n\n            // Create object, if supported\n            if (guac_client.onfilesystem) {\n                var object = objects[objectIndex] = new Guacamole.Object(guac_client, objectIndex);\n                guac_client.onfilesystem(object, name);\n            }\n\n            // If unsupported, simply ignore the availability of the filesystem\n\n        },\n\n        \"identity\": function(parameters) {\n\n            var layer = getLayer(parseInt(parameters[0]));\n\n            display.setTransform(layer, 1, 0, 0, 1, 0, 0);\n\n        },\n\n        \"img\": function(parameters) {\n\n            var stream_index = parseInt(parameters[0]);\n            var channelMask = parseInt(parameters[1]);\n            var layer = getLayer(parseInt(parameters[2]));\n            var mimetype = parameters[3];\n            var x = parseInt(parameters[4]);\n            var y = parseInt(parameters[5]);\n\n            // Create stream\n            var stream = streams[stream_index] = new Guacamole.InputStream(guac_client, stream_index);\n\n            // Draw received contents once decoded\n            display.setChannelMask(layer, channelMask);\n            display.drawStream(layer, x, y, stream, mimetype);\n\n        },\n\n        \"jpeg\": function(parameters) {\n\n            var channelMask = parseInt(parameters[0]);\n            var layer = getLayer(parseInt(parameters[1]));\n            var x = parseInt(parameters[2]);\n            var y = parseInt(parameters[3]);\n            var data = parameters[4];\n\n            display.setChannelMask(layer, channelMask);\n            display.draw(layer, x, y, \"data:image/jpeg;base64,\" + data);\n\n        },\n\n        \"lfill\": function(parameters) {\n\n            var channelMask = parseInt(parameters[0]);\n            var layer = getLayer(parseInt(parameters[1]));\n            var srcLayer = getLayer(parseInt(parameters[2]));\n\n            display.setChannelMask(layer, channelMask);\n            display.fillLayer(layer, srcLayer);\n\n        },\n\n        \"line\": function(parameters) {\n\n            var layer = getLayer(parseInt(parameters[0]));\n            var x = parseInt(parameters[1]);\n            var y = parseInt(parameters[2]);\n\n            display.lineTo(layer, x, y);\n\n        },\n\n        \"lstroke\": function(parameters) {\n\n            var channelMask = parseInt(parameters[0]);\n            var layer = getLayer(parseInt(parameters[1]));\n            var srcLayer = getLayer(parseInt(parameters[2]));\n\n            display.setChannelMask(layer, channelMask);\n            display.strokeLayer(layer, srcLayer);\n\n        },\n\n        \"mouse\" : function handleMouse(parameters) {\n\n            var x = parseInt(parameters[0]);\n            var y = parseInt(parameters[1]);\n\n            // Display and move software cursor to received coordinates\n            display.showCursor(true);\n            display.moveCursor(x, y);\n\n        },\n\n        \"move\": function(parameters) {\n            \n            var layer_index = parseInt(parameters[0]);\n            var parent_index = parseInt(parameters[1]);\n            var x = parseInt(parameters[2]);\n            var y = parseInt(parameters[3]);\n            var z = parseInt(parameters[4]);\n\n            // Only valid for non-default layers\n            if (layer_index > 0 && parent_index >= 0) {\n                var layer = getLayer(layer_index);\n                var parent = getLayer(parent_index);\n                display.move(layer, parent, x, y, z);\n            }\n\n        },\n\n        \"name\": function(parameters) {\n            if (guac_client.onname) guac_client.onname(parameters[0]);\n        },\n\n        \"nest\": function(parameters) {\n            var parser = getParser(parseInt(parameters[0]));\n            parser.receive(parameters[1]);\n        },\n\n        \"pipe\": function(parameters) {\n\n            var stream_index = parseInt(parameters[0]);\n            var mimetype = parameters[1];\n            var name = parameters[2];\n\n            // Create stream \n            if (guac_client.onpipe) {\n                var stream = streams[stream_index] = new Guacamole.InputStream(guac_client, stream_index);\n                guac_client.onpipe(stream, mimetype, name);\n            }\n\n            // Otherwise, unsupported\n            else\n                guac_client.sendAck(stream_index, \"Named pipes unsupported\", 0x0100);\n\n        },\n\n        \"png\": function(parameters) {\n\n            var channelMask = parseInt(parameters[0]);\n            var layer = getLayer(parseInt(parameters[1]));\n            var x = parseInt(parameters[2]);\n            var y = parseInt(parameters[3]);\n            var data = parameters[4];\n\n            display.setChannelMask(layer, channelMask);\n            display.draw(layer, x, y, \"data:image/png;base64,\" + data);\n\n        },\n\n        \"pop\": function(parameters) {\n\n            var layer = getLayer(parseInt(parameters[0]));\n\n            display.pop(layer);\n\n        },\n\n        \"push\": function(parameters) {\n\n            var layer = getLayer(parseInt(parameters[0]));\n\n            display.push(layer);\n\n        },\n \n        \"rect\": function(parameters) {\n\n            var layer = getLayer(parseInt(parameters[0]));\n            var x = parseInt(parameters[1]);\n            var y = parseInt(parameters[2]);\n            var w = parseInt(parameters[3]);\n            var h = parseInt(parameters[4]);\n\n            display.rect(layer, x, y, w, h);\n\n        },\n                \n        \"required\": function required(parameters) {\n            if (guac_client.onrequired) guac_client.onrequired(parameters);\n        },\n        \n        \"reset\": function(parameters) {\n\n            var layer = getLayer(parseInt(parameters[0]));\n\n            display.reset(layer);\n\n        },\n        \n        \"set\": function(parameters) {\n\n            var layer = getLayer(parseInt(parameters[0]));\n            var name = parameters[1];\n            var value = parameters[2];\n\n            // Call property handler if defined\n            var handler = layerPropertyHandlers[name];\n            if (handler)\n                handler(layer, value);\n\n        },\n\n        \"shade\": function(parameters) {\n            \n            var layer_index = parseInt(parameters[0]);\n            var a = parseInt(parameters[1]);\n\n            // Only valid for visible layers (not buffers)\n            if (layer_index >= 0) {\n                var layer = getLayer(layer_index);\n                display.shade(layer, a);\n            }\n\n        },\n\n        \"size\": function(parameters) {\n\n            var layer_index = parseInt(parameters[0]);\n            var layer = getLayer(layer_index);\n            var width = parseInt(parameters[1]);\n            var height = parseInt(parameters[2]);\n\n            display.resize(layer, width, height);\n\n        },\n        \n        \"start\": function(parameters) {\n\n            var layer = getLayer(parseInt(parameters[0]));\n            var x = parseInt(parameters[1]);\n            var y = parseInt(parameters[2]);\n\n            display.moveTo(layer, x, y);\n\n        },\n\n        \"sync\": function(parameters) {\n\n            var timestamp = parseInt(parameters[0]);\n\n            // Flush display, send sync when done\n            display.flush(function displaySyncComplete() {\n\n                // Synchronize all audio players\n                for (var index in audioPlayers) {\n                    var audioPlayer = audioPlayers[index];\n                    if (audioPlayer)\n                        audioPlayer.sync();\n                }\n\n                // Send sync response to server\n                if (timestamp !== currentTimestamp) {\n                    tunnel.sendMessage(\"sync\", timestamp);\n                    currentTimestamp = timestamp;\n                }\n\n            });\n\n            // If received first update, no longer waiting.\n            if (currentState === STATE_WAITING)\n                setState(STATE_CONNECTED);\n\n            // Call sync handler if defined\n            if (guac_client.onsync)\n                guac_client.onsync(timestamp);\n\n        },\n\n        \"transfer\": function(parameters) {\n\n            var srcL = getLayer(parseInt(parameters[0]));\n            var srcX = parseInt(parameters[1]);\n            var srcY = parseInt(parameters[2]);\n            var srcWidth = parseInt(parameters[3]);\n            var srcHeight = parseInt(parameters[4]);\n            var function_index = parseInt(parameters[5]);\n            var dstL = getLayer(parseInt(parameters[6]));\n            var dstX = parseInt(parameters[7]);\n            var dstY = parseInt(parameters[8]);\n\n            /* SRC */\n            if (function_index === 0x3)\n                display.put(srcL, srcX, srcY, srcWidth, srcHeight, \n                    dstL, dstX, dstY);\n\n            /* Anything else that isn't a NO-OP */\n            else if (function_index !== 0x5)\n                display.transfer(srcL, srcX, srcY, srcWidth, srcHeight, \n                    dstL, dstX, dstY, Guacamole.Client.DefaultTransferFunction[function_index]);\n\n        },\n\n        \"transform\": function(parameters) {\n\n            var layer = getLayer(parseInt(parameters[0]));\n            var a = parseFloat(parameters[1]);\n            var b = parseFloat(parameters[2]);\n            var c = parseFloat(parameters[3]);\n            var d = parseFloat(parameters[4]);\n            var e = parseFloat(parameters[5]);\n            var f = parseFloat(parameters[6]);\n\n            display.transform(layer, a, b, c, d, e, f);\n\n        },\n\n        \"undefine\" : function handleUndefine(parameters) {\n\n            // Get object\n            var objectIndex = parseInt(parameters[0]);\n            var object = objects[objectIndex];\n\n            // Signal end of object definition\n            if (object && object.onundefine)\n                object.onundefine();\n\n        },\n\n        \"video\": function(parameters) {\n\n            var stream_index = parseInt(parameters[0]);\n            var layer = getLayer(parseInt(parameters[1]));\n            var mimetype = parameters[2];\n\n            // Create stream\n            var stream = streams[stream_index] =\n                    new Guacamole.InputStream(guac_client, stream_index);\n\n            // Get player instance via callback\n            var videoPlayer = null;\n            if (guac_client.onvideo)\n                videoPlayer = guac_client.onvideo(stream, layer, mimetype);\n\n            // If unsuccessful, try to use a default implementation\n            if (!videoPlayer)\n                videoPlayer = Guacamole.VideoPlayer.getInstance(stream, layer, mimetype);\n\n            // If we have successfully retrieved an video player, send success response\n            if (videoPlayer) {\n                videoPlayers[stream_index] = videoPlayer;\n                guac_client.sendAck(stream_index, \"OK\", 0x0000);\n            }\n\n            // Otherwise, mimetype must be unsupported\n            else\n                guac_client.sendAck(stream_index, \"BAD TYPE\", 0x030F);\n\n        }\n\n    };\n\n    tunnel.oninstruction = function(opcode, parameters) {\n\n        var handler = instructionHandlers[opcode];\n        if (handler)\n            handler(parameters);\n\n    };\n\n    /**\n     * Sends a disconnect instruction to the server and closes the tunnel.\n     */\n    this.disconnect = function() {\n\n        // Only attempt disconnection not disconnected.\n        if (currentState != STATE_DISCONNECTED\n                && currentState != STATE_DISCONNECTING) {\n\n            setState(STATE_DISCONNECTING);\n\n            // Stop ping\n            if (pingInterval)\n                window.clearInterval(pingInterval);\n\n            // Send disconnect message and disconnect\n            tunnel.sendMessage(\"disconnect\");\n            tunnel.disconnect();\n            setState(STATE_DISCONNECTED);\n\n        }\n\n    };\n    \n    /**\n     * Connects the underlying tunnel of this Guacamole.Client, passing the\n     * given arbitrary data to the tunnel during the connection process.\n     *\n     * @param {string} data\n     *     Arbitrary connection data to be sent to the underlying tunnel during\n     *     the connection process.\n     *\n     * @throws {!Guacamole.Status}\n     *     If an error occurs during connection.\n     */\n    this.connect = function(data) {\n\n        setState(STATE_CONNECTING);\n\n        try {\n            tunnel.connect(data);\n        }\n        catch (status) {\n            setState(STATE_IDLE);\n            throw status;\n        }\n\n        // Ping every 5 seconds (ensure connection alive)\n        pingInterval = window.setInterval(function() {\n            tunnel.sendMessage(\"nop\");\n        }, 5000);\n\n        setState(STATE_WAITING);\n    };\n\n};\n\n/**\n * Map of all Guacamole binary raster operations to transfer functions.\n *\n * @private\n * @type {!Object.<number, function>}\n */\nGuacamole.Client.DefaultTransferFunction = {\n\n    /* BLACK */\n    0x0: function (src, dst) {\n        dst.red = dst.green = dst.blue = 0x00;\n    },\n\n    /* WHITE */\n    0xF: function (src, dst) {\n        dst.red = dst.green = dst.blue = 0xFF;\n    },\n\n    /* SRC */\n    0x3: function (src, dst) {\n        dst.red   = src.red;\n        dst.green = src.green;\n        dst.blue  = src.blue;\n        dst.alpha = src.alpha;\n    },\n\n    /* DEST (no-op) */\n    0x5: function (src, dst) {\n        // Do nothing\n    },\n\n    /* Invert SRC */\n    0xC: function (src, dst) {\n        dst.red   = 0xFF & ~src.red;\n        dst.green = 0xFF & ~src.green;\n        dst.blue  = 0xFF & ~src.blue;\n        dst.alpha =  src.alpha;\n    },\n    \n    /* Invert DEST */\n    0xA: function (src, dst) {\n        dst.red   = 0xFF & ~dst.red;\n        dst.green = 0xFF & ~dst.green;\n        dst.blue  = 0xFF & ~dst.blue;\n    },\n\n    /* AND */\n    0x1: function (src, dst) {\n        dst.red   =  ( src.red   &  dst.red);\n        dst.green =  ( src.green &  dst.green);\n        dst.blue  =  ( src.blue  &  dst.blue);\n    },\n\n    /* NAND */\n    0xE: function (src, dst) {\n        dst.red   = 0xFF & ~( src.red   &  dst.red);\n        dst.green = 0xFF & ~( src.green &  dst.green);\n        dst.blue  = 0xFF & ~( src.blue  &  dst.blue);\n    },\n\n    /* OR */\n    0x7: function (src, dst) {\n        dst.red   =  ( src.red   |  dst.red);\n        dst.green =  ( src.green |  dst.green);\n        dst.blue  =  ( src.blue  |  dst.blue);\n    },\n\n    /* NOR */\n    0x8: function (src, dst) {\n        dst.red   = 0xFF & ~( src.red   |  dst.red);\n        dst.green = 0xFF & ~( src.green |  dst.green);\n        dst.blue  = 0xFF & ~( src.blue  |  dst.blue);\n    },\n\n    /* XOR */\n    0x6: function (src, dst) {\n        dst.red   =  ( src.red   ^  dst.red);\n        dst.green =  ( src.green ^  dst.green);\n        dst.blue  =  ( src.blue  ^  dst.blue);\n    },\n\n    /* XNOR */\n    0x9: function (src, dst) {\n        dst.red   = 0xFF & ~( src.red   ^  dst.red);\n        dst.green = 0xFF & ~( src.green ^  dst.green);\n        dst.blue  = 0xFF & ~( src.blue  ^  dst.blue);\n    },\n\n    /* AND inverted source */\n    0x4: function (src, dst) {\n        dst.red   =  0xFF & (~src.red   &  dst.red);\n        dst.green =  0xFF & (~src.green &  dst.green);\n        dst.blue  =  0xFF & (~src.blue  &  dst.blue);\n    },\n\n    /* OR inverted source */\n    0xD: function (src, dst) {\n        dst.red   =  0xFF & (~src.red   |  dst.red);\n        dst.green =  0xFF & (~src.green |  dst.green);\n        dst.blue  =  0xFF & (~src.blue  |  dst.blue);\n    },\n\n    /* AND inverted destination */\n    0x2: function (src, dst) {\n        dst.red   =  0xFF & ( src.red   & ~dst.red);\n        dst.green =  0xFF & ( src.green & ~dst.green);\n        dst.blue  =  0xFF & ( src.blue  & ~dst.blue);\n    },\n\n    /* OR inverted destination */\n    0xB: function (src, dst) {\n        dst.red   =  0xFF & ( src.red   | ~dst.red);\n        dst.green =  0xFF & ( src.green | ~dst.green);\n        dst.blue  =  0xFF & ( src.blue  | ~dst.blue);\n    }\n\n};\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar Guacamole = Guacamole || {};\n\n/**\n * A reader which automatically handles the given input stream, returning\n * received blobs as a single data URI built over the course of the stream.\n * Note that this object will overwrite any installed event handlers on the\n * given Guacamole.InputStream.\n * \n * @constructor\n * @param {!Guacamole.InputStream} stream\n *     The stream that data will be read from.\n *\n * @param {!string} mimetype\n *     The mimetype of the data being received.\n */\nGuacamole.DataURIReader = function(stream, mimetype) {\n\n    /**\n     * Reference to this Guacamole.DataURIReader.\n     *\n     * @private\n     * @type {!Guacamole.DataURIReader}\n     */\n    var guac_reader = this;\n\n    /**\n     * Current data URI.\n     *\n     * @private\n     * @type {!string}\n     */\n    var uri = 'data:' + mimetype + ';base64,';\n\n    // Receive blobs as array buffers\n    stream.onblob = function dataURIReaderBlob(data) {\n\n        // Currently assuming data will ALWAYS be safe to simply append. This\n        // will not be true if the received base64 data encodes a number of\n        // bytes that isn't a multiple of three (as base64 expands in a ratio\n        // of exactly 3:4).\n        uri += data;\n\n    };\n\n    // Simply call onend when end received\n    stream.onend = function dataURIReaderEnd() {\n        if (guac_reader.onend)\n            guac_reader.onend();\n    };\n\n    /**\n     * Returns the data URI of all data received through the underlying stream\n     * thus far.\n     *\n     * @returns {!string}\n     *     The data URI of all data received through the underlying stream thus\n     *     far.\n     */\n    this.getURI = function getURI() {\n        return uri;\n    };\n\n    /**\n     * Fired once this stream is finished and no further data will be written.\n     *\n     * @event\n     */\n    this.onend = null;\n\n};\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar Guacamole = Guacamole || {};\n\n/**\n * The Guacamole display. The display does not deal with the Guacamole\n * protocol, and instead implements a set of graphical operations which\n * embody the set of operations present in the protocol. The order operations\n * are executed is guaranteed to be in the same order as their corresponding\n * functions are called.\n * \n * @constructor\n */\nGuacamole.Display = function() {\n\n    /**\n     * Reference to this Guacamole.Display.\n     * @private\n     */\n    var guac_display = this;\n\n    var displayWidth = 0;\n    var displayHeight = 0;\n    var displayScale = 1;\n\n    // Create display\n    var display = document.createElement(\"div\");\n    display.style.position = \"relative\";\n    display.style.width = displayWidth + \"px\";\n    display.style.height = displayHeight + \"px\";\n\n    // Ensure transformations on display originate at 0,0\n    display.style.transformOrigin =\n    display.style.webkitTransformOrigin =\n    display.style.MozTransformOrigin =\n    display.style.OTransformOrigin =\n    display.style.msTransformOrigin =\n        \"0 0\";\n\n    // Create default layer\n    var default_layer = new Guacamole.Display.VisibleLayer(displayWidth, displayHeight);\n\n    // Create cursor layer\n    var cursor = new Guacamole.Display.VisibleLayer(0, 0);\n    cursor.setChannelMask(Guacamole.Layer.SRC);\n\n    // Add default layer and cursor to display\n    display.appendChild(default_layer.getElement());\n    display.appendChild(cursor.getElement());\n\n    // Create bounding div \n    var bounds = document.createElement(\"div\");\n    bounds.style.position = \"relative\";\n    bounds.style.width = (displayWidth*displayScale) + \"px\";\n    bounds.style.height = (displayHeight*displayScale) + \"px\";\n\n    // Add display to bounds\n    bounds.appendChild(display);\n\n    /**\n     * The X coordinate of the hotspot of the mouse cursor. The hotspot is\n     * the relative location within the image of the mouse cursor at which\n     * each click occurs.\n     * \n     * @type {!number}\n     */\n    this.cursorHotspotX = 0;\n\n    /**\n     * The Y coordinate of the hotspot of the mouse cursor. The hotspot is\n     * the relative location within the image of the mouse cursor at which\n     * each click occurs.\n     * \n     * @type {!number}\n     */\n    this.cursorHotspotY = 0;\n\n    /**\n     * The current X coordinate of the local mouse cursor. This is not\n     * necessarily the location of the actual mouse - it refers only to\n     * the location of the cursor image within the Guacamole display, as\n     * last set by moveCursor().\n     * \n     * @type {!number}\n     */\n    this.cursorX = 0;\n\n    /**\n     * The current X coordinate of the local mouse cursor. This is not\n     * necessarily the location of the actual mouse - it refers only to\n     * the location of the cursor image within the Guacamole display, as\n     * last set by moveCursor().\n     * \n     * @type {!number}\n     */\n    this.cursorY = 0;\n\n    /**\n     * Fired when the default layer (and thus the entire Guacamole display)\n     * is resized.\n     * \n     * @event\n     * @param {!number} width\n     *     The new width of the Guacamole display.\n     *\n     * @param {!number} height\n     *     The new height of the Guacamole display.\n     */\n    this.onresize = null;\n\n    /**\n     * Fired whenever the local cursor image is changed. This can be used to\n     * implement special handling of the client-side cursor, or to override\n     * the default use of a software cursor layer.\n     * \n     * @event\n     * @param {!HTMLCanvasElement} canvas\n     *     The cursor image.\n     *\n     * @param {!number} x\n     *     The X-coordinate of the cursor hotspot.\n     *\n     * @param {!number} y\n     *     The Y-coordinate of the cursor hotspot.\n     */\n    this.oncursor = null;\n\n    /**\n     * The queue of all pending Tasks. Tasks will be run in order, with new\n     * tasks added at the end of the queue and old tasks removed from the\n     * front of the queue (FIFO). These tasks will eventually be grouped\n     * into a Frame.\n     *\n     * @private\n     * @type {!Task[]}\n     */\n    var tasks = [];\n\n    /**\n     * The queue of all frames. Each frame is a pairing of an array of tasks\n     * and a callback which must be called when the frame is rendered.\n     *\n     * @private\n     * @type {!Frame[]}\n     */\n    var frames = [];\n\n    /**\n     * Flushes all pending frames.\n     * @private\n     */\n    function __flush_frames() {\n\n        var rendered_frames = 0;\n\n        // Draw all pending frames, if ready\n        while (rendered_frames < frames.length) {\n\n            var frame = frames[rendered_frames];\n            if (!frame.isReady())\n                break;\n\n            frame.flush();\n            rendered_frames++;\n\n        } \n\n        // Remove rendered frames from array\n        frames.splice(0, rendered_frames);\n\n    }\n\n    /**\n     * An ordered list of tasks which must be executed atomically. Once\n     * executed, an associated (and optional) callback will be called.\n     *\n     * @private\n     * @constructor\n     * @param {function} [callback]\n     *     The function to call when this frame is rendered.\n     *\n     * @param {!Task[]} tasks\n     *     The set of tasks which must be executed to render this frame.\n     */\n    function Frame(callback, tasks) {\n\n        /**\n         * Returns whether this frame is ready to be rendered. This function\n         * returns true if and only if ALL underlying tasks are unblocked.\n         * \n         * @returns {!boolean}\n         *     true if all underlying tasks are unblocked, false otherwise.\n         */\n        this.isReady = function() {\n\n            // Search for blocked tasks\n            for (var i=0; i < tasks.length; i++) {\n                if (tasks[i].blocked)\n                    return false;\n            }\n\n            // If no blocked tasks, the frame is ready\n            return true;\n\n        };\n\n        /**\n         * Renders this frame, calling the associated callback, if any, after\n         * the frame is complete. This function MUST only be called when no\n         * blocked tasks exist. Calling this function with blocked tasks\n         * will result in undefined behavior.\n         */\n        this.flush = function() {\n\n            // Draw all pending tasks.\n            for (var i=0; i < tasks.length; i++)\n                tasks[i].execute();\n\n            // Call callback\n            if (callback) callback();\n\n        };\n\n    }\n\n    /**\n     * A container for an task handler. Each operation which must be ordered\n     * is associated with a Task that goes into a task queue. Tasks in this\n     * queue are executed in order once their handlers are set, while Tasks \n     * without handlers block themselves and any following Tasks from running.\n     *\n     * @constructor\n     * @private\n     * @param {function} [taskHandler]\n     *     The function to call when this task runs, if any.\n     *\n     * @param {boolean} [blocked]\n     *     Whether this task should start blocked.\n     */\n    function Task(taskHandler, blocked) {\n\n        /**\n         * Reference to this Task.\n         *\n         * @private\n         * @type {!Guacamole.Display.Task}\n         */\n        var task = this;\n       \n        /**\n         * Whether this Task is blocked.\n         * \n         * @type {boolean}\n         */\n        this.blocked = blocked;\n\n        /**\n         * Unblocks this Task, allowing it to run.\n         */\n        this.unblock = function() {\n            if (task.blocked) {\n                task.blocked = false;\n                __flush_frames();\n            }\n        };\n\n        /**\n         * Calls the handler associated with this task IMMEDIATELY. This\n         * function does not track whether this task is marked as blocked.\n         * Enforcing the blocked status of tasks is up to the caller.\n         */\n        this.execute = function() {\n            if (taskHandler) taskHandler();\n        };\n\n    }\n\n    /**\n     * Schedules a task for future execution. The given handler will execute\n     * immediately after all previous tasks upon frame flush, unless this\n     * task is blocked. If any tasks is blocked, the entire frame will not\n     * render (and no tasks within will execute) until all tasks are unblocked.\n     * \n     * @private\n     * @param {function} [handler]\n     *     The function to call when possible, if any.\n     *\n     * @param {boolean} [blocked]\n     *     Whether the task should start blocked.\n     *\n     * @returns {!Task}\n     *     The Task created and added to the queue for future running.\n     */\n    function scheduleTask(handler, blocked) {\n        var task = new Task(handler, blocked);\n        tasks.push(task);\n        return task;\n    }\n\n    /**\n     * Returns the element which contains the Guacamole display.\n     * \n     * @return {!Element}\n     *     The element containing the Guacamole display.\n     */\n    this.getElement = function() {\n        return bounds;\n    };\n\n    /**\n     * Returns the width of this display.\n     * \n     * @return {!number}\n     *     The width of this display;\n     */\n    this.getWidth = function() {\n        return displayWidth;\n    };\n\n    /**\n     * Returns the height of this display.\n     * \n     * @return {!number}\n     *     The height of this display;\n     */\n    this.getHeight = function() {\n        return displayHeight;\n    };\n\n    /**\n     * Returns the default layer of this display. Each Guacamole display always\n     * has at least one layer. Other layers can optionally be created within\n     * this layer, but the default layer cannot be removed and is the absolute\n     * ancestor of all other layers.\n     * \n     * @return {!Guacamole.Display.VisibleLayer}\n     *     The default layer.\n     */\n    this.getDefaultLayer = function() {\n        return default_layer;\n    };\n\n    /**\n     * Returns the cursor layer of this display. Each Guacamole display contains\n     * a layer for the image of the mouse cursor. This layer is a special case\n     * and exists above all other layers, similar to the hardware mouse cursor.\n     * \n     * @return {!Guacamole.Display.VisibleLayer}\n     *     The cursor layer.\n     */\n    this.getCursorLayer = function() {\n        return cursor;\n    };\n\n    /**\n     * Creates a new layer. The new layer will be a direct child of the default\n     * layer, but can be moved to be a child of any other layer. Layers returned\n     * by this function are visible.\n     * \n     * @return {!Guacamole.Display.VisibleLayer}\n     *     The newly-created layer.\n     */\n    this.createLayer = function() {\n        var layer = new Guacamole.Display.VisibleLayer(displayWidth, displayHeight);\n        layer.move(default_layer, 0, 0, 0);\n        return layer;\n    };\n\n    /**\n     * Creates a new buffer. Buffers are invisible, off-screen surfaces. They\n     * are implemented in the same manner as layers, but do not provide the\n     * same nesting semantics.\n     * \n     * @return {!Guacamole.Layer}\n     *     The newly-created buffer.\n     */\n    this.createBuffer = function() {\n        var buffer = new Guacamole.Layer(0, 0);\n        buffer.autosize = 1;\n        return buffer;\n    };\n\n    /**\n     * Flush all pending draw tasks, if possible, as a new frame. If the entire\n     * frame is not ready, the flush will wait until all required tasks are\n     * unblocked.\n     * \n     * @param {function} [callback]\n     *     The function to call when this frame is flushed. This may happen\n     *     immediately, or later when blocked tasks become unblocked.\n     */\n    this.flush = function(callback) {\n\n        // Add frame, reset tasks\n        frames.push(new Frame(callback, tasks));\n        tasks = [];\n\n        // Attempt flush\n        __flush_frames();\n\n    };\n\n    /**\n     * Sets the hotspot and image of the mouse cursor displayed within the\n     * Guacamole display.\n     * \n     * @param {!number} hotspotX\n     *     The X coordinate of the cursor hotspot.\n     *\n     * @param {!number} hotspotY\n     *     The Y coordinate of the cursor hotspot.\n     *\n     * @param {!Guacamole.Layer} layer\n     *     The source layer containing the data which should be used as the\n     *     mouse cursor image.\n     *\n     * @param {!number} srcx\n     *     The X coordinate of the upper-left corner of the rectangle within\n     *     the source layer's coordinate space to copy data from.\n     *\n     * @param {!number} srcy\n     *     The Y coordinate of the upper-left corner of the rectangle within\n     *     the source layer's coordinate space to copy data from.\n     *\n     * @param {!number} srcw\n     *     The width of the rectangle within the source layer's coordinate\n     *     space to copy data from.\n     *\n     * @param {!number} srch\n     *     The height of the rectangle within the source layer's coordinate\n     *     space to copy data from.\n     */\n    this.setCursor = function(hotspotX, hotspotY, layer, srcx, srcy, srcw, srch) {\n        scheduleTask(function __display_set_cursor() {\n\n            // Set hotspot\n            guac_display.cursorHotspotX = hotspotX;\n            guac_display.cursorHotspotY = hotspotY;\n\n            // Reset cursor size\n            cursor.resize(srcw, srch);\n\n            // Draw cursor to cursor layer\n            cursor.copy(layer, srcx, srcy, srcw, srch, 0, 0);\n            guac_display.moveCursor(guac_display.cursorX, guac_display.cursorY);\n\n            // Fire cursor change event\n            if (guac_display.oncursor)\n                guac_display.oncursor(cursor.toCanvas(), hotspotX, hotspotY);\n\n        });\n    };\n\n    /**\n     * Sets whether the software-rendered cursor is shown. This cursor differs\n     * from the hardware cursor in that it is built into the Guacamole.Display,\n     * and relies on its own Guacamole layer to render.\n     *\n     * @param {boolean} [shown=true]\n     *     Whether to show the software cursor.\n     */\n    this.showCursor = function(shown) {\n\n        var element = cursor.getElement();\n        var parent = element.parentNode;\n\n        // Remove from DOM if hidden\n        if (shown === false) {\n            if (parent)\n                parent.removeChild(element);\n        }\n\n        // Otherwise, ensure cursor is child of display\n        else if (parent !== display)\n            display.appendChild(element);\n\n    };\n\n    /**\n     * Sets the location of the local cursor to the given coordinates. For the\n     * sake of responsiveness, this function performs its action immediately.\n     * Cursor motion is not maintained within atomic frames.\n     * \n     * @param {!number} x\n     *     The X coordinate to move the cursor to.\n     *\n     * @param {!number} y\n     *     The Y coordinate to move the cursor to.\n     */\n    this.moveCursor = function(x, y) {\n\n        // Move cursor layer\n        cursor.translate(x - guac_display.cursorHotspotX,\n                         y - guac_display.cursorHotspotY);\n\n        // Update stored position\n        guac_display.cursorX = x;\n        guac_display.cursorY = y;\n\n    };\n\n    /**\n     * Changes the size of the given Layer to the given width and height.\n     * Resizing is only attempted if the new size provided is actually different\n     * from the current size.\n     * \n     * @param {!Guacamole.Layer} layer\n     *     The layer to resize.\n     *\n     * @param {!number} width\n     *     The new width.\n     *\n     * @param {!number} height\n     *     The new height.\n     */\n    this.resize = function(layer, width, height) {\n        scheduleTask(function __display_resize() {\n\n            layer.resize(width, height);\n\n            // Resize display if default layer is resized\n            if (layer === default_layer) {\n\n                // Update (set) display size\n                displayWidth = width;\n                displayHeight = height;\n                display.style.width = displayWidth + \"px\";\n                display.style.height = displayHeight + \"px\";\n\n                // Update bounds size\n                bounds.style.width = (displayWidth*displayScale) + \"px\";\n                bounds.style.height = (displayHeight*displayScale) + \"px\";\n\n                // Notify of resize\n                if (guac_display.onresize)\n                    guac_display.onresize(width, height);\n\n            }\n\n        });\n    };\n\n    /**\n     * Draws the specified image at the given coordinates. The image specified\n     * must already be loaded.\n     * \n     * @param {!Guacamole.Layer} layer\n     *     The layer to draw upon.\n     *\n     * @param {!number} x\n     *     The destination X coordinate.\n     *\n     * @param {!number} y \n     *     The destination Y coordinate.\n     *\n     * @param {!CanvasImageSource} image\n     *     The image to draw. Note that this not a URL.\n     */\n    this.drawImage = function(layer, x, y, image) {\n        scheduleTask(function __display_drawImage() {\n            layer.drawImage(x, y, image);\n        });\n    };\n\n    /**\n     * Draws the image contained within the specified Blob at the given\n     * coordinates. The Blob specified must already be populated with image\n     * data.\n     *\n     * @param {!Guacamole.Layer} layer\n     *     The layer to draw upon.\n     *\n     * @param {!number} x\n     *     The destination X coordinate.\n     *\n     * @param {!number} y\n     *     The destination Y coordinate.\n     *\n     * @param {!Blob} blob\n     *     The Blob containing the image data to draw.\n     */\n    this.drawBlob = function(layer, x, y, blob) {\n\n        var task;\n\n        // Prefer createImageBitmap() over blob URLs if available\n        if (window.createImageBitmap) {\n\n            var bitmap;\n\n            // Draw image once loaded\n            task = scheduleTask(function drawImageBitmap() {\n                layer.drawImage(x, y, bitmap);\n            }, true);\n\n            // Load image from provided blob\n            window.createImageBitmap(blob).then(function bitmapLoaded(decoded) {\n                bitmap = decoded;\n                task.unblock();\n            });\n\n        }\n\n        // Use blob URLs and the Image object if createImageBitmap() is\n        // unavailable\n        else {\n\n            // Create URL for blob\n            var url = URL.createObjectURL(blob);\n\n            // Draw and free blob URL when ready\n            task = scheduleTask(function __display_drawBlob() {\n\n                // Draw the image only if it loaded without errors\n                if (image.width && image.height)\n                    layer.drawImage(x, y, image);\n\n                // Blob URL no longer needed\n                URL.revokeObjectURL(url);\n\n            }, true);\n\n            // Load image from URL\n            var image = new Image();\n            image.onload = task.unblock;\n            image.onerror = task.unblock;\n            image.src = url;\n\n        }\n\n    };\n\n    /**\n     * Draws the image within the given stream at the given coordinates. The\n     * image will be loaded automatically, and this and any future operations\n     * will wait for the image to finish loading. This function will\n     * automatically choose an approriate method for reading and decoding the\n     * given image stream, and should be preferred for received streams except\n     * where manual decoding of the stream is unavoidable.\n     *\n     * @param {!Guacamole.Layer} layer\n     *     The layer to draw upon.\n     *\n     * @param {!number} x\n     *     The destination X coordinate.\n     *\n     * @param {!number} y\n     *     The destination Y coordinate.\n     *\n     * @param {!Guacamole.InputStream} stream\n     *     The stream along which image data will be received.\n     *\n     * @param {!string} mimetype\n     *     The mimetype of the image within the stream.\n     */\n    this.drawStream = function drawStream(layer, x, y, stream, mimetype) {\n\n        // If createImageBitmap() is available, load the image as a blob so\n        // that function can be used\n        if (window.createImageBitmap) {\n            var reader = new Guacamole.BlobReader(stream, mimetype);\n            reader.onend = function drawImageBlob() {\n                guac_display.drawBlob(layer, x, y, reader.getBlob());\n            };\n        }\n\n        // Lacking createImageBitmap(), fall back to data URIs and the Image\n        // object\n        else {\n            var reader = new Guacamole.DataURIReader(stream, mimetype);\n            reader.onend = function drawImageDataURI() {\n                guac_display.draw(layer, x, y, reader.getURI());\n            };\n        }\n\n    };\n\n    /**\n     * Draws the image at the specified URL at the given coordinates. The image\n     * will be loaded automatically, and this and any future operations will\n     * wait for the image to finish loading.\n     * \n     * @param {!Guacamole.Layer} layer\n     *     The layer to draw upon.\n     *\n     * @param {!number} x\n     *     The destination X coordinate.\n     *\n     * @param {!number} y\n     *     The destination Y coordinate.\n     *\n     * @param {!string} url\n     *     The URL of the image to draw.\n     */\n    this.draw = function(layer, x, y, url) {\n\n        var task = scheduleTask(function __display_draw() {\n\n            // Draw the image only if it loaded without errors\n            if (image.width && image.height)\n                layer.drawImage(x, y, image);\n\n        }, true);\n\n        var image = new Image();\n        image.onload = task.unblock;\n        image.onerror = task.unblock;\n        image.src = url;\n\n    };\n\n    /**\n     * Plays the video at the specified URL within this layer. The video\n     * will be loaded automatically, and this and any future operations will\n     * wait for the video to finish loading. Future operations will not be\n     * executed until the video finishes playing.\n     * \n     * @param {!Guacamole.Layer} layer\n     *     The layer to draw upon.\n     *\n     * @param {!string} mimetype\n     *     The mimetype of the video to play.\n     *\n     * @param {!number} duration\n     *     The duration of the video in milliseconds.\n     *\n     * @param {!string} url\n     *     The URL of the video to play.\n     */\n    this.play = function(layer, mimetype, duration, url) {\n\n        // Start loading the video\n        var video = document.createElement(\"video\");\n        video.type = mimetype;\n        video.src = url;\n\n        // Start copying frames when playing\n        video.addEventListener(\"play\", function() {\n            \n            function render_callback() {\n                layer.drawImage(0, 0, video);\n                if (!video.ended)\n                    window.setTimeout(render_callback, 20);\n            }\n            \n            render_callback();\n            \n        }, false);\n\n        scheduleTask(video.play);\n\n    };\n\n    /**\n     * Transfer a rectangle of image data from one Layer to this Layer using the\n     * specified transfer function.\n     * \n     * @param {!Guacamole.Layer} srcLayer\n     *     The Layer to copy image data from.\n     *\n     * @param {!number} srcx\n     *     The X coordinate of the upper-left corner of the rectangle within\n     *     the source Layer's coordinate space to copy data from.\n     *\n     * @param {!number} srcy\n     *     The Y coordinate of the upper-left corner of the rectangle within\n     *     the source Layer's coordinate space to copy data from.\n     *\n     * @param {!number} srcw\n     *     The width of the rectangle within the source Layer's coordinate\n     *     space to copy data from.\n     *\n     * @param {!number} srch\n     *     The height of the rectangle within the source Layer's coordinate\n     *     space to copy data from.\n     *\n     * @param {!Guacamole.Layer} dstLayer\n     *     The layer to draw upon.\n     *\n     * @param {!number} x\n     *     The destination X coordinate.\n     *\n     * @param {!number} y\n     *     The destination Y coordinate.\n     *\n     * @param {!function} transferFunction\n     *     The transfer function to use to transfer data from source to\n     *     destination.\n     */\n    this.transfer = function(srcLayer, srcx, srcy, srcw, srch, dstLayer, x, y, transferFunction) {\n        scheduleTask(function __display_transfer() {\n            dstLayer.transfer(srcLayer, srcx, srcy, srcw, srch, x, y, transferFunction);\n        });\n    };\n\n    /**\n     * Put a rectangle of image data from one Layer to this Layer directly\n     * without performing any alpha blending. Simply copy the data.\n     * \n     * @param {!Guacamole.Layer} srcLayer\n     *     The Layer to copy image data from.\n     *\n     * @param {!number} srcx\n     *     The X coordinate of the upper-left corner of the rectangle within\n     *     the source Layer's coordinate space to copy data from.\n     *\n     * @param {!number} srcy\n     *     The Y coordinate of the upper-left corner of the rectangle within\n     *     the source Layer's coordinate space to copy data from.\n     *\n     * @param {!number} srcw\n     *     The width of the rectangle within the source Layer's coordinate\n     *     space to copy data from.\n     *\n     * @param {!number} srch\n     *     The height of the rectangle within the source Layer's coordinate\n     *     space to copy data from.\n     *\n     * @param {!Guacamole.Layer} dstLayer\n     *     The layer to draw upon.\n     *\n     * @param {!number} x\n     *     The destination X coordinate.\n     *\n     * @param {!number} y\n     *     The destination Y coordinate.\n     */\n    this.put = function(srcLayer, srcx, srcy, srcw, srch, dstLayer, x, y) {\n        scheduleTask(function __display_put() {\n            dstLayer.put(srcLayer, srcx, srcy, srcw, srch, x, y);\n        });\n    };\n\n    /**\n     * Copy a rectangle of image data from one Layer to this Layer. This\n     * operation will copy exactly the image data that will be drawn once all\n     * operations of the source Layer that were pending at the time this\n     * function was called are complete. This operation will not alter the\n     * size of the source Layer even if its autosize property is set to true.\n     * \n     * @param {!Guacamole.Layer} srcLayer\n     *     The Layer to copy image data from.\n     *\n     * @param {!number} srcx\n     *     The X coordinate of the upper-left corner of the rectangle within\n     *     the source Layer's coordinate space to copy data from.\n     *\n     * @param {!number} srcy\n     *     The Y coordinate of the upper-left corner of the rectangle within\n     *     the source Layer's coordinate space to copy data from.\n     *\n     * @param {!number} srcw\n     *     The width of the rectangle within the source Layer's coordinate\n     *     space to copy data from.\n     *\n     * @param {!number} srch\n     *     The height of the rectangle within the source Layer's coordinate space to copy data from.\n     *\n     * @param {!Guacamole.Layer} dstLayer\n     *     The layer to draw upon.\n     *\n     * @param {!number} x\n     *     The destination X coordinate.\n     *\n     * @param {!number} y\n     *     The destination Y coordinate.\n     */\n    this.copy = function(srcLayer, srcx, srcy, srcw, srch, dstLayer, x, y) {\n        scheduleTask(function __display_copy() {\n            dstLayer.copy(srcLayer, srcx, srcy, srcw, srch, x, y);\n        });\n    };\n\n    /**\n     * Starts a new path at the specified point.\n     * \n     * @param {!Guacamole.Layer} layer\n     *     The layer to draw upon.\n     *\n     * @param {!number} x\n     *     The X coordinate of the point to draw.\n     *\n     * @param {!number} y\n     *     The Y coordinate of the point to draw.\n     */\n    this.moveTo = function(layer, x, y) {\n        scheduleTask(function __display_moveTo() {\n            layer.moveTo(x, y);\n        });\n    };\n\n    /**\n     * Add the specified line to the current path.\n     * \n     * @param {!Guacamole.Layer} layer\n     *     The layer to draw upon.\n     *\n     * @param {!number} x\n     *     The X coordinate of the endpoint of the line to draw.\n     *\n     * @param {!number} y\n     *     The Y coordinate of the endpoint of the line to draw.\n     */\n    this.lineTo = function(layer, x, y) {\n        scheduleTask(function __display_lineTo() {\n            layer.lineTo(x, y);\n        });\n    };\n\n    /**\n     * Add the specified arc to the current path.\n     *\n     * @param {!Guacamole.Layer} layer\n     *     The layer to draw upon.\n     *\n     * @param {!number} x\n     *     The X coordinate of the center of the circle which will contain the\n     *     arc.\n     *\n     * @param {!number} y\n     *     The Y coordinate of the center of the circle which will contain the\n     *     arc.\n     *\n     * @param {!number} radius\n     *     The radius of the circle.\n     *\n     * @param {!number} startAngle\n     *     The starting angle of the arc, in radians.\n     *\n     * @param {!number} endAngle\n     *     The ending angle of the arc, in radians.\n     *\n     * @param {!boolean} negative\n     *     Whether the arc should be drawn in order of decreasing angle.\n     */\n    this.arc = function(layer, x, y, radius, startAngle, endAngle, negative) {\n        scheduleTask(function __display_arc() {\n            layer.arc(x, y, radius, startAngle, endAngle, negative);\n        });\n    };\n\n    /**\n     * Starts a new path at the specified point.\n     *\n     * @param {!Guacamole.Layer} layer\n     *     The layer to draw upon.\n     *\n     * @param {!number} cp1x\n     *     The X coordinate of the first control point.\n     *\n     * @param {!number} cp1y\n     *     The Y coordinate of the first control point.\n     *\n     * @param {!number} cp2x\n     *     The X coordinate of the second control point.\n     *\n     * @param {!number} cp2y\n     *     The Y coordinate of the second control point.\n     *\n     * @param {!number} x\n     *     The X coordinate of the endpoint of the curve.\n     *\n     * @param {!number} y\n     *     The Y coordinate of the endpoint of the curve.\n     */\n    this.curveTo = function(layer, cp1x, cp1y, cp2x, cp2y, x, y) {\n        scheduleTask(function __display_curveTo() {\n            layer.curveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n        });\n    };\n\n    /**\n     * Closes the current path by connecting the end point with the start\n     * point (if any) with a straight line.\n     * \n     * @param {!Guacamole.Layer} layer\n     *     The layer to draw upon.\n     */\n    this.close = function(layer) {\n        scheduleTask(function __display_close() {\n            layer.close();\n        });\n    };\n\n    /**\n     * Add the specified rectangle to the current path.\n     *\n     * @param {!Guacamole.Layer} layer\n     *     The layer to draw upon.\n     *\n     * @param {!number} x\n     *     The X coordinate of the upper-left corner of the rectangle to draw.\n     *\n     * @param {!number} y\n     *     The Y coordinate of the upper-left corner of the rectangle to draw.\n     *\n     * @param {!number} w\n     *     The width of the rectangle to draw.\n     *\n     * @param {!number} h\n     *     The height of the rectangle to draw.\n     */\n    this.rect = function(layer, x, y, w, h) {\n        scheduleTask(function __display_rect() {\n            layer.rect(x, y, w, h);\n        });\n    };\n\n    /**\n     * Clip all future drawing operations by the current path. The current path\n     * is implicitly closed. The current path can continue to be reused\n     * for other operations (such as fillColor()) but a new path will be started\n     * once a path drawing operation (path() or rect()) is used.\n     * \n     * @param {!Guacamole.Layer} layer\n     *     The layer to affect.\n     */\n    this.clip = function(layer) {\n        scheduleTask(function __display_clip() {\n            layer.clip();\n        });\n    };\n\n    /**\n     * Stroke the current path with the specified color. The current path\n     * is implicitly closed. The current path can continue to be reused\n     * for other operations (such as clip()) but a new path will be started\n     * once a path drawing operation (path() or rect()) is used.\n     *\n     * @param {!Guacamole.Layer} layer\n     *     The layer to draw upon.\n     *\n     * @param {!string} cap\n     *     The line cap style. Can be \"round\", \"square\", or \"butt\".\n     *\n     * @param {!string} join\n     *     The line join style. Can be \"round\", \"bevel\", or \"miter\".\n     *\n     * @param {!number} thickness\n     *     The line thickness in pixels.\n     *\n     * @param {!number} r\n     *     The red component of the color to fill.\n     *\n     * @param {!number} g\n     *     The green component of the color to fill.\n     *\n     * @param {!number} b\n     *     The blue component of the color to fill.\n     *\n     * @param {!number} a\n     *     The alpha component of the color to fill.\n     */\n    this.strokeColor = function(layer, cap, join, thickness, r, g, b, a) {\n        scheduleTask(function __display_strokeColor() {\n            layer.strokeColor(cap, join, thickness, r, g, b, a);\n        });\n    };\n\n    /**\n     * Fills the current path with the specified color. The current path\n     * is implicitly closed. The current path can continue to be reused\n     * for other operations (such as clip()) but a new path will be started\n     * once a path drawing operation (path() or rect()) is used.\n     * \n     * @param {!Guacamole.Layer} layer\n     *     The layer to draw upon.\n     *\n     * @param {!number} r\n     *     The red component of the color to fill.\n     *\n     * @param {!number} g\n     *     The green component of the color to fill.\n     *\n     * @param {!number} b\n     *     The blue component of the color to fill.\n     *\n     * @param {!number} a\n     *     The alpha component of the color to fill.\n     */\n    this.fillColor = function(layer, r, g, b, a) {\n        scheduleTask(function __display_fillColor() {\n            layer.fillColor(r, g, b, a);\n        });\n    };\n\n    /**\n     * Stroke the current path with the image within the specified layer. The\n     * image data will be tiled infinitely within the stroke. The current path\n     * is implicitly closed. The current path can continue to be reused\n     * for other operations (such as clip()) but a new path will be started\n     * once a path drawing operation (path() or rect()) is used.\n     * \n     * @param {!Guacamole.Layer} layer\n     *     The layer to draw upon.\n     *\n     * @param {!string} cap\n     *     The line cap style. Can be \"round\", \"square\", or \"butt\".\n     *\n     * @param {!string} join\n     *     The line join style. Can be \"round\", \"bevel\", or \"miter\".\n     *\n     * @param {!number} thickness\n     *     The line thickness in pixels.\n     *\n     * @param {!Guacamole.Layer} srcLayer\n     *     The layer to use as a repeating pattern within the stroke.\n     */\n    this.strokeLayer = function(layer, cap, join, thickness, srcLayer) {\n        scheduleTask(function __display_strokeLayer() {\n            layer.strokeLayer(cap, join, thickness, srcLayer);\n        });\n    };\n\n    /**\n     * Fills the current path with the image within the specified layer. The\n     * image data will be tiled infinitely within the stroke. The current path\n     * is implicitly closed. The current path can continue to be reused\n     * for other operations (such as clip()) but a new path will be started\n     * once a path drawing operation (path() or rect()) is used.\n     * \n     * @param {!Guacamole.Layer} layer\n     *     The layer to draw upon.\n     *\n     * @param {!Guacamole.Layer} srcLayer\n     *     The layer to use as a repeating pattern within the fill.\n     */\n    this.fillLayer = function(layer, srcLayer) {\n        scheduleTask(function __display_fillLayer() {\n            layer.fillLayer(srcLayer);\n        });\n    };\n\n    /**\n     * Push current layer state onto stack.\n     * \n     * @param {!Guacamole.Layer} layer\n     *     The layer to draw upon.\n     */\n    this.push = function(layer) {\n        scheduleTask(function __display_push() {\n            layer.push();\n        });\n    };\n\n    /**\n     * Pop layer state off stack.\n     * \n     * @param {!Guacamole.Layer} layer\n     *     The layer to draw upon.\n     */\n    this.pop = function(layer) {\n        scheduleTask(function __display_pop() {\n            layer.pop();\n        });\n    };\n\n    /**\n     * Reset the layer, clearing the stack, the current path, and any transform\n     * matrix.\n     * \n     * @param {!Guacamole.Layer} layer\n     *     The layer to draw upon.\n     */\n    this.reset = function(layer) {\n        scheduleTask(function __display_reset() {\n            layer.reset();\n        });\n    };\n\n    /**\n     * Sets the given affine transform (defined with six values from the\n     * transform's matrix).\n     *\n     * @param {!Guacamole.Layer} layer\n     *     The layer to modify.\n     *\n     * @param {!number} a\n     *     The first value in the affine transform's matrix.\n     *\n     * @param {!number} b\n     *     The second value in the affine transform's matrix.\n     *\n     * @param {!number} c\n     *     The third value in the affine transform's matrix.\n     *\n     * @param {!number} d\n     *     The fourth value in the affine transform's matrix.\n     *\n     * @param {!number} e\n     *     The fifth value in the affine transform's matrix.\n     *\n     * @param {!number} f\n     *     The sixth value in the affine transform's matrix.\n     */\n    this.setTransform = function(layer, a, b, c, d, e, f) {\n        scheduleTask(function __display_setTransform() {\n            layer.setTransform(a, b, c, d, e, f);\n        });\n    };\n\n    /**\n     * Applies the given affine transform (defined with six values from the\n     * transform's matrix).\n     *\n     * @param {!Guacamole.Layer} layer\n     *     The layer to modify.\n     *\n     * @param {!number} a\n     *     The first value in the affine transform's matrix.\n     *\n     * @param {!number} b\n     *     The second value in the affine transform's matrix.\n     *\n     * @param {!number} c\n     *     The third value in the affine transform's matrix.\n     *\n     * @param {!number} d\n     *     The fourth value in the affine transform's matrix.\n     *\n     * @param {!number} e\n     *     The fifth value in the affine transform's matrix.\n     *\n     * @param {!number} f\n     *     The sixth value in the affine transform's matrix.\n     *\n     */\n    this.transform = function(layer, a, b, c, d, e, f) {\n        scheduleTask(function __display_transform() {\n            layer.transform(a, b, c, d, e, f);\n        });\n    };\n\n    /**\n     * Sets the channel mask for future operations on this Layer.\n     * \n     * The channel mask is a Guacamole-specific compositing operation identifier\n     * with a single bit representing each of four channels (in order): source\n     * image where destination transparent, source where destination opaque,\n     * destination where source transparent, and destination where source\n     * opaque.\n     * \n     * @param {!Guacamole.Layer} layer\n     *     The layer to modify.\n     *\n     * @param {!number} mask\n     *     The channel mask for future operations on this Layer.\n     */\n    this.setChannelMask = function(layer, mask) {\n        scheduleTask(function __display_setChannelMask() {\n            layer.setChannelMask(mask);\n        });\n    };\n\n    /**\n     * Sets the miter limit for stroke operations using the miter join. This\n     * limit is the maximum ratio of the size of the miter join to the stroke\n     * width. If this ratio is exceeded, the miter will not be drawn for that\n     * joint of the path.\n     * \n     * @param {!Guacamole.Layer} layer\n     *     The layer to modify.\n     *\n     * @param {!number} limit\n     *     The miter limit for stroke operations using the miter join.\n     */\n    this.setMiterLimit = function(layer, limit) {\n        scheduleTask(function __display_setMiterLimit() {\n            layer.setMiterLimit(limit);\n        });\n    };\n\n    /**\n     * Removes the given layer container entirely, such that it is no longer\n     * contained within its parent layer, if any.\n     *\n     * @param {!Guacamole.Display.VisibleLayer} layer\n     *     The layer being removed from its parent.\n     */\n    this.dispose = function dispose(layer) {\n        scheduleTask(function disposeLayer() {\n            layer.dispose();\n        });\n    };\n\n    /**\n     * Applies the given affine transform (defined with six values from the\n     * transform's matrix) to the given layer.\n     *\n     * @param {!Guacamole.Display.VisibleLayer} layer\n     *     The layer being distorted.\n     *\n     * @param {!number} a\n     *     The first value in the affine transform's matrix.\n     *\n     * @param {!number} b\n     *     The second value in the affine transform's matrix.\n     *\n     * @param {!number} c\n     *     The third value in the affine transform's matrix.\n     *\n     * @param {!number} d\n     *     The fourth value in the affine transform's matrix.\n     *\n     * @param {!number} e\n     *     The fifth value in the affine transform's matrix.\n     *\n     * @param {!number} f\n     *     The sixth value in the affine transform's matrix.\n     */\n    this.distort = function distort(layer, a, b, c, d, e, f) {\n        scheduleTask(function distortLayer() {\n            layer.distort(a, b, c, d, e, f);\n        });\n    };\n\n    /**\n     * Moves the upper-left corner of the given layer to the given X and Y\n     * coordinate, sets the Z stacking order, and reparents the layer\n     * to the given parent layer.\n     *\n     * @param {!Guacamole.Display.VisibleLayer} layer\n     *     The layer being moved.\n     *\n     * @param {!Guacamole.Display.VisibleLayer} parent\n     *     The parent to set.\n     *\n     * @param {!number} x\n     *     The X coordinate to move to.\n     *\n     * @param {!number} y\n     *     The Y coordinate to move to.\n     *\n     * @param {!number} z\n     *     The Z coordinate to move to.\n     */\n    this.move = function move(layer, parent, x, y, z) {\n        scheduleTask(function moveLayer() {\n            layer.move(parent, x, y, z);\n        });\n    };\n\n    /**\n     * Sets the opacity of the given layer to the given value, where 255 is\n     * fully opaque and 0 is fully transparent.\n     *\n     * @param {!Guacamole.Display.VisibleLayer} layer\n     *     The layer whose opacity should be set.\n     *\n     * @param {!number} alpha\n     *     The opacity to set.\n     */\n    this.shade = function shade(layer, alpha) {\n        scheduleTask(function shadeLayer() {\n            layer.shade(alpha);\n        });\n    };\n\n    /**\n     * Sets the scale of the client display element such that it renders at\n     * a relatively smaller or larger size, without affecting the true\n     * resolution of the display.\n     *\n     * @param {!number} scale\n     *     The scale to resize to, where 1.0 is normal size (1:1 scale).\n     */\n    this.scale = function(scale) {\n\n        display.style.transform =\n        display.style.WebkitTransform =\n        display.style.MozTransform =\n        display.style.OTransform =\n        display.style.msTransform =\n\n            \"scale(\" + scale + \",\" + scale + \")\";\n\n        displayScale = scale;\n\n        // Update bounds size\n        bounds.style.width = (displayWidth*displayScale) + \"px\";\n        bounds.style.height = (displayHeight*displayScale) + \"px\";\n\n    };\n\n    /**\n     * Returns the scale of the display.\n     *\n     * @return {!number}\n     *     The scale of the display.\n     */\n    this.getScale = function() {\n        return displayScale;\n    };\n\n    /**\n     * Returns a canvas element containing the entire display, with all child\n     * layers composited within.\n     *\n     * @return {!HTMLCanvasElement}\n     *     A new canvas element containing a copy of the display.\n     */\n    this.flatten = function() {\n       \n        // Get destination canvas\n        var canvas = document.createElement(\"canvas\");\n        canvas.width = default_layer.width;\n        canvas.height = default_layer.height;\n\n        var context = canvas.getContext(\"2d\");\n\n        // Returns sorted array of children\n        function get_children(layer) {\n\n            // Build array of children\n            var children = [];\n            for (var index in layer.children)\n                children.push(layer.children[index]);\n\n            // Sort\n            children.sort(function children_comparator(a, b) {\n\n                // Compare based on Z order\n                var diff = a.z - b.z;\n                if (diff !== 0)\n                    return diff;\n\n                // If Z order identical, use document order\n                var a_element = a.getElement();\n                var b_element = b.getElement();\n                var position = b_element.compareDocumentPosition(a_element);\n\n                if (position & Node.DOCUMENT_POSITION_PRECEDING) return -1;\n                if (position & Node.DOCUMENT_POSITION_FOLLOWING) return  1;\n\n                // Otherwise, assume same\n                return 0;\n\n            });\n\n            // Done\n            return children;\n\n        }\n\n        // Draws the contents of the given layer at the given coordinates\n        function draw_layer(layer, x, y) {\n\n            // Draw layer\n            if (layer.width > 0 && layer.height > 0) {\n\n                // Save and update alpha\n                var initial_alpha = context.globalAlpha;\n                context.globalAlpha *= layer.alpha / 255.0;\n\n                // Copy data\n                context.drawImage(layer.getCanvas(), x, y);\n\n                // Draw all children\n                var children = get_children(layer);\n                for (var i=0; i<children.length; i++) {\n                    var child = children[i];\n                    draw_layer(child, x + child.x, y + child.y);\n                }\n\n                // Restore alpha\n                context.globalAlpha = initial_alpha;\n\n            }\n\n        }\n\n        // Draw default layer and all children\n        draw_layer(default_layer, 0, 0);\n\n        // Return new canvas copy\n        return canvas;\n        \n    };\n\n};\n\n/**\n * Simple container for Guacamole.Layer, allowing layers to be easily\n * repositioned and nested. This allows certain operations to be accelerated\n * through DOM manipulation, rather than raster operations.\n * \n * @constructor\n * @augments Guacamole.Layer\n * @param {!number} width\n *     The width of the Layer, in pixels. The canvas element backing this Layer\n *     will be given this width.\n *\n * @param {!number} height\n *     The height of the Layer, in pixels. The canvas element backing this\n *     Layer will be given this height.\n */\nGuacamole.Display.VisibleLayer = function(width, height) {\n\n    Guacamole.Layer.apply(this, [width, height]);\n\n    /**\n     * Reference to this layer.\n     *\n     * @private\n     * @type {!Guacamole.Display.Layer}\n     */\n    var layer = this;\n\n    /**\n     * Identifier which uniquely identifies this layer. This is COMPLETELY\n     * UNRELATED to the index of the underlying layer, which is specific\n     * to the Guacamole protocol, and not relevant at this level.\n     * \n     * @private\n     * @type {!number}\n     */\n    this.__unique_id = Guacamole.Display.VisibleLayer.__next_id++;\n\n    /**\n     * The opacity of the layer container, where 255 is fully opaque and 0 is\n     * fully transparent.\n     *\n     * @type {!number}\n     */\n    this.alpha = 0xFF;\n\n    /**\n     * X coordinate of the upper-left corner of this layer container within\n     * its parent, in pixels.\n     *\n     * @type {!number}\n     */\n    this.x = 0;\n\n    /**\n     * Y coordinate of the upper-left corner of this layer container within\n     * its parent, in pixels.\n     *\n     * @type {!number}\n     */\n    this.y = 0;\n\n    /**\n     * Z stacking order of this layer relative to other sibling layers.\n     *\n     * @type {!number}\n     */\n    this.z = 0;\n\n    /**\n     * The affine transformation applied to this layer container. Each element\n     * corresponds to a value from the transformation matrix, with the first\n     * three values being the first row, and the last three values being the\n     * second row. There are six values total.\n     * \n     * @type {!number[]}\n     */\n    this.matrix = [1, 0, 0, 1, 0, 0];\n\n    /**\n     * The parent layer container of this layer, if any.\n     * @type {Guacamole.Display.VisibleLayer}\n     */\n    this.parent = null;\n\n    /**\n     * Set of all children of this layer, indexed by layer index. This object\n     * will have one property per child.\n     *\n     * @type {!Object.<number, Guacamole.Display.VisibleLayer>}\n     */\n    this.children = {};\n\n    // Set layer position\n    var canvas = layer.getCanvas();\n    canvas.style.position = \"absolute\";\n    canvas.style.left = \"0px\";\n    canvas.style.top = \"0px\";\n\n    // Create div with given size\n    var div = document.createElement(\"div\");\n    div.appendChild(canvas);\n    div.style.width = width + \"px\";\n    div.style.height = height + \"px\";\n    div.style.position = \"absolute\";\n    div.style.left = \"0px\";\n    div.style.top = \"0px\";\n    div.style.overflow = \"hidden\";\n\n    /**\n     * Superclass resize() function.\n     * @private\n     */\n    var __super_resize = this.resize;\n\n    this.resize = function(width, height) {\n\n        // Resize containing div\n        div.style.width = width + \"px\";\n        div.style.height = height + \"px\";\n\n        __super_resize(width, height);\n\n    };\n  \n    /**\n     * Returns the element containing the canvas and any other elements\n     * associated with this layer.\n     *\n     * @returns {!Element}\n     *     The element containing this layer's canvas.\n     */\n    this.getElement = function() {\n        return div;\n    };\n\n    /**\n     * The translation component of this layer's transform.\n     *\n     * @private\n     * @type {!string}\n     */\n    var translate = \"translate(0px, 0px)\"; // (0, 0)\n\n    /**\n     * The arbitrary matrix component of this layer's transform.\n     *\n     * @private\n     * @type {!string}\n     */\n    var matrix = \"matrix(1, 0, 0, 1, 0, 0)\"; // Identity\n\n    /**\n     * Moves the upper-left corner of this layer to the given X and Y\n     * coordinate.\n     * \n     * @param {!number} x\n     *     The X coordinate to move to.\n     *\n     * @param {!number} y\n     *     The Y coordinate to move to.\n     */\n    this.translate = function(x, y) {\n\n        layer.x = x;\n        layer.y = y;\n\n        // Generate translation\n        translate = \"translate(\"\n                        + x + \"px,\"\n                        + y + \"px)\";\n\n        // Set layer transform \n        div.style.transform =\n        div.style.WebkitTransform =\n        div.style.MozTransform =\n        div.style.OTransform =\n        div.style.msTransform =\n\n            translate + \" \" + matrix;\n\n    };\n\n    /**\n     * Moves the upper-left corner of this VisibleLayer to the given X and Y\n     * coordinate, sets the Z stacking order, and reparents this VisibleLayer\n     * to the given VisibleLayer.\n     * \n     * @param {!Guacamole.Display.VisibleLayer} parent\n     *     The parent to set.\n     *\n     * @param {!number} x\n     *     The X coordinate to move to.\n     *\n     * @param {!number} y\n     *     The Y coordinate to move to.\n     *\n     * @param {!number} z\n     *     The Z coordinate to move to.\n     */\n    this.move = function(parent, x, y, z) {\n\n        // Set parent if necessary\n        if (layer.parent !== parent) {\n\n            // Maintain relationship\n            if (layer.parent)\n                delete layer.parent.children[layer.__unique_id];\n            layer.parent = parent;\n            parent.children[layer.__unique_id] = layer;\n\n            // Reparent element\n            var parent_element = parent.getElement();\n            parent_element.appendChild(div);\n\n        }\n\n        // Set location\n        layer.translate(x, y);\n        layer.z = z;\n        div.style.zIndex = z;\n\n    };\n\n    /**\n     * Sets the opacity of this layer to the given value, where 255 is fully\n     * opaque and 0 is fully transparent.\n     * \n     * @param {!number} a\n     *     The opacity to set.\n     */\n    this.shade = function(a) {\n        layer.alpha = a;\n        div.style.opacity = a/255.0;\n    };\n\n    /**\n     * Removes this layer container entirely, such that it is no longer\n     * contained within its parent layer, if any.\n     */\n    this.dispose = function() {\n\n        // Remove from parent container\n        if (layer.parent) {\n            delete layer.parent.children[layer.__unique_id];\n            layer.parent = null;\n        }\n\n        // Remove from parent element\n        if (div.parentNode)\n            div.parentNode.removeChild(div);\n        \n    };\n\n    /**\n     * Applies the given affine transform (defined with six values from the\n     * transform's matrix).\n     *\n     * @param {!number} a\n     *     The first value in the affine transform's matrix.\n     *\n     * @param {!number} b\n     *     The second value in the affine transform's matrix.\n     *\n     * @param {!number} c\n     *     The third value in the affine transform's matrix.\n     *\n     * @param {!number} d\n     *     The fourth value in the affine transform's matrix.\n     *\n     * @param {!number} e\n     *     The fifth value in the affine transform's matrix.\n     *\n     * @param {!number} f\n     *     The sixth value in the affine transform's matrix.\n     */\n    this.distort = function(a, b, c, d, e, f) {\n\n        // Store matrix\n        layer.matrix = [a, b, c, d, e, f];\n\n        // Generate matrix transformation\n        matrix =\n\n            /* a c e\n             * b d f\n             * 0 0 1\n             */\n    \n            \"matrix(\" + a + \",\" + b + \",\" + c + \",\" + d + \",\" + e + \",\" + f + \")\";\n\n        // Set layer transform \n        div.style.transform =\n        div.style.WebkitTransform =\n        div.style.MozTransform =\n        div.style.OTransform =\n        div.style.msTransform =\n\n            translate + \" \" + matrix;\n\n    };\n\n};\n\n/**\n * The next identifier to be assigned to the layer container. This identifier\n * uniquely identifies each VisibleLayer, but is unrelated to the index of\n * the layer, which exists at the protocol/client level only.\n * \n * @private\n * @type {!number}\n */\nGuacamole.Display.VisibleLayer.__next_id = 0;\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar Guacamole = Guacamole || {};\n\n/**\n * An arbitrary event, emitted by a {@link Guacamole.Event.Target}. This object\n * should normally serve as the base class for a different object that is more\n * specific to the event type.\n *\n * @constructor\n * @param {!string} type\n *     The unique name of this event type.\n */\nGuacamole.Event = function Event(type) {\n\n    /**\n     * The unique name of this event type.\n     *\n     * @type {!string}\n     */\n    this.type = type;\n\n    /**\n     * An arbitrary timestamp in milliseconds, indicating this event's\n     * position in time relative to other events.\n     *\n     * @type {!number}\n     */\n    this.timestamp = new Date().getTime();\n\n    /**\n     * Returns the number of milliseconds elapsed since this event was created.\n     *\n     * @return {!number}\n     *     The number of milliseconds elapsed since this event was created.\n     */\n    this.getAge = function getAge() {\n        return new Date().getTime() - this.timestamp;\n    };\n\n    /**\n     * Requests that the legacy event handler associated with this event be\n     * invoked on the given event target. This function will be invoked\n     * automatically by implementations of {@link Guacamole.Event.Target}\n     * whenever {@link Guacamole.Event.Target#emit emit()} is invoked.\n     * <p>\n     * Older versions of Guacamole relied on single event handlers with the\n     * prefix \"on\", such as \"onmousedown\" or \"onkeyup\". If a Guacamole.Event\n     * implementation is replacing the event previously represented by one of\n     * these handlers, this function gives the implementation the opportunity\n     * to provide backward compatibility with the old handler.\n     * <p>\n     * Unless overridden, this function does nothing.\n     *\n     * @param {!Guacamole.Event.Target} eventTarget\n     *     The {@link Guacamole.Event.Target} that emitted this event.\n     */\n    this.invokeLegacyHandler = function invokeLegacyHandler(eventTarget) {\n        // Do nothing\n    };\n\n};\n\n/**\n * A {@link Guacamole.Event} that may relate to one or more DOM events.\n * Continued propagation and default behavior of the related DOM events may be\n * prevented with {@link Guacamole.Event.DOMEvent#stopPropagation stopPropagation()}\n * and {@link Guacamole.Event.DOMEvent#preventDefault preventDefault()}\n * respectively.\n *\n * @constructor\n * @augments Guacamole.Event\n *\n * @param {!string} type\n *     The unique name of this event type.\n *\n * @param {Event|Event[]} [events=[]]\n *     The DOM events that are related to this event, if any. Future calls to\n *     {@link Guacamole.Event.DOMEvent#preventDefault preventDefault()} and\n *     {@link Guacamole.Event.DOMEvent#stopPropagation stopPropagation()} will\n *     affect these events.\n */\nGuacamole.Event.DOMEvent = function DOMEvent(type, events) {\n\n    Guacamole.Event.call(this, type);\n\n    // Default to empty array\n    events = events || [];\n\n    // Automatically wrap non-array single Event in an array\n    if (!Array.isArray(events))\n        events = [ events ];\n\n    /**\n     * Requests that the default behavior of related DOM events be prevented.\n     * Whether this request will be honored by the browser depends on the\n     * nature of those events and the timing of the request.\n     */\n    this.preventDefault = function preventDefault() {\n        events.forEach(function applyPreventDefault(event) {\n            if (event.preventDefault) event.preventDefault();\n            event.returnValue = false;\n        });\n    };\n\n    /**\n     * Stops further propagation of related events through the DOM. Only events\n     * that are directly related to this event will be stopped.\n     */\n    this.stopPropagation = function stopPropagation() {\n        events.forEach(function applyStopPropagation(event) {\n            event.stopPropagation();\n        });\n    };\n\n};\n\n/**\n * Convenience function for cancelling all further processing of a given DOM\n * event. Invoking this function prevents the default behavior of the event and\n * stops any further propagation.\n *\n * @param {!Event} event\n *     The DOM event to cancel.\n */\nGuacamole.Event.DOMEvent.cancelEvent = function cancelEvent(event) {\n    event.stopPropagation();\n    if (event.preventDefault) event.preventDefault();\n    event.returnValue = false;\n};\n\n/**\n * An object which can dispatch {@link Guacamole.Event} objects. Listeners\n * registered with {@link Guacamole.Event.Target#on on()} will automatically\n * be invoked based on the type of {@link Guacamole.Event} passed to\n * {@link Guacamole.Event.Target#dispatch dispatch()}. It is normally\n * subclasses of Guacamole.Event.Target that will dispatch events, and usages\n * of those subclasses that will catch dispatched events with on().\n *\n * @constructor\n */\nGuacamole.Event.Target = function Target() {\n\n    /**\n     * A callback function which handles an event dispatched by an event\n     * target.\n     *\n     * @callback Guacamole.Event.Target~listener\n     * @param {!Guacamole.Event} event\n     *     The event that was dispatched.\n     *\n     * @param {!Guacamole.Event.Target} target\n     *     The object that dispatched the event.\n     */\n\n    /**\n     * All listeners (callback functions) registered for each event type passed\n     * to {@link Guacamole.Event.Targer#on on()}.\n     *\n     * @private\n     * @type {!Object.<string, Guacamole.Event.Target~listener[]>}\n     */\n    var listeners = {};\n\n    /**\n     * Registers a listener for events having the given type, as dictated by\n     * the {@link Guacamole.Event#type type} property of {@link Guacamole.Event}\n     * provided to {@link Guacamole.Event.Target#dispatch dispatch()}.\n     *\n     * @param {!string} type\n     *     The unique name of this event type.\n     *\n     * @param {!Guacamole.Event.Target~listener} listener\n     *     The function to invoke when an event having the given type is\n     *     dispatched. The {@link Guacamole.Event} object provided to\n     *     {@link Guacamole.Event.Target#dispatch dispatch()} will be passed to\n     *     this function, along with the dispatching Guacamole.Event.Target.\n     */\n    this.on = function on(type, listener) {\n\n        var relevantListeners = listeners[type];\n        if (!relevantListeners)\n            listeners[type] = relevantListeners = [];\n\n        relevantListeners.push(listener);\n\n    };\n\n    /**\n     * Registers a listener for events having the given types, as dictated by\n     * the {@link Guacamole.Event#type type} property of {@link Guacamole.Event}\n     * provided to {@link Guacamole.Event.Target#dispatch dispatch()}.\n     * <p>\n     * Invoking this function is equivalent to manually invoking\n     * {@link Guacamole.Event.Target#on on()} for each of the provided types.\n     *\n     * @param {!string[]} types\n     *     The unique names of the event types to associate with the given\n     *     listener.\n     *\n     * @param {!Guacamole.Event.Target~listener} listener\n     *     The function to invoke when an event having any of the given types\n     *     is dispatched. The {@link Guacamole.Event} object provided to\n     *     {@link Guacamole.Event.Target#dispatch dispatch()} will be passed to\n     *     this function, along with the dispatching Guacamole.Event.Target.\n     */\n    this.onEach = function onEach(types, listener) {\n        types.forEach(function addListener(type) {\n            this.on(type, listener);\n        }, this);\n    };\n\n    /**\n     * Dispatches the given event, invoking all event handlers registered with\n     * this Guacamole.Event.Target for that event's\n     * {@link Guacamole.Event#type type}.\n     *\n     * @param {!Guacamole.Event} event\n     *     The event to dispatch.\n     */\n    this.dispatch = function dispatch(event) {\n\n        // Invoke any relevant legacy handler for the event\n        event.invokeLegacyHandler(this);\n\n        // Invoke all registered listeners\n        var relevantListeners = listeners[event.type];\n        if (relevantListeners) {\n            for (var i = 0; i < relevantListeners.length; i++) {\n                relevantListeners[i](event, this);\n            }\n        }\n\n    };\n\n    /**\n     * Unregisters a listener that was previously registered with\n     * {@link Guacamole.Event.Target#on on()} or\n     * {@link Guacamole.Event.Target#onEach onEach()}. If no such listener was\n     * registered, this function has no effect. If multiple copies of the same\n     * listener were registered, the first listener still registered will be\n     * removed.\n     *\n     * @param {!string} type\n     *     The unique name of the event type handled by the listener being\n     *     removed.\n     *\n     * @param {!Guacamole.Event.Target~listener} listener\n     *     The listener function previously provided to\n     *     {@link Guacamole.Event.Target#on on()}or\n     *     {@link Guacamole.Event.Target#onEach onEach()}.\n     *\n     * @returns {!boolean}\n     *     true if the specified listener was removed, false otherwise.\n     */\n    this.off = function off(type, listener) {\n\n        var relevantListeners = listeners[type];\n        if (!relevantListeners)\n            return false;\n\n        for (var i = 0; i < relevantListeners.length; i++) {\n            if (relevantListeners[i] === listener) {\n                relevantListeners.splice(i, 1);\n                return true;\n            }\n        }\n\n        return false;\n\n    };\n\n    /**\n     * Unregisters listeners that were previously registered with\n     * {@link Guacamole.Event.Target#on on()} or\n     * {@link Guacamole.Event.Target#onEach onEach()}. If no such listeners\n     * were registered, this function has no effect. If multiple copies of the\n     * same listener were registered for the same event type, the first\n     * listener still registered will be removed.\n     * <p>\n     * Invoking this function is equivalent to manually invoking\n     * {@link Guacamole.Event.Target#off off()} for each of the provided types.\n     *\n     * @param {!string[]} types\n     *     The unique names of the event types handled by the listeners being\n     *     removed.\n     *\n     * @param {!Guacamole.Event.Target~listener} listener\n     *     The listener function previously provided to\n     *     {@link Guacamole.Event.Target#on on()} or\n     *     {@link Guacamole.Event.Target#onEach onEach()}.\n     *\n     * @returns {!boolean}\n     *     true if any of the specified listeners were removed, false\n     *     otherwise.\n     */\n    this.offEach = function offEach(types, listener) {\n\n        var changed = false;\n\n        types.forEach(function removeListener(type) {\n            changed |= this.off(type, listener);\n        }, this);\n\n        return changed;\n\n    };\n\n};\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar Guacamole = Guacamole || {};\n\n/**\n * A hidden input field which attempts to keep itself focused at all times,\n * except when another input field has been intentionally focused, whether\n * programatically or by the user. The actual underlying input field, returned\n * by getElement(), may be used as a reliable source of keyboard-related events,\n * particularly composition and input events which may require a focused input\n * field to be dispatched at all.\n *\n * @constructor\n */\nGuacamole.InputSink = function InputSink() {\n\n    /**\n     * Reference to this instance of Guacamole.InputSink.\n     *\n     * @private\n     * @type {!Guacamole.InputSink}\n     */\n    var sink = this;\n\n    /**\n     * The underlying input field, styled to be invisible.\n     *\n     * @private\n     * @type {!Element}\n     */\n    var field = document.createElement('textarea');\n    field.style.position   = 'fixed';\n    field.style.outline    = 'none';\n    field.style.border     = 'none';\n    field.style.margin     = '0';\n    field.style.padding    = '0';\n    field.style.height     = '0';\n    field.style.width      = '0';\n    field.style.left       = '0';\n    field.style.bottom     = '0';\n    field.style.resize     = 'none';\n    field.style.background = 'transparent';\n    field.style.color      = 'transparent';\n\n    // Keep field clear when modified via normal keypresses\n    field.addEventListener(\"keypress\", function clearKeypress(e) {\n        field.value = '';\n    }, false);\n\n    // Keep field clear when modofied via composition events\n    field.addEventListener(\"compositionend\", function clearCompletedComposition(e) {\n        if (e.data)\n            field.value = '';\n    }, false);\n\n    // Keep field clear when modofied via input events\n    field.addEventListener(\"input\", function clearCompletedInput(e) {\n        if (e.data && !e.isComposing)\n            field.value = '';\n    }, false);\n\n    // Whenever focus is gained, automatically click to ensure cursor is\n    // actually placed within the field (the field may simply be highlighted or\n    // outlined otherwise)\n    field.addEventListener(\"focus\", function focusReceived() {\n        window.setTimeout(function deferRefocus() {\n            field.click();\n            field.select();\n        }, 0);\n    }, true);\n\n    /**\n     * Attempts to focus the underlying input field. The focus attempt occurs\n     * asynchronously, and may silently fail depending on browser restrictions.\n     */\n    this.focus = function focus() {\n        window.setTimeout(function deferRefocus() {\n            field.focus(); // Focus must be deferred to work reliably across browsers\n        }, 0);\n    };\n\n    /**\n     * Returns the underlying input field. This input field MUST be manually\n     * added to the DOM for the Guacamole.InputSink to have any effect.\n     *\n     * @returns {!Element}\n     *     The underlying input field.\n     */\n    this.getElement = function getElement() {\n        return field;\n    };\n\n    // Automatically refocus input sink if part of DOM\n    document.addEventListener(\"keydown\", function refocusSink(e) {\n\n        // Do not refocus if focus is on an input field\n        var focused = document.activeElement;\n        if (focused && focused !== document.body) {\n\n            // Only consider focused input fields which are actually visible\n            var rect = focused.getBoundingClientRect();\n            if (rect.left + rect.width > 0 && rect.top + rect.height > 0)\n                return;\n\n        }\n\n        // Refocus input sink instead of handling click\n        sink.focus();\n\n    }, true);\n\n};\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar Guacamole = Guacamole || {};\n\n/**\n * An input stream abstraction used by the Guacamole client to facilitate\n * transfer of files or other binary data.\n * \n * @constructor\n * @param {!Guacamole.Client} client\n *     The client owning this stream.\n *\n * @param {!number} index\n *     The index of this stream.\n */\nGuacamole.InputStream = function(client, index) {\n\n    /**\n     * Reference to this stream.\n     *\n     * @private\n     * @type {!Guacamole.InputStream}\n     */\n    var guac_stream = this;\n\n    /**\n     * The index of this stream.\n     *\n     * @type {!number}\n     */\n    this.index = index;\n\n    /**\n     * Called when a blob of data is received.\n     * \n     * @event\n     * @param {!string} data\n     *     The received base64 data.\n     */\n    this.onblob = null;\n\n    /**\n     * Called when this stream is closed.\n     * \n     * @event\n     */\n    this.onend = null;\n\n    /**\n     * Acknowledges the receipt of a blob.\n     * \n     * @param {!string} message\n     *     A human-readable message describing the error or status.\n     *\n     * @param {!number} code\n     *     The error code, if any, or 0 for success.\n     */\n    this.sendAck = function(message, code) {\n        client.sendAck(guac_stream.index, message, code);\n    };\n\n};\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar Guacamole = Guacamole || {};\n\n/**\n * Integer pool which returns consistently increasing integers while integers\n * are in use, and previously-used integers when possible.\n * @constructor \n */\nGuacamole.IntegerPool = function() {\n\n    /**\n     * Reference to this integer pool.\n     *\n     * @private\n     */\n    var guac_pool = this;\n\n    /**\n     * Array of available integers.\n     *\n     * @private\n     * @type {!number[]}\n     */\n    var pool = [];\n\n    /**\n     * The next integer to return if no more integers remain.\n     *\n     * @type {!number}\n     */\n    this.next_int = 0;\n\n    /**\n     * Returns the next available integer in the pool. If possible, a previously\n     * used integer will be returned.\n     * \n     * @return {!number}\n     *     The next available integer.\n     */\n    this.next = function() {\n\n        // If free'd integers exist, return one of those\n        if (pool.length > 0)\n            return pool.shift();\n\n        // Otherwise, return a new integer\n        return guac_pool.next_int++;\n\n    };\n\n    /**\n     * Frees the given integer, allowing it to be reused.\n     * \n     * @param {!number} integer\n     *     The integer to free.\n     */\n    this.free = function(integer) {\n        pool.push(integer);\n    };\n\n};\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar Guacamole = Guacamole || {};\n\n/**\n * A reader which automatically handles the given input stream, assembling all\n * received blobs into a JavaScript object by appending them to each other, in\n * order, and decoding the result as JSON. Note that this object will overwrite\n * any installed event handlers on the given Guacamole.InputStream.\n * \n * @constructor\n * @param {Guacamole.InputStream} stream\n *     The stream that JSON will be read from.\n */\nGuacamole.JSONReader = function guacamoleJSONReader(stream) {\n\n    /**\n     * Reference to this Guacamole.JSONReader.\n     *\n     * @private\n     * @type {!Guacamole.JSONReader}\n     */\n    var guacReader = this;\n\n    /**\n     * Wrapped Guacamole.StringReader.\n     *\n     * @private\n     * @type {!Guacamole.StringReader}\n     */\n    var stringReader = new Guacamole.StringReader(stream);\n\n    /**\n     * All JSON read thus far.\n     *\n     * @private\n     * @type {!string}\n     */\n    var json = '';\n\n    /**\n     * Returns the current length of this Guacamole.JSONReader, in characters.\n     *\n     * @return {!number}\n     *     The current length of this Guacamole.JSONReader.\n     */\n    this.getLength = function getLength() {\n        return json.length;\n    };\n\n    /**\n     * Returns the contents of this Guacamole.JSONReader as a JavaScript\n     * object.\n     *\n     * @return {object}\n     *     The contents of this Guacamole.JSONReader, as parsed from the JSON\n     *     contents of the input stream.\n     */\n    this.getJSON = function getJSON() {\n        return JSON.parse(json);\n    };\n\n    // Append all received text\n    stringReader.ontext = function ontext(text) {\n\n        // Append received text\n        json += text;\n\n        // Call handler, if present\n        if (guacReader.onprogress)\n            guacReader.onprogress(text.length);\n\n    };\n\n    // Simply call onend when end received\n    stringReader.onend = function onend() {\n        if (guacReader.onend)\n            guacReader.onend();\n    };\n\n    /**\n     * Fired once for every blob of data received.\n     * \n     * @event\n     * @param {!number} length\n     *     The number of characters received.\n     */\n    this.onprogress = null;\n\n    /**\n     * Fired once this stream is finished and no further data will be written.\n     *\n     * @event\n     */\n    this.onend = null;\n\n};\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar Guacamole = Guacamole || {};\n\n/**\n * Provides cross-browser and cross-keyboard keyboard for a specific element.\n * Browser and keyboard layout variation is abstracted away, providing events\n * which represent keys as their corresponding X11 keysym.\n * \n * @constructor\n * @param {Element|Document} [element]\n *    The Element to use to provide keyboard events. If omitted, at least one\n *    Element must be manually provided through the listenTo() function for\n *    the Guacamole.Keyboard instance to have any effect.\n */\nGuacamole.Keyboard = function Keyboard(element) {\n\n    /**\n     * Reference to this Guacamole.Keyboard.\n     *\n     * @private\n     * @type {!Guacamole.Keyboard}\n     */\n    var guac_keyboard = this;\n\n    /**\n     * An integer value which uniquely identifies this Guacamole.Keyboard\n     * instance with respect to other Guacamole.Keyboard instances.\n     *\n     * @private\n     * @type {!number}\n     */\n    var guacKeyboardID = Guacamole.Keyboard._nextID++;\n\n    /**\n     * The name of the property which is added to event objects via markEvent()\n     * to note that they have already been handled by this Guacamole.Keyboard.\n     *\n     * @private\n     * @constant\n     * @type {!string}\n     */\n    var EVENT_MARKER = '_GUAC_KEYBOARD_HANDLED_BY_' + guacKeyboardID;\n\n    /**\n     * Fired whenever the user presses a key with the element associated\n     * with this Guacamole.Keyboard in focus.\n     * \n     * @event\n     * @param {!number} keysym\n     *     The keysym of the key being pressed.\n     *\n     * @return {!boolean}\n     *     true if the key event should be allowed through to the browser,\n     *     false otherwise.\n     */\n    this.onkeydown = null;\n\n    /**\n     * Fired whenever the user releases a key with the element associated\n     * with this Guacamole.Keyboard in focus.\n     * \n     * @event\n     * @param {!number} keysym\n     *     The keysym of the key being released.\n     */\n    this.onkeyup = null;\n\n    /**\n     * Set of known platform-specific or browser-specific quirks which must be\n     * accounted for to properly interpret key events, even if the only way to\n     * reliably detect that quirk is to platform/browser-sniff.\n     *\n     * @private\n     * @type {!Object.<string, boolean>}\n     */\n    var quirks = {\n\n        /**\n         * Whether keyup events are universally unreliable.\n         *\n         * @type {!boolean}\n         */\n        keyupUnreliable: false,\n\n        /**\n         * Whether the Alt key is actually a modifier for typable keys and is\n         * thus never used for keyboard shortcuts.\n         *\n         * @type {!boolean}\n         */\n        altIsTypableOnly: false,\n\n        /**\n         * Whether we can rely on receiving a keyup event for the Caps Lock\n         * key.\n         *\n         * @type {!boolean}\n         */\n        capsLockKeyupUnreliable: false\n\n    };\n\n    // Set quirk flags depending on platform/browser, if such information is\n    // available\n    if (navigator && navigator.platform) {\n\n        // All keyup events are unreliable on iOS (sadly)\n        if (navigator.platform.match(/ipad|iphone|ipod/i))\n            quirks.keyupUnreliable = true;\n\n        // The Alt key on Mac is never used for keyboard shortcuts, and the\n        // Caps Lock key never dispatches keyup events\n        else if (navigator.platform.match(/^mac/i)) {\n            quirks.altIsTypableOnly = true;\n            quirks.capsLockKeyupUnreliable = true;\n        }\n\n    }\n\n    /**\n     * A key event having a corresponding timestamp. This event is non-specific.\n     * Its subclasses should be used instead when recording specific key\n     * events.\n     *\n     * @private\n     * @constructor\n     * @param {KeyboardEvent} [orig]\n     *     The relevant DOM keyboard event.\n     */\n    var KeyEvent = function KeyEvent(orig) {\n\n        /**\n         * Reference to this key event.\n         *\n         * @private\n         * @type {!KeyEvent}\n         */\n        var key_event = this;\n\n        /**\n         * The JavaScript key code of the key pressed. For most events (keydown\n         * and keyup), this is a scancode-like value related to the position of\n         * the key on the US English \"Qwerty\" keyboard. For keypress events, \n         * this is the Unicode codepoint of the character that would be typed\n         * by the key pressed.\n         *\n         * @type {!number}\n         */\n        this.keyCode = orig ? (orig.which || orig.keyCode) : 0;\n\n        /**\n         * The legacy DOM3 \"keyIdentifier\" of the key pressed, as defined at:\n         * http://www.w3.org/TR/2009/WD-DOM-Level-3-Events-20090908/#events-Events-KeyboardEvent\n         *\n         * @type {!string}\n         */\n        this.keyIdentifier = orig && orig.keyIdentifier;\n\n        /**\n         * The standard name of the key pressed, as defined at:\n         * http://www.w3.org/TR/DOM-Level-3-Events/#events-KeyboardEvent\n         * \n         * @type {!string}\n         */\n        this.key = orig && orig.key;\n\n        /**\n         * The location on the keyboard corresponding to the key pressed, as\n         * defined at:\n         * http://www.w3.org/TR/DOM-Level-3-Events/#events-KeyboardEvent\n         * \n         * @type {!number}\n         */\n        this.location = orig ? getEventLocation(orig) : 0;\n\n        /**\n         * The state of all local keyboard modifiers at the time this event was\n         * received.\n         *\n         * @type {!Guacamole.Keyboard.ModifierState}\n         */\n        this.modifiers = orig ? Guacamole.Keyboard.ModifierState.fromKeyboardEvent(orig) : new Guacamole.Keyboard.ModifierState();\n\n        /**\n         * An arbitrary timestamp in milliseconds, indicating this event's\n         * position in time relative to other events.\n         *\n         * @type {!number}\n         */\n        this.timestamp = new Date().getTime();\n\n        /**\n         * Whether the default action of this key event should be prevented.\n         *\n         * @type {!boolean}\n         */\n        this.defaultPrevented = false;\n\n        /**\n         * The keysym of the key associated with this key event, as determined\n         * by a best-effort guess using available event properties and keyboard\n         * state.\n         *\n         * @type {number}\n         */\n        this.keysym = null;\n\n        /**\n         * Whether the keysym value of this key event is known to be reliable.\n         * If false, the keysym may still be valid, but it's only a best guess,\n         * and future key events may be a better source of information.\n         *\n         * @type {!boolean}\n         */\n        this.reliable = false;\n\n        /**\n         * Returns the number of milliseconds elapsed since this event was\n         * received.\n         *\n         * @return {!number}\n         *     The number of milliseconds elapsed since this event was\n         *     received.\n         */\n        this.getAge = function() {\n            return new Date().getTime() - key_event.timestamp;\n        };\n\n    };\n\n    /**\n     * Information related to the pressing of a key, which need not be a key\n     * associated with a printable character. The presence or absence of any\n     * information within this object is browser-dependent.\n     *\n     * @private\n     * @constructor\n     * @augments Guacamole.Keyboard.KeyEvent\n     * @param {!KeyboardEvent} orig\n     *     The relevant DOM \"keydown\" event.\n     */\n    var KeydownEvent = function KeydownEvent(orig) {\n\n        // We extend KeyEvent\n        KeyEvent.call(this, orig);\n\n        // If key is known from keyCode or DOM3 alone, use that\n        this.keysym =  keysym_from_key_identifier(this.key, this.location)\n                    || keysym_from_keycode(this.keyCode, this.location);\n\n        /**\n         * Whether the keyup following this keydown event is known to be\n         * reliable. If false, we cannot rely on the keyup event to occur.\n         *\n         * @type {!boolean}\n         */\n        this.keyupReliable = !quirks.keyupUnreliable;\n\n        // DOM3 and keyCode are reliable sources if the corresponding key is\n        // not a printable key\n        if (this.keysym && !isPrintable(this.keysym))\n            this.reliable = true;\n\n        // Use legacy keyIdentifier as a last resort, if it looks sane\n        if (!this.keysym && key_identifier_sane(this.keyCode, this.keyIdentifier))\n            this.keysym = keysym_from_key_identifier(this.keyIdentifier, this.location, this.modifiers.shift);\n\n        // If a key is pressed while meta is held down, the keyup will\n        // never be sent in Chrome (bug #108404)\n        if (this.modifiers.meta && this.keysym !== 0xFFE7 && this.keysym !== 0xFFE8)\n            this.keyupReliable = false;\n\n        // We cannot rely on receiving keyup for Caps Lock on certain platforms\n        else if (this.keysym === 0xFFE5 && quirks.capsLockKeyupUnreliable)\n            this.keyupReliable = false;\n\n        // Determine whether default action for Alt+combinations must be prevented\n        var prevent_alt = !this.modifiers.ctrl && !quirks.altIsTypableOnly;\n\n        // Determine whether default action for Ctrl+combinations must be prevented\n        var prevent_ctrl = !this.modifiers.alt;\n\n        // We must rely on the (potentially buggy) keyIdentifier if preventing\n        // the default action is important\n        if ((prevent_ctrl && this.modifiers.ctrl)\n         || (prevent_alt  && this.modifiers.alt)\n         || this.modifiers.meta\n         || this.modifiers.hyper)\n            this.reliable = true;\n\n        // Record most recently known keysym by associated key code\n        recentKeysym[this.keyCode] = this.keysym;\n\n    };\n\n    KeydownEvent.prototype = new KeyEvent();\n\n    /**\n     * Information related to the pressing of a key, which MUST be\n     * associated with a printable character. The presence or absence of any\n     * information within this object is browser-dependent.\n     *\n     * @private\n     * @constructor\n     * @augments Guacamole.Keyboard.KeyEvent\n     * @param {!KeyboardEvent} orig\n     *     The relevant DOM \"keypress\" event.\n     */\n    var KeypressEvent = function KeypressEvent(orig) {\n\n        // We extend KeyEvent\n        KeyEvent.call(this, orig);\n\n        // Pull keysym from char code\n        this.keysym = keysym_from_charcode(this.keyCode);\n\n        // Keypress is always reliable\n        this.reliable = true;\n\n    };\n\n    KeypressEvent.prototype = new KeyEvent();\n\n    /**\n     * Information related to the releasing of a key, which need not be a key\n     * associated with a printable character. The presence or absence of any\n     * information within this object is browser-dependent.\n     *\n     * @private\n     * @constructor\n     * @augments Guacamole.Keyboard.KeyEvent\n     * @param {!KeyboardEvent} orig\n     *     The relevant DOM \"keyup\" event.\n     */\n    var KeyupEvent = function KeyupEvent(orig) {\n\n        // We extend KeyEvent\n        KeyEvent.call(this, orig);\n\n        // If key is known from keyCode or DOM3 alone, use that (keyCode is\n        // still more reliable for keyup when dead keys are in use)\n        this.keysym =  keysym_from_keycode(this.keyCode, this.location)\n                    || keysym_from_key_identifier(this.key, this.location);\n\n        // Fall back to the most recently pressed keysym associated with the\n        // keyCode if the inferred key doesn't seem to actually be pressed\n        if (!guac_keyboard.pressed[this.keysym])\n            this.keysym = recentKeysym[this.keyCode] || this.keysym;\n\n        // Keyup is as reliable as it will ever be\n        this.reliable = true;\n\n    };\n\n    KeyupEvent.prototype = new KeyEvent();\n\n    /**\n     * An array of recorded events, which can be instances of the private\n     * KeydownEvent, KeypressEvent, and KeyupEvent classes.\n     *\n     * @private\n     * @type {!KeyEvent[]}\n     */\n    var eventLog = [];\n\n    /**\n     * Map of known JavaScript keycodes which do not map to typable characters\n     * to their X11 keysym equivalents.\n     *\n     * @private\n     * @type {!Object.<number, number[]>}\n     */\n    var keycodeKeysyms = {\n        8:   [0xFF08], // backspace\n        9:   [0xFF09], // tab\n        12:  [0xFF0B, 0xFF0B, 0xFF0B, 0xFFB5], // clear       / KP 5\n        13:  [0xFF0D], // enter\n        16:  [0xFFE1, 0xFFE1, 0xFFE2], // shift\n        17:  [0xFFE3, 0xFFE3, 0xFFE4], // ctrl\n        18:  [0xFFE9, 0xFFE9, 0xFE03], // alt\n        19:  [0xFF13], // pause/break\n        20:  [0xFFE5], // caps lock\n        27:  [0xFF1B], // escape\n        32:  [0x0020], // space\n        33:  [0xFF55, 0xFF55, 0xFF55, 0xFFB9], // page up     / KP 9\n        34:  [0xFF56, 0xFF56, 0xFF56, 0xFFB3], // page down   / KP 3\n        35:  [0xFF57, 0xFF57, 0xFF57, 0xFFB1], // end         / KP 1\n        36:  [0xFF50, 0xFF50, 0xFF50, 0xFFB7], // home        / KP 7\n        37:  [0xFF51, 0xFF51, 0xFF51, 0xFFB4], // left arrow  / KP 4\n        38:  [0xFF52, 0xFF52, 0xFF52, 0xFFB8], // up arrow    / KP 8\n        39:  [0xFF53, 0xFF53, 0xFF53, 0xFFB6], // right arrow / KP 6\n        40:  [0xFF54, 0xFF54, 0xFF54, 0xFFB2], // down arrow  / KP 2\n        45:  [0xFF63, 0xFF63, 0xFF63, 0xFFB0], // insert      / KP 0\n        46:  [0xFFFF, 0xFFFF, 0xFFFF, 0xFFAE], // delete      / KP decimal\n        91:  [0xFFE7], // left windows/command key (meta_l)\n        92:  [0xFFE8], // right window/command key (meta_r)\n        93:  [0xFF67], // menu key\n        96:  [0xFFB0], // KP 0\n        97:  [0xFFB1], // KP 1\n        98:  [0xFFB2], // KP 2\n        99:  [0xFFB3], // KP 3\n        100: [0xFFB4], // KP 4\n        101: [0xFFB5], // KP 5\n        102: [0xFFB6], // KP 6\n        103: [0xFFB7], // KP 7\n        104: [0xFFB8], // KP 8\n        105: [0xFFB9], // KP 9\n        106: [0xFFAA], // KP multiply\n        107: [0xFFAB], // KP add\n        109: [0xFFAD], // KP subtract\n        110: [0xFFAE], // KP decimal\n        111: [0xFFAF], // KP divide\n        112: [0xFFBE], // f1\n        113: [0xFFBF], // f2\n        114: [0xFFC0], // f3\n        115: [0xFFC1], // f4\n        116: [0xFFC2], // f5\n        117: [0xFFC3], // f6\n        118: [0xFFC4], // f7\n        119: [0xFFC5], // f8\n        120: [0xFFC6], // f9\n        121: [0xFFC7], // f10\n        122: [0xFFC8], // f11\n        123: [0xFFC9], // f12\n        144: [0xFF7F], // num lock\n        145: [0xFF14], // scroll lock\n        225: [0xFE03]  // altgraph (iso_level3_shift)\n    };\n\n    /**\n     * Map of known JavaScript keyidentifiers which do not map to typable\n     * characters to their unshifted X11 keysym equivalents.\n     *\n     * @private\n     * @type {!Object.<string, number[]>}\n     */\n    var keyidentifier_keysym = {\n        \"Again\": [0xFF66],\n        \"AllCandidates\": [0xFF3D],\n        \"Alphanumeric\": [0xFF30],\n        \"Alt\": [0xFFE9, 0xFFE9, 0xFE03],\n        \"Attn\": [0xFD0E],\n        \"AltGraph\": [0xFE03],\n        \"ArrowDown\": [0xFF54],\n        \"ArrowLeft\": [0xFF51],\n        \"ArrowRight\": [0xFF53],\n        \"ArrowUp\": [0xFF52],\n        \"Backspace\": [0xFF08],\n        \"CapsLock\": [0xFFE5],\n        \"Cancel\": [0xFF69],\n        \"Clear\": [0xFF0B],\n        \"Convert\": [0xFF21],\n        \"Copy\": [0xFD15],\n        \"Crsel\": [0xFD1C],\n        \"CrSel\": [0xFD1C],\n        \"CodeInput\": [0xFF37],\n        \"Compose\": [0xFF20],\n        \"Control\": [0xFFE3, 0xFFE3, 0xFFE4],\n        \"ContextMenu\": [0xFF67],\n        \"Delete\": [0xFFFF],\n        \"Down\": [0xFF54],\n        \"End\": [0xFF57],\n        \"Enter\": [0xFF0D],\n        \"EraseEof\": [0xFD06],\n        \"Escape\": [0xFF1B],\n        \"Execute\": [0xFF62],\n        \"Exsel\": [0xFD1D],\n        \"ExSel\": [0xFD1D],\n        \"F1\": [0xFFBE],\n        \"F2\": [0xFFBF],\n        \"F3\": [0xFFC0],\n        \"F4\": [0xFFC1],\n        \"F5\": [0xFFC2],\n        \"F6\": [0xFFC3],\n        \"F7\": [0xFFC4],\n        \"F8\": [0xFFC5],\n        \"F9\": [0xFFC6],\n        \"F10\": [0xFFC7],\n        \"F11\": [0xFFC8],\n        \"F12\": [0xFFC9],\n        \"F13\": [0xFFCA],\n        \"F14\": [0xFFCB],\n        \"F15\": [0xFFCC],\n        \"F16\": [0xFFCD],\n        \"F17\": [0xFFCE],\n        \"F18\": [0xFFCF],\n        \"F19\": [0xFFD0],\n        \"F20\": [0xFFD1],\n        \"F21\": [0xFFD2],\n        \"F22\": [0xFFD3],\n        \"F23\": [0xFFD4],\n        \"F24\": [0xFFD5],\n        \"Find\": [0xFF68],\n        \"GroupFirst\": [0xFE0C],\n        \"GroupLast\": [0xFE0E],\n        \"GroupNext\": [0xFE08],\n        \"GroupPrevious\": [0xFE0A],\n        \"FullWidth\": null,\n        \"HalfWidth\": null,\n        \"HangulMode\": [0xFF31],\n        \"Hankaku\": [0xFF29],\n        \"HanjaMode\": [0xFF34],\n        \"Help\": [0xFF6A],\n        \"Hiragana\": [0xFF25],\n        \"HiraganaKatakana\": [0xFF27],\n        \"Home\": [0xFF50],\n        \"Hyper\": [0xFFED, 0xFFED, 0xFFEE],\n        \"Insert\": [0xFF63],\n        \"JapaneseHiragana\": [0xFF25],\n        \"JapaneseKatakana\": [0xFF26],\n        \"JapaneseRomaji\": [0xFF24],\n        \"JunjaMode\": [0xFF38],\n        \"KanaMode\": [0xFF2D],\n        \"KanjiMode\": [0xFF21],\n        \"Katakana\": [0xFF26],\n        \"Left\": [0xFF51],\n        \"Meta\": [0xFFE7, 0xFFE7, 0xFFE8],\n        \"ModeChange\": [0xFF7E],\n        \"NumLock\": [0xFF7F],\n        \"PageDown\": [0xFF56],\n        \"PageUp\": [0xFF55],\n        \"Pause\": [0xFF13],\n        \"Play\": [0xFD16],\n        \"PreviousCandidate\": [0xFF3E],\n        \"PrintScreen\": [0xFF61],\n        \"Redo\": [0xFF66],\n        \"Right\": [0xFF53],\n        \"RomanCharacters\": null,\n        \"Scroll\": [0xFF14],\n        \"Select\": [0xFF60],\n        \"Separator\": [0xFFAC],\n        \"Shift\": [0xFFE1, 0xFFE1, 0xFFE2],\n        \"SingleCandidate\": [0xFF3C],\n        \"Super\": [0xFFEB, 0xFFEB, 0xFFEC],\n        \"Tab\": [0xFF09],\n        \"UIKeyInputDownArrow\": [0xFF54],\n        \"UIKeyInputEscape\": [0xFF1B],\n        \"UIKeyInputLeftArrow\": [0xFF51],\n        \"UIKeyInputRightArrow\": [0xFF53],\n        \"UIKeyInputUpArrow\": [0xFF52],\n        \"Up\": [0xFF52],\n        \"Undo\": [0xFF65],\n        \"Win\": [0xFFE7, 0xFFE7, 0xFFE8],\n        \"Zenkaku\": [0xFF28],\n        \"ZenkakuHankaku\": [0xFF2A]\n    };\n\n    /**\n     * All keysyms which should not repeat when held down.\n     *\n     * @private\n     * @type {!Object.<number, boolean>}\n     */\n    var no_repeat = {\n        0xFE03: true, // ISO Level 3 Shift (AltGr)\n        0xFFE1: true, // Left shift\n        0xFFE2: true, // Right shift\n        0xFFE3: true, // Left ctrl \n        0xFFE4: true, // Right ctrl \n        0xFFE5: true, // Caps Lock\n        0xFFE7: true, // Left meta \n        0xFFE8: true, // Right meta \n        0xFFE9: true, // Left alt\n        0xFFEA: true, // Right alt\n        0xFFEB: true, // Left super/hyper\n        0xFFEC: true  // Right super/hyper\n    };\n\n    /**\n     * All modifiers and their states.\n     *\n     * @type {!Guacamole.Keyboard.ModifierState}\n     */\n    this.modifiers = new Guacamole.Keyboard.ModifierState();\n        \n    /**\n     * The state of every key, indexed by keysym. If a particular key is\n     * pressed, the value of pressed for that keysym will be true. If a key\n     * is not currently pressed, it will not be defined. \n     *\n     * @type {!Object.<number, boolean>}\n     */\n    this.pressed = {};\n\n    /**\n     * The state of every key, indexed by keysym, for strictly those keys whose\n     * status has been indirectly determined thorugh observation of other key\n     * events. If a particular key is implicitly pressed, the value of\n     * implicitlyPressed for that keysym will be true. If a key\n     * is not currently implicitly pressed (the key is not pressed OR the state\n     * of the key is explicitly known), it will not be defined.\n     *\n     * @private\n     * @type {!Object.<number, boolean>}\n     */\n    var implicitlyPressed = {};\n\n    /**\n     * The last result of calling the onkeydown handler for each key, indexed\n     * by keysym. This is used to prevent/allow default actions for key events,\n     * even when the onkeydown handler cannot be called again because the key\n     * is (theoretically) still pressed.\n     *\n     * @private\n     * @type {!Object.<number, boolean>}\n     */\n    var last_keydown_result = {};\n\n    /**\n     * The keysym most recently associated with a given keycode when keydown\n     * fired. This object maps keycodes to keysyms.\n     *\n     * @private\n     * @type {!Object.<number, number>}\n     */\n    var recentKeysym = {};\n\n    /**\n     * Timeout before key repeat starts.\n     *\n     * @private\n     * @type {number}\n     */\n    var key_repeat_timeout = null;\n\n    /**\n     * Interval which presses and releases the last key pressed while that\n     * key is still being held down.\n     *\n     * @private\n     * @type {number}\n     */\n    var key_repeat_interval = null;\n\n    /**\n     * Given an array of keysyms indexed by location, returns the keysym\n     * for the given location, or the keysym for the standard location if\n     * undefined.\n     * \n     * @private\n     * @param {number[]} keysyms\n     *     An array of keysyms, where the index of the keysym in the array is\n     *     the location value.\n     *\n     * @param {!number} location\n     *     The location on the keyboard corresponding to the key pressed, as\n     *     defined at: http://www.w3.org/TR/DOM-Level-3-Events/#events-KeyboardEvent\n     */\n    var get_keysym = function get_keysym(keysyms, location) {\n\n        if (!keysyms)\n            return null;\n\n        return keysyms[location] || keysyms[0];\n    };\n\n    /**\n     * Returns true if the given keysym corresponds to a printable character,\n     * false otherwise.\n     *\n     * @param {!number} keysym\n     *     The keysym to check.\n     *\n     * @returns {!boolean}\n     *     true if the given keysym corresponds to a printable character,\n     *     false otherwise.\n     */\n    var isPrintable = function isPrintable(keysym) {\n\n        // Keysyms with Unicode equivalents are printable\n        return (keysym >= 0x00 && keysym <= 0xFF)\n            || (keysym & 0xFFFF0000) === 0x01000000;\n\n    };\n\n    function keysym_from_key_identifier(identifier, location, shifted) {\n\n        if (!identifier)\n            return null;\n\n        var typedCharacter;\n\n        // If identifier is U+xxxx, decode Unicode character \n        var unicodePrefixLocation = identifier.indexOf(\"U+\");\n        if (unicodePrefixLocation >= 0) {\n            var hex = identifier.substring(unicodePrefixLocation+2);\n            typedCharacter = String.fromCharCode(parseInt(hex, 16));\n        }\n\n        // If single character and not keypad, use that as typed character\n        else if (identifier.length === 1 && location !== 3)\n            typedCharacter = identifier;\n\n        // Otherwise, look up corresponding keysym\n        else\n            return get_keysym(keyidentifier_keysym[identifier], location);\n\n        // Alter case if necessary\n        if (shifted === true)\n            typedCharacter = typedCharacter.toUpperCase();\n        else if (shifted === false)\n            typedCharacter = typedCharacter.toLowerCase();\n\n        // Get codepoint\n        var codepoint = typedCharacter.charCodeAt(0);\n        return keysym_from_charcode(codepoint);\n\n    }\n\n    function isControlCharacter(codepoint) {\n        return codepoint <= 0x1F || (codepoint >= 0x7F && codepoint <= 0x9F);\n    }\n\n    function keysym_from_charcode(codepoint) {\n\n        // Keysyms for control characters\n        if (isControlCharacter(codepoint)) return 0xFF00 | codepoint;\n\n        // Keysyms for ASCII chars\n        if (codepoint >= 0x0000 && codepoint <= 0x00FF)\n            return codepoint;\n\n        // Keysyms for Unicode\n        if (codepoint >= 0x0100 && codepoint <= 0x10FFFF)\n            return 0x01000000 | codepoint;\n\n        return null;\n\n    }\n\n    function keysym_from_keycode(keyCode, location) {\n        return get_keysym(keycodeKeysyms[keyCode], location);\n    }\n\n    /**\n     * Heuristically detects if the legacy keyIdentifier property of\n     * a keydown/keyup event looks incorrectly derived. Chrome, and\n     * presumably others, will produce the keyIdentifier by assuming\n     * the keyCode is the Unicode codepoint for that key. This is not\n     * correct in all cases.\n     *\n     * @private\n     * @param {!number} keyCode\n     *     The keyCode from a browser keydown/keyup event.\n     *\n     * @param {string} keyIdentifier\n     *     The legacy keyIdentifier from a browser keydown/keyup event.\n     *\n     * @returns {!boolean}\n     *     true if the keyIdentifier looks sane, false if the keyIdentifier\n     *     appears incorrectly derived or is missing entirely.\n     */\n    var key_identifier_sane = function key_identifier_sane(keyCode, keyIdentifier) {\n\n        // Missing identifier is not sane\n        if (!keyIdentifier)\n            return false;\n\n        // Assume non-Unicode keyIdentifier values are sane\n        var unicodePrefixLocation = keyIdentifier.indexOf(\"U+\");\n        if (unicodePrefixLocation === -1)\n            return true;\n\n        // If the Unicode codepoint isn't identical to the keyCode,\n        // then the identifier is likely correct\n        var codepoint = parseInt(keyIdentifier.substring(unicodePrefixLocation+2), 16);\n        if (keyCode !== codepoint)\n            return true;\n\n        // The keyCodes for A-Z and 0-9 are actually identical to their\n        // Unicode codepoints\n        if ((keyCode >= 65 && keyCode <= 90) || (keyCode >= 48 && keyCode <= 57))\n            return true;\n\n        // The keyIdentifier does NOT appear sane\n        return false;\n\n    };\n\n    /**\n     * Marks a key as pressed, firing the keydown event if registered. Key\n     * repeat for the pressed key will start after a delay if that key is\n     * not a modifier. The return value of this function depends on the\n     * return value of the keydown event handler, if any.\n     * \n     * @param {number} keysym\n     *     The keysym of the key to press.\n     *\n     * @return {boolean}\n     *     true if event should NOT be canceled, false otherwise.\n     */\n    this.press = function(keysym) {\n\n        // Don't bother with pressing the key if the key is unknown\n        if (keysym === null) return;\n\n        // Only press if released\n        if (!guac_keyboard.pressed[keysym]) {\n\n            // Mark key as pressed\n            guac_keyboard.pressed[keysym] = true;\n\n            // Send key event\n            if (guac_keyboard.onkeydown) {\n                var result = guac_keyboard.onkeydown(keysym);\n                last_keydown_result[keysym] = result;\n\n                // Stop any current repeat\n                window.clearTimeout(key_repeat_timeout);\n                window.clearInterval(key_repeat_interval);\n\n                // Repeat after a delay as long as pressed\n                if (!no_repeat[keysym])\n                    key_repeat_timeout = window.setTimeout(function() {\n                        key_repeat_interval = window.setInterval(function() {\n                            guac_keyboard.onkeyup(keysym);\n                            guac_keyboard.onkeydown(keysym);\n                        }, 50);\n                    }, 500);\n\n                return result;\n            }\n        }\n\n        // Return the last keydown result by default, resort to false if unknown\n        return last_keydown_result[keysym] || false;\n\n    };\n\n    /**\n     * Marks a key as released, firing the keyup event if registered.\n     * \n     * @param {number} keysym\n     *     The keysym of the key to release.\n     */\n    this.release = function(keysym) {\n\n        // Only release if pressed\n        if (guac_keyboard.pressed[keysym]) {\n            \n            // Mark key as released\n            delete guac_keyboard.pressed[keysym];\n            delete implicitlyPressed[keysym];\n\n            // Stop repeat\n            window.clearTimeout(key_repeat_timeout);\n            window.clearInterval(key_repeat_interval);\n\n            // Send key event\n            if (keysym !== null && guac_keyboard.onkeyup)\n                guac_keyboard.onkeyup(keysym);\n\n        }\n\n    };\n\n    /**\n     * Presses and releases the keys necessary to type the given string of\n     * text.\n     *\n     * @param {!string} str\n     *     The string to type.\n     */\n    this.type = function type(str) {\n\n        // Press/release the key corresponding to each character in the string\n        for (var i = 0; i < str.length; i++) {\n\n            // Determine keysym of current character\n            var codepoint = str.codePointAt ? str.codePointAt(i) : str.charCodeAt(i);\n            var keysym = keysym_from_charcode(codepoint);\n\n            // Press and release key for current character\n            guac_keyboard.press(keysym);\n            guac_keyboard.release(keysym);\n\n        }\n\n    };\n\n    /**\n     * Resets the state of this keyboard, releasing all keys, and firing keyup\n     * events for each released key.\n     */\n    this.reset = function() {\n\n        // Release all pressed keys\n        for (var keysym in guac_keyboard.pressed)\n            guac_keyboard.release(parseInt(keysym));\n\n        // Clear event log\n        eventLog = [];\n\n    };\n\n    /**\n     * Resynchronizes the remote state of the given modifier with its\n     * corresponding local modifier state, as dictated by\n     * {@link KeyEvent#modifiers} within the given key event, by pressing or\n     * releasing keysyms.\n     *\n     * @private\n     * @param {!string} modifier\n     *     The name of the {@link Guacamole.Keyboard.ModifierState} property\n     *     being updated.\n     *\n     * @param {!number[]} keysyms\n     *     The keysyms which represent the modifier being updated.\n     *\n     * @param {!KeyEvent} keyEvent\n     *     Guacamole's current best interpretation of the key event being\n     *     processed.\n     */\n    var updateModifierState = function updateModifierState(modifier,\n        keysyms, keyEvent) {\n\n        var localState = keyEvent.modifiers[modifier];\n        var remoteState = guac_keyboard.modifiers[modifier];\n\n        var i;\n\n        // Do not trust changes in modifier state for events directly involving\n        // that modifier: (1) the flag may erroneously be cleared despite\n        // another version of the same key still being held and (2) the change\n        // in flag may be due to the current event being processed, thus\n        // updating things here is at best redundant and at worst incorrect\n        if (keysyms.indexOf(keyEvent.keysym) !== -1)\n            return;\n\n        // Release all related keys if modifier is implicitly released\n        if (remoteState && localState === false) {\n            for (i = 0; i < keysyms.length; i++) {\n                guac_keyboard.release(keysyms[i]);\n            }\n        }\n\n        // Press if modifier is implicitly pressed\n        else if (!remoteState && localState) {\n\n            // Verify that modifier flag isn't already pressed or already set\n            // due to another version of the same key being held down\n            for (i = 0; i < keysyms.length; i++) {\n                if (guac_keyboard.pressed[keysyms[i]])\n                    return;\n            }\n\n            // Mark as implicitly pressed only if there is other information\n            // within the key event relating to a different key. Some\n            // platforms, such as iOS, will send essentially empty key events\n            // for modifier keys, using only the modifier flags to signal the\n            // identity of the key.\n            var keysym = keysyms[0];\n            if (keyEvent.keysym)\n                implicitlyPressed[keysym] = true;\n\n            guac_keyboard.press(keysym);\n\n        }\n\n    };\n\n    /**\n     * Given a keyboard event, updates the remote key state to match the local\n     * modifier state and remote based on the modifier flags within the event.\n     * This function pays no attention to keycodes.\n     *\n     * @private\n     * @param {!KeyEvent} keyEvent\n     *     Guacamole's current best interpretation of the key event being\n     *     processed.\n     */\n    var syncModifierStates = function syncModifierStates(keyEvent) {\n\n        // Resync state of alt\n        updateModifierState('alt', [\n            0xFFE9, // Left alt\n            0xFFEA, // Right alt\n            0xFE03  // AltGr\n        ], keyEvent);\n\n        // Resync state of shift\n        updateModifierState('shift', [\n            0xFFE1, // Left shift\n            0xFFE2  // Right shift\n        ], keyEvent);\n\n        // Resync state of ctrl\n        updateModifierState('ctrl', [\n            0xFFE3, // Left ctrl\n            0xFFE4  // Right ctrl\n        ], keyEvent);\n\n        // Resync state of meta\n        updateModifierState('meta', [\n            0xFFE7, // Left meta\n            0xFFE8  // Right meta\n        ], keyEvent);\n\n        // Resync state of hyper\n        updateModifierState('hyper', [\n            0xFFEB, // Left super/hyper\n            0xFFEC  // Right super/hyper\n        ], keyEvent);\n\n        // Update state\n        guac_keyboard.modifiers = keyEvent.modifiers;\n\n    };\n\n    /**\n     * Returns whether all currently pressed keys were implicitly pressed. A\n     * key is implicitly pressed if its status was inferred indirectly from\n     * inspection of other key events.\n     *\n     * @private\n     * @returns {!boolean}\n     *     true if all currently pressed keys were implicitly pressed, false\n     *     otherwise.\n     */\n    var isStateImplicit = function isStateImplicit() {\n\n        for (var keysym in guac_keyboard.pressed) {\n            if (!implicitlyPressed[keysym])\n                return false;\n        }\n\n        return true;\n\n    };\n\n    /**\n     * Reads through the event log, removing events from the head of the log\n     * when the corresponding true key presses are known (or as known as they\n     * can be).\n     * \n     * @private\n     * @return {boolean}\n     *     Whether the default action of the latest event should be prevented.\n     */\n    function interpret_events() {\n\n        // Do not prevent default if no event could be interpreted\n        var handled_event = interpret_event();\n        if (!handled_event)\n            return false;\n\n        // Interpret as much as possible\n        var last_event;\n        do {\n            last_event = handled_event;\n            handled_event = interpret_event();\n        } while (handled_event !== null);\n\n        // Reset keyboard state if we cannot expect to receive any further\n        // keyup events\n        if (isStateImplicit())\n            guac_keyboard.reset();\n\n        return last_event.defaultPrevented;\n\n    }\n\n    /**\n     * Releases Ctrl+Alt, if both are currently pressed and the given keysym\n     * looks like a key that may require AltGr.\n     *\n     * @private\n     * @param {!number} keysym\n     *     The key that was just pressed.\n     */\n    var release_simulated_altgr = function release_simulated_altgr(keysym) {\n\n        // Both Ctrl+Alt must be pressed if simulated AltGr is in use\n        if (!guac_keyboard.modifiers.ctrl || !guac_keyboard.modifiers.alt)\n            return;\n\n        // Assume [A-Z] never require AltGr\n        if (keysym >= 0x0041 && keysym <= 0x005A)\n            return;\n\n        // Assume [a-z] never require AltGr\n        if (keysym >= 0x0061 && keysym <= 0x007A)\n            return;\n\n        // Release Ctrl+Alt if the keysym is printable\n        if (keysym <= 0xFF || (keysym & 0xFF000000) === 0x01000000) {\n            guac_keyboard.release(0xFFE3); // Left ctrl \n            guac_keyboard.release(0xFFE4); // Right ctrl \n            guac_keyboard.release(0xFFE9); // Left alt\n            guac_keyboard.release(0xFFEA); // Right alt\n        }\n\n    };\n\n    /**\n     * Reads through the event log, interpreting the first event, if possible,\n     * and returning that event. If no events can be interpreted, due to a\n     * total lack of events or the need for more events, null is returned. Any\n     * interpreted events are automatically removed from the log.\n     * \n     * @private\n     * @return {KeyEvent}\n     *     The first key event in the log, if it can be interpreted, or null\n     *     otherwise.\n     */\n    var interpret_event = function interpret_event() {\n\n        // Peek at first event in log\n        var first = eventLog[0];\n        if (!first)\n            return null;\n\n        // Keydown event\n        if (first instanceof KeydownEvent) {\n\n            var keysym = null;\n            var accepted_events = [];\n\n            // Defer handling of Meta until it is known to be functioning as a\n            // modifier (it may otherwise actually be an alternative method for\n            // pressing a single key, such as Meta+Left for Home on ChromeOS)\n            if (first.keysym === 0xFFE7 || first.keysym === 0xFFE8) {\n\n                // Defer handling until further events exist to provide context\n                if (eventLog.length === 1)\n                    return null;\n\n                // Drop keydown if it turns out Meta does not actually apply\n                if (eventLog[1].keysym !== first.keysym) {\n                    if (!eventLog[1].modifiers.meta)\n                        return eventLog.shift();\n                }\n\n                // Drop duplicate keydown events while waiting to determine\n                // whether to acknowledge Meta (browser may repeat keydown\n                // while the key is held)\n                else if (eventLog[1] instanceof KeydownEvent)\n                    return eventLog.shift();\n\n            }\n\n            // If event itself is reliable, no need to wait for other events\n            if (first.reliable) {\n                keysym = first.keysym;\n                accepted_events = eventLog.splice(0, 1);\n            }\n\n            // If keydown is immediately followed by a keypress, use the indicated character\n            else if (eventLog[1] instanceof KeypressEvent) {\n                keysym = eventLog[1].keysym;\n                accepted_events = eventLog.splice(0, 2);\n            }\n\n            // If keydown is immediately followed by anything else, then no\n            // keypress can possibly occur to clarify this event, and we must\n            // handle it now\n            else if (eventLog[1]) {\n                keysym = first.keysym;\n                accepted_events = eventLog.splice(0, 1);\n            }\n\n            // Fire a key press if valid events were found\n            if (accepted_events.length > 0) {\n\n                syncModifierStates(first);\n\n                if (keysym) {\n\n                    // Fire event\n                    release_simulated_altgr(keysym);\n                    var defaultPrevented = !guac_keyboard.press(keysym);\n                    recentKeysym[first.keyCode] = keysym;\n\n                    // Release the key now if we cannot rely on the associated\n                    // keyup event\n                    if (!first.keyupReliable)\n                        guac_keyboard.release(keysym);\n\n                    // Record whether default was prevented\n                    for (var i=0; i<accepted_events.length; i++)\n                        accepted_events[i].defaultPrevented = defaultPrevented;\n\n                }\n\n                return first;\n\n            }\n\n        } // end if keydown\n\n        // Keyup event\n        else if (first instanceof KeyupEvent && !quirks.keyupUnreliable) {\n\n            // Release specific key if known\n            var keysym = first.keysym;\n            if (keysym) {\n                guac_keyboard.release(keysym);\n                delete recentKeysym[first.keyCode];\n                first.defaultPrevented = true;\n            }\n\n            // Otherwise, fall back to releasing all keys\n            else {\n                guac_keyboard.reset();\n                return first;\n            }\n\n            syncModifierStates(first);\n            return eventLog.shift();\n\n        } // end if keyup\n\n        // Ignore any other type of event (keypress by itself is invalid, and\n        // unreliable keyup events should simply be dumped)\n        else\n            return eventLog.shift();\n\n        // No event interpreted\n        return null;\n\n    };\n\n    /**\n     * Returns the keyboard location of the key associated with the given\n     * keyboard event. The location differentiates key events which otherwise\n     * have the same keycode, such as left shift vs. right shift.\n     *\n     * @private\n     * @param {!KeyboardEvent} e\n     *     A JavaScript keyboard event, as received through the DOM via a\n     *     \"keydown\", \"keyup\", or \"keypress\" handler.\n     *\n     * @returns {!number}\n     *     The location of the key event on the keyboard, as defined at:\n     *     http://www.w3.org/TR/DOM-Level-3-Events/#events-KeyboardEvent\n     */\n    var getEventLocation = function getEventLocation(e) {\n\n        // Use standard location, if possible\n        if ('location' in e)\n            return e.location;\n\n        // Failing that, attempt to use deprecated keyLocation\n        if ('keyLocation' in e)\n            return e.keyLocation;\n\n        // If no location is available, assume left side\n        return 0;\n\n    };\n\n    /**\n     * Attempts to mark the given Event as having been handled by this\n     * Guacamole.Keyboard. If the Event has already been marked as handled,\n     * false is returned.\n     *\n     * @param {!Event} e\n     *     The Event to mark.\n     *\n     * @returns {!boolean}\n     *     true if the given Event was successfully marked, false if the given\n     *     Event was already marked.\n     */\n    var markEvent = function markEvent(e) {\n\n        // Fail if event is already marked\n        if (e[EVENT_MARKER])\n            return false;\n\n        // Mark event otherwise\n        e[EVENT_MARKER] = true;\n        return true;\n\n    };\n\n    /**\n     * Attaches event listeners to the given Element, automatically translating\n     * received key, input, and composition events into simple keydown/keyup\n     * events signalled through this Guacamole.Keyboard's onkeydown and\n     * onkeyup handlers.\n     *\n     * @param {!(Element|Document)} element\n     *     The Element to attach event listeners to for the sake of handling\n     *     key or input events.\n     */\n    this.listenTo = function listenTo(element) {\n\n        // When key pressed\n        element.addEventListener(\"keydown\", function(e) {\n\n            // Only intercept if handler set\n            if (!guac_keyboard.onkeydown) return;\n\n            // Ignore events which have already been handled\n            if (!markEvent(e)) return;\n\n            var keydownEvent = new KeydownEvent(e);\n\n            // Ignore (but do not prevent) the \"composition\" keycode sent by some\n            // browsers when an IME is in use (see: http://lists.w3.org/Archives/Public/www-dom/2010JulSep/att-0182/keyCode-spec.html)\n            if (keydownEvent.keyCode === 229)\n                return;\n\n            // Log event\n            eventLog.push(keydownEvent);\n\n            // Interpret as many events as possible, prevent default if indicated\n            if (interpret_events())\n                e.preventDefault();\n\n        }, true);\n\n        // When key pressed\n        element.addEventListener(\"keypress\", function(e) {\n\n            // Only intercept if handler set\n            if (!guac_keyboard.onkeydown && !guac_keyboard.onkeyup) return;\n\n            // Ignore events which have already been handled\n            if (!markEvent(e)) return;\n\n            // Log event\n            eventLog.push(new KeypressEvent(e));\n\n            // Interpret as many events as possible, prevent default if indicated\n            if (interpret_events())\n                e.preventDefault();\n\n        }, true);\n\n        // When key released\n        element.addEventListener(\"keyup\", function(e) {\n\n            // Only intercept if handler set\n            if (!guac_keyboard.onkeyup) return;\n\n            // Ignore events which have already been handled\n            if (!markEvent(e)) return;\n\n            e.preventDefault();\n\n            // Log event, call for interpretation\n            eventLog.push(new KeyupEvent(e));\n            interpret_events();\n\n        }, true);\n\n        /**\n         * Handles the given \"input\" event, typing the data within the input text.\n         * If the event is complete (text is provided), handling of \"compositionend\"\n         * events is suspended, as such events may conflict with input events.\n         *\n         * @private\n         * @param {!InputEvent} e\n         *     The \"input\" event to handle.\n         */\n        var handleInput = function handleInput(e) {\n\n            // Only intercept if handler set\n            if (!guac_keyboard.onkeydown && !guac_keyboard.onkeyup) return;\n\n            // Ignore events which have already been handled\n            if (!markEvent(e)) return;\n\n            // Type all content written\n            if (e.data && !e.isComposing) {\n                element.removeEventListener(\"compositionend\", handleComposition, false);\n                guac_keyboard.type(e.data);\n            }\n\n        };\n\n        /**\n         * Handles the given \"compositionend\" event, typing the data within the\n         * composed text. If the event is complete (composed text is provided),\n         * handling of \"input\" events is suspended, as such events may conflict\n         * with composition events.\n         *\n         * @private\n         * @param {!CompositionEvent} e\n         *     The \"compositionend\" event to handle.\n         */\n        var handleComposition = function handleComposition(e) {\n\n            // Only intercept if handler set\n            if (!guac_keyboard.onkeydown && !guac_keyboard.onkeyup) return;\n\n            // Ignore events which have already been handled\n            if (!markEvent(e)) return;\n\n            // Type all content written\n            if (e.data) {\n                element.removeEventListener(\"input\", handleInput, false);\n                guac_keyboard.type(e.data);\n            }\n\n        };\n\n        // Automatically type text entered into the wrapped field\n        element.addEventListener(\"input\", handleInput, false);\n        element.addEventListener(\"compositionend\", handleComposition, false);\n\n    };\n\n    // Listen to given element, if any\n    if (element)\n        guac_keyboard.listenTo(element);\n\n};\n\n/**\n * The unique numerical identifier to assign to the next Guacamole.Keyboard\n * instance.\n *\n * @private\n * @type {!number}\n */\nGuacamole.Keyboard._nextID = 0;\n\n/**\n * The state of all supported keyboard modifiers.\n * @constructor\n */\nGuacamole.Keyboard.ModifierState = function() {\n    \n    /**\n     * Whether shift is currently pressed.\n     *\n     * @type {!boolean}\n     */\n    this.shift = false;\n    \n    /**\n     * Whether ctrl is currently pressed.\n     *\n     * @type {!boolean}\n     */\n    this.ctrl = false;\n    \n    /**\n     * Whether alt is currently pressed.\n     *\n     * @type {!boolean}\n     */\n    this.alt = false;\n    \n    /**\n     * Whether meta (apple key) is currently pressed.\n     *\n     * @type {!boolean}\n     */\n    this.meta = false;\n\n    /**\n     * Whether hyper (windows key) is currently pressed.\n     *\n     * @type {!boolean}\n     */\n    this.hyper = false;\n\n};\n\n/**\n * Returns the modifier state applicable to the keyboard event given.\n * \n * @param {!KeyboardEvent} e\n *     The keyboard event to read.\n *\n * @returns {!Guacamole.Keyboard.ModifierState}\n *     The current state of keyboard modifiers.\n */\nGuacamole.Keyboard.ModifierState.fromKeyboardEvent = function(e) {\n    \n    var state = new Guacamole.Keyboard.ModifierState();\n\n    // Assign states from old flags\n    state.shift = e.shiftKey;\n    state.ctrl  = e.ctrlKey;\n    state.alt   = e.altKey;\n    state.meta  = e.metaKey;\n\n    // Use DOM3 getModifierState() for others\n    if (e.getModifierState) {\n        state.hyper = e.getModifierState(\"OS\")\n                   || e.getModifierState(\"Super\")\n                   || e.getModifierState(\"Hyper\")\n                   || e.getModifierState(\"Win\");\n    }\n\n    return state;\n    \n};\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar Guacamole = Guacamole || {};\n\n/**\n * Abstract ordered drawing surface. Each Layer contains a canvas element and\n * provides simple drawing instructions for drawing to that canvas element,\n * however unlike the canvas element itself, drawing operations on a Layer are\n * guaranteed to run in order, even if such an operation must wait for an image\n * to load before completing.\n * \n * @constructor\n * \n * @param {!number} width\n *     The width of the Layer, in pixels. The canvas element backing this Layer\n *     will be given this width.\n *                       \n * @param {!number} height\n *     The height of the Layer, in pixels. The canvas element backing this\n *     Layer will be given this height.\n */\nGuacamole.Layer = function(width, height) {\n\n    /**\n     * Reference to this Layer.\n     *\n     * @private\n     * @type {!Guacamole.Layer}\n     */\n    var layer = this;\n\n    /**\n     * The number of pixels the width or height of a layer must change before\n     * the underlying canvas is resized. The underlying canvas will be kept at\n     * dimensions which are integer multiples of this factor.\n     *\n     * @private\n     * @constant\n     * @type {!number}\n     */\n    var CANVAS_SIZE_FACTOR = 64;\n\n    /**\n     * The canvas element backing this Layer.\n     *\n     * @private\n     * @type {!HTMLCanvasElement}\n     */\n    var canvas = document.createElement(\"canvas\");\n\n    /**\n     * The 2D display context of the canvas element backing this Layer.\n     *\n     * @private\n     * @type {!CanvasRenderingContext2D}\n     */\n    var context = canvas.getContext(\"2d\");\n    context.save();\n\n    /**\n     * Whether the layer has not yet been drawn to. Once any draw operation\n     * which affects the underlying canvas is invoked, this flag will be set to\n     * false.\n     *\n     * @private\n     * @type {!boolean}\n     */\n    var empty = true;\n\n    /**\n     * Whether a new path should be started with the next path drawing\n     * operations.\n     *\n     * @private\n     * @type {!boolean}\n     */\n    var pathClosed = true;\n\n    /**\n     * The number of states on the state stack.\n     * \n     * Note that there will ALWAYS be one element on the stack, but that\n     * element is not exposed. It is only used to reset the layer to its\n     * initial state.\n     * \n     * @private\n     * @type {!number}\n     */\n    var stackSize = 0;\n\n    /**\n     * Map of all Guacamole channel masks to HTML5 canvas composite operation\n     * names. Not all channel mask combinations are currently implemented.\n     *\n     * @private\n     * @type {!Object.<number, string>}\n     */\n    var compositeOperation = {\n     /* 0x0 NOT IMPLEMENTED */\n        0x1: \"destination-in\",\n        0x2: \"destination-out\",\n     /* 0x3 NOT IMPLEMENTED */\n        0x4: \"source-in\",\n     /* 0x5 NOT IMPLEMENTED */\n        0x6: \"source-atop\",\n     /* 0x7 NOT IMPLEMENTED */\n        0x8: \"source-out\",\n        0x9: \"destination-atop\",\n        0xA: \"xor\",\n        0xB: \"destination-over\",\n        0xC: \"copy\",\n     /* 0xD NOT IMPLEMENTED */\n        0xE: \"source-over\",\n        0xF: \"lighter\"\n    };\n\n    /**\n     * Resizes the canvas element backing this Layer. This function should only\n     * be used internally.\n     * \n     * @private\n     * @param {number} [newWidth=0]\n     *     The new width to assign to this Layer.\n     *\n     * @param {number} [newHeight=0]\n     *     The new height to assign to this Layer.\n     */\n    var resize = function resize(newWidth, newHeight) {\n\n        // Default size to zero\n        newWidth = newWidth || 0;\n        newHeight = newHeight || 0;\n\n        // Calculate new dimensions of internal canvas\n        var canvasWidth  = Math.ceil(newWidth  / CANVAS_SIZE_FACTOR) * CANVAS_SIZE_FACTOR;\n        var canvasHeight = Math.ceil(newHeight / CANVAS_SIZE_FACTOR) * CANVAS_SIZE_FACTOR;\n\n        // Resize only if canvas dimensions are actually changing\n        if (canvas.width !== canvasWidth || canvas.height !== canvasHeight) {\n\n            // Copy old data only if relevant and non-empty\n            var oldData = null;\n            if (!empty && canvas.width !== 0 && canvas.height !== 0) {\n\n                // Create canvas and context for holding old data\n                oldData = document.createElement(\"canvas\");\n                oldData.width = Math.min(layer.width, newWidth);\n                oldData.height = Math.min(layer.height, newHeight);\n\n                var oldDataContext = oldData.getContext(\"2d\");\n\n                // Copy image data from current\n                oldDataContext.drawImage(canvas,\n                        0, 0, oldData.width, oldData.height,\n                        0, 0, oldData.width, oldData.height);\n\n            }\n\n            // Preserve composite operation\n            var oldCompositeOperation = context.globalCompositeOperation;\n\n            // Resize canvas\n            canvas.width = canvasWidth;\n            canvas.height = canvasHeight;\n\n            // Redraw old data, if any\n            if (oldData)\n                context.drawImage(oldData,\n                    0, 0, oldData.width, oldData.height,\n                    0, 0, oldData.width, oldData.height);\n\n            // Restore composite operation\n            context.globalCompositeOperation = oldCompositeOperation;\n\n            // Acknowledge reset of stack (happens on resize of canvas)\n            stackSize = 0;\n            context.save();\n\n        }\n\n        // If the canvas size is not changing, manually force state reset\n        else\n            layer.reset();\n\n        // Assign new layer dimensions\n        layer.width = newWidth;\n        layer.height = newHeight;\n\n    };\n\n    /**\n     * Given the X and Y coordinates of the upper-left corner of a rectangle\n     * and the rectangle's width and height, resize the backing canvas element\n     * as necessary to ensure that the rectangle fits within the canvas\n     * element's coordinate space. This function will only make the canvas\n     * larger. If the rectangle already fits within the canvas element's\n     * coordinate space, the canvas is left unchanged.\n     * \n     * @private\n     * @param {!number} x\n     *     The X coordinate of the upper-left corner of the rectangle to fit.\n     *\n     * @param {!number} y\n     *     The Y coordinate of the upper-left corner of the rectangle to fit.\n     *\n     * @param {!number} w\n     *     The width of the rectangle to fit.\n     *\n     * @param {!number} h\n     *     The height of the rectangle to fit.\n     */\n    function fitRect(x, y, w, h) {\n        \n        // Calculate bounds\n        var opBoundX = w + x;\n        var opBoundY = h + y;\n        \n        // Determine max width\n        var resizeWidth;\n        if (opBoundX > layer.width)\n            resizeWidth = opBoundX;\n        else\n            resizeWidth = layer.width;\n\n        // Determine max height\n        var resizeHeight;\n        if (opBoundY > layer.height)\n            resizeHeight = opBoundY;\n        else\n            resizeHeight = layer.height;\n\n        // Resize if necessary\n        layer.resize(resizeWidth, resizeHeight);\n\n    }\n\n    /**\n     * Set to true if this Layer should resize itself to accomodate the\n     * dimensions of any drawing operation, and false (the default) otherwise.\n     * \n     * Note that setting this property takes effect immediately, and thus may\n     * take effect on operations that were started in the past but have not\n     * yet completed. If you wish the setting of this flag to only modify\n     * future operations, you will need to make the setting of this flag an\n     * operation with sync().\n     * \n     * @example\n     * // Set autosize to true for all future operations\n     * layer.sync(function() {\n     *     layer.autosize = true;\n     * });\n     * \n     * @type {!boolean}\n     * @default false\n     */\n    this.autosize = false;\n\n    /**\n     * The current width of this layer.\n     *\n     * @type {!number}\n     */\n    this.width = width;\n\n    /**\n     * The current height of this layer.\n     *\n     * @type {!number}\n     */\n    this.height = height;\n\n    /**\n     * Returns the canvas element backing this Layer. Note that the dimensions\n     * of the canvas may not exactly match those of the Layer, as resizing a\n     * canvas while maintaining its state is an expensive operation.\n     *\n     * @returns {!HTMLCanvasElement}\n     *     The canvas element backing this Layer.\n     */\n    this.getCanvas = function getCanvas() {\n        return canvas;\n    };\n\n    /**\n     * Returns a new canvas element containing the same image as this Layer.\n     * Unlike getCanvas(), the canvas element returned is guaranteed to have\n     * the exact same dimensions as the Layer.\n     *\n     * @returns {!HTMLCanvasElement}\n     *     A new canvas element containing a copy of the image content this\n     *     Layer.\n     */\n    this.toCanvas = function toCanvas() {\n\n        // Create new canvas having same dimensions\n        var canvas = document.createElement('canvas');\n        canvas.width = layer.width;\n        canvas.height = layer.height;\n\n        // Copy image contents to new canvas\n        var context = canvas.getContext('2d');\n        context.drawImage(layer.getCanvas(), 0, 0);\n\n        return canvas;\n\n    };\n\n    /**\n     * Changes the size of this Layer to the given width and height. Resizing\n     * is only attempted if the new size provided is actually different from\n     * the current size.\n     * \n     * @param {!number} newWidth\n     *     The new width to assign to this Layer.\n     *\n     * @param {!number} newHeight\n     *     The new height to assign to this Layer.\n     */\n    this.resize = function(newWidth, newHeight) {\n        if (newWidth !== layer.width || newHeight !== layer.height)\n            resize(newWidth, newHeight);\n    };\n\n    /**\n     * Draws the specified image at the given coordinates. The image specified\n     * must already be loaded.\n     * \n     * @param {!number} x\n     *     The destination X coordinate.\n     *\n     * @param {!number} y\n     *     The destination Y coordinate.\n     *\n     * @param {!CanvasImageSource} image\n     *     The image to draw. Note that this is not a URL.\n     */\n    this.drawImage = function(x, y, image) {\n        if (layer.autosize) fitRect(x, y, image.width, image.height);\n        context.drawImage(image, x, y);\n        empty = false;\n    };\n\n    /**\n     * Transfer a rectangle of image data from one Layer to this Layer using the\n     * specified transfer function.\n     * \n     * @param {!Guacamole.Layer} srcLayer\n     *     The Layer to copy image data from.\n     *\n     * @param {!number} srcx\n     *     The X coordinate of the upper-left corner of the rectangle within\n     *     the source Layer's coordinate space to copy data from.\n     *\n     * @param {!number} srcy\n     *     The Y coordinate of the upper-left corner of the rectangle within\n     *     the source Layer's coordinate space to copy data from.\n     *\n     * @param {!number} srcw\n     *     The width of the rectangle within the source Layer's coordinate\n     *     space to copy data from.\n     *\n     * @param {!number} srch\n     *     The height of the rectangle within the source Layer's coordinate\n     *     space to copy data from.\n     *\n     * @param {!number} x\n     *     The destination X coordinate.\n     *\n     * @param {!number} y\n     *     The destination Y coordinate.\n     *\n     * @param {!function} transferFunction\n     *     The transfer function to use to transfer data from source to\n     *     destination.\n     */\n    this.transfer = function(srcLayer, srcx, srcy, srcw, srch, x, y, transferFunction) {\n\n        var srcCanvas = srcLayer.getCanvas();\n\n        // If entire rectangle outside source canvas, stop\n        if (srcx >= srcCanvas.width || srcy >= srcCanvas.height) return;\n\n        // Otherwise, clip rectangle to area\n        if (srcx + srcw > srcCanvas.width)\n            srcw = srcCanvas.width - srcx;\n\n        if (srcy + srch > srcCanvas.height)\n            srch = srcCanvas.height - srcy;\n\n        // Stop if nothing to draw.\n        if (srcw === 0 || srch === 0) return;\n\n        if (layer.autosize) fitRect(x, y, srcw, srch);\n\n        // Get image data from src and dst\n        var src = srcLayer.getCanvas().getContext(\"2d\").getImageData(srcx, srcy, srcw, srch);\n        var dst = context.getImageData(x , y, srcw, srch);\n\n        // Apply transfer for each pixel\n        for (var i=0; i<srcw*srch*4; i+=4) {\n\n            // Get source pixel environment\n            var src_pixel = new Guacamole.Layer.Pixel(\n                src.data[i],\n                src.data[i+1],\n                src.data[i+2],\n                src.data[i+3]\n            );\n                \n            // Get destination pixel environment\n            var dst_pixel = new Guacamole.Layer.Pixel(\n                dst.data[i],\n                dst.data[i+1],\n                dst.data[i+2],\n                dst.data[i+3]\n            );\n\n            // Apply transfer function\n            transferFunction(src_pixel, dst_pixel);\n\n            // Save pixel data\n            dst.data[i  ] = dst_pixel.red;\n            dst.data[i+1] = dst_pixel.green;\n            dst.data[i+2] = dst_pixel.blue;\n            dst.data[i+3] = dst_pixel.alpha;\n\n        }\n\n        // Draw image data\n        context.putImageData(dst, x, y);\n        empty = false;\n\n    };\n\n    /**\n     * Put a rectangle of image data from one Layer to this Layer directly\n     * without performing any alpha blending. Simply copy the data.\n     * \n     * @param {!Guacamole.Layer} srcLayer\n     *     The Layer to copy image data from.\n     *\n     * @param {!number} srcx\n     *     The X coordinate of the upper-left corner of the rectangle within\n     *     the source Layer's coordinate space to copy data from.\n     *\n     * @param {!number} srcy\n     *     The Y coordinate of the upper-left corner of the rectangle within\n     *     the source Layer's coordinate space to copy data from.\n     *\n     * @param {!number} srcw\n     *     The width of the rectangle within the source Layer's coordinate\n     *     space to copy data from.\n     *\n     * @param {!number} srch\n     *     The height of the rectangle within the source Layer's coordinate\n     *     space to copy data from.\n     *\n     * @param {!number} x\n     *     The destination X coordinate.\n     *\n     * @param {!number} y\n     *     The destination Y coordinate.\n     */\n    this.put = function(srcLayer, srcx, srcy, srcw, srch, x, y) {\n\n        var srcCanvas = srcLayer.getCanvas();\n\n        // If entire rectangle outside source canvas, stop\n        if (srcx >= srcCanvas.width || srcy >= srcCanvas.height) return;\n\n        // Otherwise, clip rectangle to area\n        if (srcx + srcw > srcCanvas.width)\n            srcw = srcCanvas.width - srcx;\n\n        if (srcy + srch > srcCanvas.height)\n            srch = srcCanvas.height - srcy;\n\n        // Stop if nothing to draw.\n        if (srcw === 0 || srch === 0) return;\n\n        if (layer.autosize) fitRect(x, y, srcw, srch);\n\n        // Get image data from src and dst\n        var src = srcLayer.getCanvas().getContext(\"2d\").getImageData(srcx, srcy, srcw, srch);\n        context.putImageData(src, x, y);\n        empty = false;\n\n    };\n\n    /**\n     * Copy a rectangle of image data from one Layer to this Layer. This\n     * operation will copy exactly the image data that will be drawn once all\n     * operations of the source Layer that were pending at the time this\n     * function was called are complete. This operation will not alter the\n     * size of the source Layer even if its autosize property is set to true.\n     * \n     * @param {!Guacamole.Layer} srcLayer\n     *     The Layer to copy image data from.\n     *\n     * @param {!number} srcx\n     *     The X coordinate of the upper-left corner of the rectangle within\n     *     the source Layer's coordinate space to copy data from.\n     *\n     * @param {!number} srcy\n     *     The Y coordinate of the upper-left corner of the rectangle within\n     *     the source Layer's coordinate space to copy data from.\n     *\n     * @param {!number} srcw\n     *     The width of the rectangle within the source Layer's coordinate\n     *     space to copy data from.\n     *\n     * @param {!number} srch\n     *     The height of the rectangle within the source Layer's coordinate\n     *     space to copy data from.\n     *\n     * @param {!number} x\n     *     The destination X coordinate.\n     *\n     * @param {!number} y\n     *     The destination Y coordinate.\n     */\n    this.copy = function(srcLayer, srcx, srcy, srcw, srch, x, y) {\n\n        var srcCanvas = srcLayer.getCanvas();\n\n        // If entire rectangle outside source canvas, stop\n        if (srcx >= srcCanvas.width || srcy >= srcCanvas.height) return;\n\n        // Otherwise, clip rectangle to area\n        if (srcx + srcw > srcCanvas.width)\n            srcw = srcCanvas.width - srcx;\n\n        if (srcy + srch > srcCanvas.height)\n            srch = srcCanvas.height - srcy;\n\n        // Stop if nothing to draw.\n        if (srcw === 0 || srch === 0) return;\n\n        if (layer.autosize) fitRect(x, y, srcw, srch);\n        context.drawImage(srcCanvas, srcx, srcy, srcw, srch, x, y, srcw, srch);\n        empty = false;\n\n    };\n\n    /**\n     * Starts a new path at the specified point.\n     * \n     * @param {!number} x\n     *     The X coordinate of the point to draw.\n     *\n     * @param {!number} y\n     *     The Y coordinate of the point to draw.\n     */\n    this.moveTo = function(x, y) {\n        \n        // Start a new path if current path is closed\n        if (pathClosed) {\n            context.beginPath();\n            pathClosed = false;\n        }\n        \n        if (layer.autosize) fitRect(x, y, 0, 0);\n        context.moveTo(x, y);\n\n    };\n\n    /**\n     * Add the specified line to the current path.\n     * \n     * @param {!number} x\n     *     The X coordinate of the endpoint of the line to draw.\n     *\n     * @param {!number} y\n     *     The Y coordinate of the endpoint of the line to draw.\n     */\n    this.lineTo = function(x, y) {\n        \n        // Start a new path if current path is closed\n        if (pathClosed) {\n            context.beginPath();\n            pathClosed = false;\n        }\n        \n        if (layer.autosize) fitRect(x, y, 0, 0);\n        context.lineTo(x, y);\n        \n    };\n\n    /**\n     * Add the specified arc to the current path.\n     * \n     * @param {!number} x\n     *     The X coordinate of the center of the circle which will contain the\n     *     arc.\n     *\n     * @param {!number} y\n     *     The Y coordinate of the center of the circle which will contain the\n     *     arc.\n     *\n     * @param {!number} radius\n     *     The radius of the circle.\n     *\n     * @param {!number} startAngle\n     *     The starting angle of the arc, in radians.\n     *\n     * @param {!number} endAngle\n     *     The ending angle of the arc, in radians.\n     *\n     * @param {!boolean} negative\n     *     Whether the arc should be drawn in order of decreasing angle.\n     */\n    this.arc = function(x, y, radius, startAngle, endAngle, negative) {\n        \n        // Start a new path if current path is closed\n        if (pathClosed) {\n            context.beginPath();\n            pathClosed = false;\n        }\n        \n        if (layer.autosize) fitRect(x, y, 0, 0);\n        context.arc(x, y, radius, startAngle, endAngle, negative);\n        \n    };\n\n    /**\n     * Starts a new path at the specified point.\n     * \n     * @param {!number} cp1x\n     *     The X coordinate of the first control point.\n     *\n     * @param {!number} cp1y\n     *     The Y coordinate of the first control point.\n     *\n     * @param {!number} cp2x\n     *     The X coordinate of the second control point.\n     *\n     * @param {!number} cp2y\n     *     The Y coordinate of the second control point.\n     *\n     * @param {!number} x\n     *     The X coordinate of the endpoint of the curve.\n     *\n     * @param {!number} y\n     *     The Y coordinate of the endpoint of the curve.\n     */\n    this.curveTo = function(cp1x, cp1y, cp2x, cp2y, x, y) {\n        \n        // Start a new path if current path is closed\n        if (pathClosed) {\n            context.beginPath();\n            pathClosed = false;\n        }\n        \n        if (layer.autosize) fitRect(x, y, 0, 0);\n        context.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n        \n    };\n\n    /**\n     * Closes the current path by connecting the end point with the start\n     * point (if any) with a straight line.\n     */\n    this.close = function() {\n        context.closePath();\n        pathClosed = true;\n    };\n\n    /**\n     * Add the specified rectangle to the current path.\n     * \n     * @param {!number} x\n     *     The X coordinate of the upper-left corner of the rectangle to draw.\n     *\n     * @param {!number} y\n     *     The Y coordinate of the upper-left corner of the rectangle to draw.\n     *\n     * @param {!number} w\n     *     The width of the rectangle to draw.\n     *\n     * @param {!number} h\n     *     The height of the rectangle to draw.\n     */\n    this.rect = function(x, y, w, h) {\n            \n        // Start a new path if current path is closed\n        if (pathClosed) {\n            context.beginPath();\n            pathClosed = false;\n        }\n        \n        if (layer.autosize) fitRect(x, y, w, h);\n        context.rect(x, y, w, h);\n        \n    };\n\n    /**\n     * Clip all future drawing operations by the current path. The current path\n     * is implicitly closed. The current path can continue to be reused\n     * for other operations (such as fillColor()) but a new path will be started\n     * once a path drawing operation (path() or rect()) is used.\n     */\n    this.clip = function() {\n\n        // Set new clipping region\n        context.clip();\n\n        // Path now implicitly closed\n        pathClosed = true;\n\n    };\n\n    /**\n     * Stroke the current path with the specified color. The current path\n     * is implicitly closed. The current path can continue to be reused\n     * for other operations (such as clip()) but a new path will be started\n     * once a path drawing operation (path() or rect()) is used.\n     * \n     * @param {!string} cap\n     *     The line cap style. Can be \"round\", \"square\", or \"butt\".\n     *\n     * @param {!string} join\n     *     The line join style. Can be \"round\", \"bevel\", or \"miter\".\n     *\n     * @param {!number} thickness\n     *     The line thickness in pixels.\n     *\n     * @param {!number} r\n     *     The red component of the color to fill.\n     *\n     * @param {!number} g\n     *     The green component of the color to fill.\n     *\n     * @param {!number} b\n     *     The blue component of the color to fill.\n     *\n     * @param {!number} a\n     *     The alpha component of the color to fill.\n     */\n    this.strokeColor = function(cap, join, thickness, r, g, b, a) {\n\n        // Stroke with color\n        context.lineCap = cap;\n        context.lineJoin = join;\n        context.lineWidth = thickness;\n        context.strokeStyle = \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + a/255.0 + \")\";\n        context.stroke();\n        empty = false;\n\n        // Path now implicitly closed\n        pathClosed = true;\n\n    };\n\n    /**\n     * Fills the current path with the specified color. The current path\n     * is implicitly closed. The current path can continue to be reused\n     * for other operations (such as clip()) but a new path will be started\n     * once a path drawing operation (path() or rect()) is used.\n     * \n     * @param {!number} r\n     *     The red component of the color to fill.\n     *\n     * @param {!number} g\n     *     The green component of the color to fill.\n     *\n     * @param {!number} b\n     *     The blue component of the color to fill.\n     *\n     * @param {!number} a\n     *     The alpha component of the color to fill.\n     */\n    this.fillColor = function(r, g, b, a) {\n\n        // Fill with color\n        context.fillStyle = \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + a/255.0 + \")\";\n        context.fill();\n        empty = false;\n\n        // Path now implicitly closed\n        pathClosed = true;\n\n    };\n\n    /**\n     * Stroke the current path with the image within the specified layer. The\n     * image data will be tiled infinitely within the stroke. The current path\n     * is implicitly closed. The current path can continue to be reused\n     * for other operations (such as clip()) but a new path will be started\n     * once a path drawing operation (path() or rect()) is used.\n     * \n     * @param {!string} cap\n     *     The line cap style. Can be \"round\", \"square\", or \"butt\".\n     *\n     * @param {!string} join\n     *     The line join style. Can be \"round\", \"bevel\", or \"miter\".\n     *\n     * @param {!number} thickness\n     *     The line thickness in pixels.\n     *\n     * @param {!Guacamole.Layer} srcLayer\n     *     The layer to use as a repeating pattern within the stroke.\n     */\n    this.strokeLayer = function(cap, join, thickness, srcLayer) {\n\n        // Stroke with image data\n        context.lineCap = cap;\n        context.lineJoin = join;\n        context.lineWidth = thickness;\n        context.strokeStyle = context.createPattern(\n            srcLayer.getCanvas(),\n            \"repeat\"\n        );\n        context.stroke();\n        empty = false;\n\n        // Path now implicitly closed\n        pathClosed = true;\n\n    };\n\n    /**\n     * Fills the current path with the image within the specified layer. The\n     * image data will be tiled infinitely within the stroke. The current path\n     * is implicitly closed. The current path can continue to be reused\n     * for other operations (such as clip()) but a new path will be started\n     * once a path drawing operation (path() or rect()) is used.\n     * \n     * @param {!Guacamole.Layer} srcLayer\n     *     The layer to use as a repeating pattern within the fill.\n     */\n    this.fillLayer = function(srcLayer) {\n\n        // Fill with image data \n        context.fillStyle = context.createPattern(\n            srcLayer.getCanvas(),\n            \"repeat\"\n        );\n        context.fill();\n        empty = false;\n\n        // Path now implicitly closed\n        pathClosed = true;\n\n    };\n\n    /**\n     * Push current layer state onto stack.\n     */\n    this.push = function() {\n\n        // Save current state onto stack\n        context.save();\n        stackSize++;\n\n    };\n\n    /**\n     * Pop layer state off stack.\n     */\n    this.pop = function() {\n\n        // Restore current state from stack\n        if (stackSize > 0) {\n            context.restore();\n            stackSize--;\n        }\n\n    };\n\n    /**\n     * Reset the layer, clearing the stack, the current path, and any transform\n     * matrix.\n     */\n    this.reset = function() {\n\n        // Clear stack\n        while (stackSize > 0) {\n            context.restore();\n            stackSize--;\n        }\n\n        // Restore to initial state\n        context.restore();\n        context.save();\n\n        // Clear path\n        context.beginPath();\n        pathClosed = false;\n\n    };\n\n    /**\n     * Sets the given affine transform (defined with six values from the\n     * transform's matrix).\n     * \n     * @param {!number} a\n     *     The first value in the affine transform's matrix.\n     *\n     * @param {!number} b\n     *     The second value in the affine transform's matrix.\n     *\n     * @param {!number} c\n     *     The third value in the affine transform's matrix.\n     *\n     * @param {!number} d\n     *     The fourth value in the affine transform's matrix.\n     *\n     * @param {!number} e\n     *     The fifth value in the affine transform's matrix.\n     *\n     * @param {!number} f\n     *     The sixth value in the affine transform's matrix.\n     */\n    this.setTransform = function(a, b, c, d, e, f) {\n        context.setTransform(\n            a, b, c,\n            d, e, f\n          /*0, 0, 1*/\n        );\n    };\n\n    /**\n     * Applies the given affine transform (defined with six values from the\n     * transform's matrix).\n     *\n     * @param {!number} a\n     *     The first value in the affine transform's matrix.\n     *\n     * @param {!number} b\n     *     The second value in the affine transform's matrix.\n     *\n     * @param {!number} c\n     *     The third value in the affine transform's matrix.\n     *\n     * @param {!number} d\n     *     The fourth value in the affine transform's matrix.\n     *\n     * @param {!number} e\n     *     The fifth value in the affine transform's matrix.\n     *\n     * @param {!number} f\n     *     The sixth value in the affine transform's matrix.\n     */\n    this.transform = function(a, b, c, d, e, f) {\n        context.transform(\n            a, b, c,\n            d, e, f\n          /*0, 0, 1*/\n        );\n    };\n\n    /**\n     * Sets the channel mask for future operations on this Layer.\n     * \n     * The channel mask is a Guacamole-specific compositing operation identifier\n     * with a single bit representing each of four channels (in order): source\n     * image where destination transparent, source where destination opaque,\n     * destination where source transparent, and destination where source\n     * opaque.\n     * \n     * @param {!number} mask\n     *     The channel mask for future operations on this Layer.\n     */\n    this.setChannelMask = function(mask) {\n        context.globalCompositeOperation = compositeOperation[mask];\n    };\n\n    /**\n     * Sets the miter limit for stroke operations using the miter join. This\n     * limit is the maximum ratio of the size of the miter join to the stroke\n     * width. If this ratio is exceeded, the miter will not be drawn for that\n     * joint of the path.\n     * \n     * @param {!number} limit\n     *     The miter limit for stroke operations using the miter join.\n     */\n    this.setMiterLimit = function(limit) {\n        context.miterLimit = limit;\n    };\n\n    // Initialize canvas dimensions\n    resize(width, height);\n\n    // Explicitly render canvas below other elements in the layer (such as\n    // child layers). Chrome and others may fail to render layers properly\n    // without this.\n    canvas.style.zIndex = -1;\n\n};\n\n/**\n * Channel mask for the composite operation \"rout\".\n *\n * @type {!number}\n */\nGuacamole.Layer.ROUT  = 0x2;\n\n/**\n * Channel mask for the composite operation \"atop\".\n *\n * @type {!number}\n */\nGuacamole.Layer.ATOP  = 0x6;\n\n/**\n * Channel mask for the composite operation \"xor\".\n *\n * @type {!number}\n */\nGuacamole.Layer.XOR   = 0xA;\n\n/**\n * Channel mask for the composite operation \"rover\".\n *\n * @type {!number}\n */\nGuacamole.Layer.ROVER = 0xB;\n\n/**\n * Channel mask for the composite operation \"over\".\n *\n * @type {!number}\n */\nGuacamole.Layer.OVER  = 0xE;\n\n/**\n * Channel mask for the composite operation \"plus\".\n *\n * @type {!number}\n */\nGuacamole.Layer.PLUS  = 0xF;\n\n/**\n * Channel mask for the composite operation \"rin\".\n * Beware that WebKit-based browsers may leave the contents of the destionation\n * layer where the source layer is transparent, despite the definition of this\n * operation.\n *\n * @type {!number}\n */\nGuacamole.Layer.RIN   = 0x1;\n\n/**\n * Channel mask for the composite operation \"in\".\n * Beware that WebKit-based browsers may leave the contents of the destionation\n * layer where the source layer is transparent, despite the definition of this\n * operation.\n *\n * @type {!number}\n */\nGuacamole.Layer.IN    = 0x4;\n\n/**\n * Channel mask for the composite operation \"out\".\n * Beware that WebKit-based browsers may leave the contents of the destionation\n * layer where the source layer is transparent, despite the definition of this\n * operation.\n *\n * @type {!number}\n */\nGuacamole.Layer.OUT   = 0x8;\n\n/**\n * Channel mask for the composite operation \"ratop\".\n * Beware that WebKit-based browsers may leave the contents of the destionation\n * layer where the source layer is transparent, despite the definition of this\n * operation.\n *\n * @type {!number}\n */\nGuacamole.Layer.RATOP = 0x9;\n\n/**\n * Channel mask for the composite operation \"src\".\n * Beware that WebKit-based browsers may leave the contents of the destionation\n * layer where the source layer is transparent, despite the definition of this\n * operation.\n *\n * @type {!number}\n */\nGuacamole.Layer.SRC   = 0xC;\n\n/**\n * Represents a single pixel of image data. All components have a minimum value\n * of 0 and a maximum value of 255.\n * \n * @constructor\n * \n * @param {!number} r\n *     The red component of this pixel.\n *\n * @param {!number} g\n *     The green component of this pixel.\n *\n * @param {!number} b\n *     The blue component of this pixel.\n *\n * @param {!number} a\n *     The alpha component of this pixel.\n */\nGuacamole.Layer.Pixel = function(r, g, b, a) {\n\n    /**\n     * The red component of this pixel, where 0 is the minimum value,\n     * and 255 is the maximum.\n     *\n     * @type {!number}\n     */\n    this.red   = r;\n\n    /**\n     * The green component of this pixel, where 0 is the minimum value,\n     * and 255 is the maximum.\n     *\n     * @type {!number}\n     */\n    this.green = g;\n\n    /**\n     * The blue component of this pixel, where 0 is the minimum value,\n     * and 255 is the maximum.\n     *\n     * @type {!number}\n     */\n    this.blue  = b;\n\n    /**\n     * The alpha component of this pixel, where 0 is the minimum value,\n     * and 255 is the maximum.\n     *\n     * @type {!number}\n     */\n    this.alpha = a;\n\n};\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar Guacamole = Guacamole || {};\n\n/**\n * Provides cross-browser mouse events for a given element. The events of\n * the given element are automatically populated with handlers that translate\n * mouse events into a non-browser-specific event provided by the\n * Guacamole.Mouse instance.\n *\n * @example\n * var mouse = new Guacamole.Mouse(client.getDisplay().getElement());\n *\n * // Forward all mouse interaction over Guacamole connection\n * mouse.onEach(['mousedown', 'mousemove', 'mouseup'], function sendMouseEvent(e) {\n *     client.sendMouseState(e.state, true);\n * });\n *\n * @example\n * // Hide software cursor when mouse leaves display\n * mouse.on('mouseout', function hideCursor() {\n *     client.getDisplay().showCursor(false);\n * });\n *\n * @constructor\n * @augments Guacamole.Mouse.Event.Target\n * @param {!Element} element\n *     The Element to use to provide mouse events.\n */\nGuacamole.Mouse = function Mouse(element) {\n\n    Guacamole.Mouse.Event.Target.call(this);\n\n    /**\n     * Reference to this Guacamole.Mouse.\n     *\n     * @private\n     * @type {!Guacamole.Mouse}\n     */\n    var guac_mouse = this;\n\n    /**\n     * The number of mousemove events to require before re-enabling mouse\n     * event handling after receiving a touch event.\n     *\n     * @type {!number}\n     */\n    this.touchMouseThreshold = 3;\n\n    /**\n     * The minimum amount of pixels scrolled required for a single scroll button\n     * click.\n     *\n     * @type {!number}\n     */\n    this.scrollThreshold = 53;\n\n    /**\n     * The number of pixels to scroll per line.\n     *\n     * @type {!number}\n     */\n    this.PIXELS_PER_LINE = 18;\n\n    /**\n     * The number of pixels to scroll per page.\n     *\n     * @type {!number}\n     */\n    this.PIXELS_PER_PAGE = this.PIXELS_PER_LINE * 16;\n\n    /**\n     * Array of {@link Guacamole.Mouse.State} button names corresponding to the\n     * mouse button indices used by DOM mouse events.\n     *\n     * @private\n     * @type {!string[]}\n     */\n    var MOUSE_BUTTONS = [\n        Guacamole.Mouse.State.Buttons.LEFT,\n        Guacamole.Mouse.State.Buttons.MIDDLE,\n        Guacamole.Mouse.State.Buttons.RIGHT\n    ];\n\n    /**\n     * Counter of mouse events to ignore. This decremented by mousemove, and\n     * while non-zero, mouse events will have no effect.\n     *\n     * @private\n     * @type {!number}\n     */\n    var ignore_mouse = 0;\n\n    /**\n     * Cumulative scroll delta amount. This value is accumulated through scroll\n     * events and results in scroll button clicks if it exceeds a certain\n     * threshold.\n     *\n     * @private\n     * @type {!number}\n     */\n    var scroll_delta = 0;\n\n    // Block context menu so right-click gets sent properly\n    element.addEventListener(\"contextmenu\", function(e) {\n        Guacamole.Event.DOMEvent.cancelEvent(e);\n    }, false);\n\n    element.addEventListener(\"mousemove\", function(e) {\n\n        // If ignoring events, decrement counter\n        if (ignore_mouse) {\n            Guacamole.Event.DOMEvent.cancelEvent(e);\n            ignore_mouse--;\n            return;\n        }\n\n        guac_mouse.move(Guacamole.Position.fromClientPosition(element, e.clientX, e.clientY), e);\n\n    }, false);\n\n    element.addEventListener(\"mousedown\", function(e) {\n\n        // Do not handle if ignoring events\n        if (ignore_mouse) {\n            Guacamole.Event.DOMEvent.cancelEvent(e);\n            return;\n        }\n\n        var button = MOUSE_BUTTONS[e.button];\n        if (button)\n            guac_mouse.press(button, e);\n\n    }, false);\n\n    element.addEventListener(\"mouseup\", function(e) {\n\n        // Do not handle if ignoring events\n        if (ignore_mouse) {\n            Guacamole.Event.DOMEvent.cancelEvent(e);\n            return;\n        }\n\n        var button = MOUSE_BUTTONS[e.button];\n        if (button)\n            guac_mouse.release(button, e);\n\n    }, false);\n\n    element.addEventListener(\"mouseout\", function(e) {\n\n        // Get parent of the element the mouse pointer is leaving\n       \tif (!e) e = window.event;\n\n        // Check that mouseout is due to actually LEAVING the element\n        var target = e.relatedTarget || e.toElement;\n        while (target) {\n            if (target === element)\n                return;\n            target = target.parentNode;\n        }\n\n        // Release all buttons and fire mouseout\n        guac_mouse.reset(e);\n        guac_mouse.out(e);\n\n    }, false);\n\n    // Override selection on mouse event element.\n    element.addEventListener(\"selectstart\", function(e) {\n        Guacamole.Event.DOMEvent.cancelEvent(e);\n    }, false);\n\n    // Ignore all pending mouse events when touch events are the apparent source\n    function ignorePendingMouseEvents() { ignore_mouse = guac_mouse.touchMouseThreshold; }\n\n    element.addEventListener(\"touchmove\",  ignorePendingMouseEvents, false);\n    element.addEventListener(\"touchstart\", ignorePendingMouseEvents, false);\n    element.addEventListener(\"touchend\",   ignorePendingMouseEvents, false);\n\n    // Scroll wheel support\n    function mousewheel_handler(e) {\n\n        // Determine approximate scroll amount (in pixels)\n        var delta = e.deltaY || -e.wheelDeltaY || -e.wheelDelta;\n\n        // If successfully retrieved scroll amount, convert to pixels if not\n        // already in pixels\n        if (delta) {\n\n            // Convert to pixels if delta was lines\n            if (e.deltaMode === 1)\n                delta = e.deltaY * guac_mouse.PIXELS_PER_LINE;\n\n            // Convert to pixels if delta was pages\n            else if (e.deltaMode === 2)\n                delta = e.deltaY * guac_mouse.PIXELS_PER_PAGE;\n\n        }\n\n        // Otherwise, assume legacy mousewheel event and line scrolling\n        else\n            delta = e.detail * guac_mouse.PIXELS_PER_LINE;\n        \n        // Update overall delta\n        scroll_delta += delta;\n\n        // Up\n        if (scroll_delta <= -guac_mouse.scrollThreshold) {\n\n            // Repeatedly click the up button until insufficient delta remains\n            do {\n                guac_mouse.click(Guacamole.Mouse.State.Buttons.UP);\n                scroll_delta += guac_mouse.scrollThreshold;\n            } while (scroll_delta <= -guac_mouse.scrollThreshold);\n\n            // Reset delta\n            scroll_delta = 0;\n\n        }\n\n        // Down\n        if (scroll_delta >= guac_mouse.scrollThreshold) {\n\n            // Repeatedly click the down button until insufficient delta remains\n            do {\n                guac_mouse.click(Guacamole.Mouse.State.Buttons.DOWN);\n                scroll_delta -= guac_mouse.scrollThreshold;\n            } while (scroll_delta >= guac_mouse.scrollThreshold);\n\n            // Reset delta\n            scroll_delta = 0;\n\n        }\n\n        // All scroll/wheel events must currently be cancelled regardless of\n        // whether the dispatched event is cancelled, as there is no Guacamole\n        // scroll event and thus no way to cancel scroll events that are\n        // smaller than required to produce an up/down click\n        Guacamole.Event.DOMEvent.cancelEvent(e);\n\n    }\n\n    element.addEventListener('DOMMouseScroll', mousewheel_handler, false);\n    element.addEventListener('mousewheel',     mousewheel_handler, false);\n    element.addEventListener('wheel',          mousewheel_handler, false);\n\n    /**\n     * Whether the browser supports CSS3 cursor styling, including hotspot\n     * coordinates.\n     *\n     * @private\n     * @type {!boolean}\n     */\n    var CSS3_CURSOR_SUPPORTED = (function() {\n\n        var div = document.createElement(\"div\");\n\n        // If no cursor property at all, then no support\n        if (!(\"cursor\" in div.style))\n            return false;\n\n        try {\n            // Apply simple 1x1 PNG\n            div.style.cursor = \"url(data:image/png;base64,\"\n                             + \"iVBORw0KGgoAAAANSUhEUgAAAAEAAAAB\"\n                             + \"AQMAAAAl21bKAAAAA1BMVEX///+nxBvI\"\n                             + \"AAAACklEQVQI12NgAAAAAgAB4iG8MwAA\"\n                             + \"AABJRU5ErkJggg==) 0 0, auto\";\n        }\n        catch (e) {\n            return false;\n        }\n\n        // Verify cursor property is set to URL with hotspot\n        return /\\burl\\([^()]*\\)\\s+0\\s+0\\b/.test(div.style.cursor || \"\");\n\n    })();\n\n    /**\n     * Changes the local mouse cursor to the given canvas, having the given\n     * hotspot coordinates. This affects styling of the element backing this\n     * Guacamole.Mouse only, and may fail depending on browser support for\n     * setting the mouse cursor.\n     * \n     * If setting the local cursor is desired, it is up to the implementation\n     * to do something else, such as use the software cursor built into\n     * Guacamole.Display, if the local cursor cannot be set.\n     *\n     * @param {!HTMLCanvasElement} canvas\n     *     The cursor image.\n     *\n     * @param {!number} x\n     *     The X-coordinate of the cursor hotspot.\n     *\n     * @param {!number} y\n     *     The Y-coordinate of the cursor hotspot.\n     *\n     * @return {!boolean}\n     *     true if the cursor was successfully set, false if the cursor could\n     *     not be set for any reason.\n     */\n    this.setCursor = function(canvas, x, y) {\n\n        // Attempt to set via CSS3 cursor styling\n        if (CSS3_CURSOR_SUPPORTED) {\n            var dataURL = canvas.toDataURL('image/png');\n            element.style.cursor = \"url(\" + dataURL + \") \" + x + \" \" + y + \", auto\";\n            return true;\n        }\n\n        // Otherwise, setting cursor failed\n        return false;\n\n    };\n\n};\n\n/**\n * The current state of a mouse, including position and buttons.\n *\n * @constructor\n * @augments Guacamole.Position\n * @param {Guacamole.Mouse.State|object} [template={}]\n *     The object whose properties should be copied within the new\n *     Guacamole.Mouse.State.\n */\nGuacamole.Mouse.State = function State(template) {\n\n    /**\n     * Returns the template object that would be provided to the\n     * Guacamole.Mouse.State constructor to produce a new Guacamole.Mouse.State\n     * object with the properties specified. The order and type of arguments\n     * used by this function are identical to those accepted by the\n     * Guacamole.Mouse.State constructor of Apache Guacamole 1.3.0 and older.\n     *\n     * @private\n     * @param {!number} x\n     *     The X position of the mouse pointer in pixels.\n     *\n     * @param {!number} y\n     *     The Y position of the mouse pointer in pixels.\n     *\n     * @param {!boolean} left\n     *     Whether the left mouse button is pressed.\n     *\n     * @param {!boolean} middle\n     *     Whether the middle mouse button is pressed.\n     *\n     * @param {!boolean} right\n     *     Whether the right mouse button is pressed.\n     *\n     * @param {!boolean} up\n     *     Whether the up mouse button is pressed (the fourth button, usually\n     *     part of a scroll wheel).\n     *\n     * @param {!boolean} down\n     *     Whether the down mouse button is pressed (the fifth button, usually\n     *     part of a scroll wheel).\n     *\n     * @return {!object}\n     *     The equivalent template object that would be passed to the new\n     *     Guacamole.Mouse.State constructor.\n     */\n    var legacyConstructor = function legacyConstructor(x, y, left, middle, right, up, down) {\n        return {\n            x      : x,\n            y      : y,\n            left   : left,\n            middle : middle,\n            right  : right,\n            up     : up,\n            down   : down\n        };\n    };\n\n    // Accept old-style constructor, as well\n    if (arguments.length > 1)\n        template = legacyConstructor.apply(this, arguments);\n    else\n        template = template || {};\n\n    Guacamole.Position.call(this, template);\n\n    /**\n     * Whether the left mouse button is currently pressed.\n     *\n     * @type {!boolean}\n     * @default false\n     */\n    this.left = template.left || false;\n\n    /**\n     * Whether the middle mouse button is currently pressed.\n     *\n     * @type {!boolean}\n     * @default false\n     */\n    this.middle = template.middle || false;\n\n    /**\n     * Whether the right mouse button is currently pressed.\n     *\n     * @type {!boolean}\n     * @default false\n     */\n    this.right = template.right || false;\n\n    /**\n     * Whether the up mouse button is currently pressed. This is the fourth\n     * mouse button, associated with upward scrolling of the mouse scroll\n     * wheel.\n     *\n     * @type {!boolean}\n     * @default false\n     */\n    this.up = template.up || false;\n\n    /**\n     * Whether the down mouse button is currently pressed. This is the fifth \n     * mouse button, associated with downward scrolling of the mouse scroll\n     * wheel.\n     *\n     * @type {!boolean}\n     * @default false\n     */\n    this.down = template.down || false;\n\n};\n\n/**\n * All mouse buttons that may be represented by a\n * {@link Guacamole.Mouse.State}. \n *\n * @readonly\n * @enum\n */\nGuacamole.Mouse.State.Buttons = {\n\n    /**\n     * The name of the {@link Guacamole.Mouse.State} property representing the\n     * left mouse button.\n     *\n     * @constant\n     * @type {!string}\n     */\n    LEFT : 'left',\n\n    /**\n     * The name of the {@link Guacamole.Mouse.State} property representing the\n     * middle mouse button.\n     *\n     * @constant\n     * @type {!string}\n     */\n    MIDDLE : 'middle',\n\n    /**\n     * The name of the {@link Guacamole.Mouse.State} property representing the\n     * right mouse button.\n     *\n     * @constant\n     * @type {!string}\n     */\n    RIGHT : 'right',\n\n    /**\n     * The name of the {@link Guacamole.Mouse.State} property representing the\n     * up mouse button (the fourth mouse button, clicked when the mouse scroll\n     * wheel is scrolled up).\n     *\n     * @constant\n     * @type {!string}\n     */\n    UP : 'up',\n\n    /**\n     * The name of the {@link Guacamole.Mouse.State} property representing the\n     * down mouse button (the fifth mouse button, clicked when the mouse scroll\n     * wheel is scrolled up).\n     *\n     * @constant\n     * @type {!string}\n     */\n    DOWN : 'down'\n\n};\n\n/**\n * Base event type for all mouse events. The mouse producing the event may be\n * the user's local mouse (as with {@link Guacamole.Mouse}) or an emulated\n * mouse (as with {@link Guacamole.Mouse.Touchpad}).\n *\n * @constructor\n * @augments Guacamole.Event.DOMEvent\n * @param {!string} type\n *     The type name of the event (\"mousedown\", \"mouseup\", etc.)\n *\n * @param {!Guacamole.Mouse.State} state\n *     The current mouse state.\n *     \n * @param {Event|Event[]} [events=[]]\n *     The DOM events that are related to this event, if any.\n */\nGuacamole.Mouse.Event = function MouseEvent(type, state, events) {\n\n    Guacamole.Event.DOMEvent.call(this, type, events);\n\n    /**\n     * The name of the event handler used by the Guacamole JavaScript API for\n     * this event prior to the migration to Guacamole.Event.Target.\n     *\n     * @private\n     * @constant\n     * @type {!string}\n     */\n    var legacyHandlerName = 'on' + this.type;\n\n    /**\n     * The current mouse state at the time this event was fired.\n     *\n     * @type {!Guacamole.Mouse.State}\n     */\n    this.state = state;\n\n    /**\n     * @inheritdoc\n     */\n    this.invokeLegacyHandler = function invokeLegacyHandler(target) {\n        if (target[legacyHandlerName]) {\n\n            this.preventDefault();\n            this.stopPropagation();\n\n            target[legacyHandlerName](this.state);\n\n        }\n    };\n\n};\n\n/**\n * An object which can dispatch {@link Guacamole.Mouse.Event} objects\n * representing mouse events. These mouse events may be produced from an actual\n * mouse device (as with {@link Guacamole.Mouse}), from an emulated mouse\n * device (as with {@link Guacamole.Mouse.Touchpad}, or may be programmatically\n * generated (using functions like [dispatch()]{@link Guacamole.Mouse.Event.Target#dispatch},\n * [press()]{@link Guacamole.Mouse.Event.Target#press}, and\n * [release()]{@link Guacamole.Mouse.Event.Target#release}).\n * \n * @constructor\n * @augments Guacamole.Event.Target\n */\nGuacamole.Mouse.Event.Target = function MouseEventTarget() {\n\n    Guacamole.Event.Target.call(this);\n\n    /**\n     * The current mouse state. The properties of this state are updated when\n     * mouse events fire. This state object is also passed in as a parameter to\n     * the handler of any mouse events.\n     *\n     * @type {!Guacamole.Mouse.State}\n     */\n    this.currentState = new Guacamole.Mouse.State();\n\n    /**\n     * Fired whenever a mouse button is effectively pressed. Depending on the\n     * object dispatching the event, this can be due to a true mouse button\n     * press ({@link Guacamole.Mouse}), an emulated mouse button press from a\n     * touch gesture ({@link Guacamole.Mouse.Touchpad} and\n     * {@link Guacamole.Mouse.Touchscreen}), or may be programmatically\n     * generated through [dispatch()]{@link Guacamole.Mouse.Event.Target#dispatch},\n     * [press()]{@link Guacamole.Mouse.Event.Target#press}, or\n     * [click()]{@link Guacamole.Mouse.Event.Target#click}.\n     *\n     * @event Guacamole.Mouse.Event.Target#mousedown\n     * @param {!Guacamole.Mouse.Event} event\n     *     The mousedown event that was fired.\n     */\n\n    /**\n     * Fired whenever a mouse button is effectively released. Depending on the\n     * object dispatching the event, this can be due to a true mouse button\n     * release ({@link Guacamole.Mouse}), an emulated mouse button release from\n     * a touch gesture ({@link Guacamole.Mouse.Touchpad} and\n     * {@link Guacamole.Mouse.Touchscreen}), or may be programmatically\n     * generated through [dispatch()]{@link Guacamole.Mouse.Event.Target#dispatch},\n     * [release()]{@link Guacamole.Mouse.Event.Target#release}, or\n     * [click()]{@link Guacamole.Mouse.Event.Target#click}.\n     *\n     * @event Guacamole.Mouse.Event.Target#mouseup\n     * @param {!Guacamole.Mouse.Event} event\n     *     The mouseup event that was fired.\n     */\n\n    /**\n     * Fired whenever the mouse pointer is effectively moved. Depending on the\n     * object dispatching the event, this can be due to true mouse movement\n     * ({@link Guacamole.Mouse}), emulated mouse movement from\n     * a touch gesture ({@link Guacamole.Mouse.Touchpad} and\n     * {@link Guacamole.Mouse.Touchscreen}), or may be programmatically\n     * generated through [dispatch()]{@link Guacamole.Mouse.Event.Target#dispatch},\n     * or [move()]{@link Guacamole.Mouse.Event.Target#move}.\n     *\n     * @event Guacamole.Mouse.Event.Target#mousemove\n     * @param {!Guacamole.Mouse.Event} event\n     *     The mousemove event that was fired.\n     */\n\n    /**\n     * Fired whenever the mouse pointer leaves the boundaries of the element\n     * being monitored for interaction. This will only ever be automatically\n     * fired due to movement of an actual mouse device via\n     * {@link Guacamole.Mouse} unless programmatically generated through\n     * [dispatch()]{@link Guacamole.Mouse.Event.Target#dispatch},\n     * or [out()]{@link Guacamole.Mouse.Event.Target#out}.\n     *\n     * @event Guacamole.Mouse.Event.Target#mouseout\n     * @param {!Guacamole.Mouse.Event} event\n     *     The mouseout event that was fired.\n     */\n\n    /**\n     * Presses the given mouse button, if it isn't already pressed. Valid\n     * button names are defined by {@link Guacamole.Mouse.State.Buttons} and\n     * correspond to the button-related properties of\n     * {@link Guacamole.Mouse.State}.\n     *\n     * @fires Guacamole.Mouse.Event.Target#mousedown\n     *\n     * @param {!string} button\n     *     The name of the mouse button to press, as defined by\n     *     {@link Guacamole.Mouse.State.Buttons}.\n     *\n     * @param {Event|Event[]} [events=[]]\n     *     The DOM events that are related to the mouse button press, if any.\n     */\n    this.press = function press(button, events) {\n        if (!this.currentState[button]) {\n            this.currentState[button] = true;\n            this.dispatch(new Guacamole.Mouse.Event('mousedown', this.currentState, events));\n        }\n    };\n\n    /**\n     * Releases the given mouse button, if it isn't already released. Valid\n     * button names are defined by {@link Guacamole.Mouse.State.Buttons} and\n     * correspond to the button-related properties of\n     * {@link Guacamole.Mouse.State}.\n     *\n     * @fires Guacamole.Mouse.Event.Target#mouseup\n     *\n     * @param {!string} button\n     *     The name of the mouse button to release, as defined by\n     *     {@link Guacamole.Mouse.State.Buttons}.\n     *\n     * @param {Event|Event[]} [events=[]]\n     *     The DOM events related to the mouse button release, if any.\n     */\n    this.release = function release(button, events) {\n        if (this.currentState[button]) {\n            this.currentState[button] = false;\n            this.dispatch(new Guacamole.Mouse.Event('mouseup', this.currentState, events));\n        }\n    };\n\n    /**\n     * Clicks (presses and releases) the given mouse button. Valid button\n     * names are defined by {@link Guacamole.Mouse.State.Buttons} and\n     * correspond to the button-related properties of\n     * {@link Guacamole.Mouse.State}.\n     *\n     * @fires Guacamole.Mouse.Event.Target#mousedown\n     * @fires Guacamole.Mouse.Event.Target#mouseup\n     *\n     * @param {!string} button\n     *     The name of the mouse button to click, as defined by\n     *     {@link Guacamole.Mouse.State.Buttons}.\n     *\n     * @param {Event|Event[]} [events=[]]\n     *     The DOM events related to the click, if any.\n     */\n    this.click = function click(button, events) {\n        this.press(button, events);\n        this.release(button, events);\n    };\n\n    /**\n     * Moves the mouse to the given coordinates.\n     *\n     * @fires Guacamole.Mouse.Event.Target#mousemove\n     *\n     * @param {!(Guacamole.Position|object)} position\n     *     The new coordinates of the mouse pointer. This object may be a\n     *     {@link Guacamole.Position} or any object with \"x\" and \"y\"\n     *     properties.\n     *\n     * @param {Event|Event[]} [events=[]]\n     *     The DOM events related to the mouse movement, if any.\n     */\n    this.move = function move(position, events) {\n\n        if (this.currentState.x !== position.x || this.currentState.y !== position.y) {\n            this.currentState.x = position.x;\n            this.currentState.y = position.y;\n            this.dispatch(new Guacamole.Mouse.Event('mousemove', this.currentState, events));\n        }\n\n    };\n\n    /**\n     * Notifies event listeners that the mouse pointer has left the boundaries\n     * of the area being monitored for mouse events.\n     *\n     * @fires Guacamole.Mouse.Event.Target#mouseout\n     *\n     * @param {Event|Event[]} [events=[]]\n     *     The DOM events related to the mouse leaving the boundaries of the\n     *     monitored object, if any.\n     */\n    this.out = function out(events) {\n        this.dispatch(new Guacamole.Mouse.Event('mouseout', this.currentState, events));\n    };\n\n    /**\n     * Releases all mouse buttons that are currently pressed. If all mouse\n     * buttons have already been released, this function has no effect.\n     *\n     * @fires Guacamole.Mouse.Event.Target#mouseup\n     *\n     * @param {Event|Event[]} [events=[]]\n     *     The DOM event related to all mouse buttons being released, if any.\n     */\n    this.reset = function reset(events) {\n        for (var button in Guacamole.Mouse.State.Buttons) {\n            this.release(Guacamole.Mouse.State.Buttons[button], events);\n        }\n    };\n\n};\n\n/**\n * Provides cross-browser relative touch event translation for a given element.\n * \n * Touch events are translated into mouse events as if the touches occurred\n * on a touchpad (drag to push the mouse pointer, tap to click).\n * \n * @example\n * var touchpad = new Guacamole.Mouse.Touchpad(client.getDisplay().getElement());\n *\n * // Emulate a mouse using touchpad-style gestures, forwarding all mouse\n * // interaction over Guacamole connection\n * touchpad.onEach(['mousedown', 'mousemove', 'mouseup'], function sendMouseEvent(e) {\n *\n *     // Re-show software mouse cursor if possibly hidden by a prior call to\n *     // showCursor(), such as a \"mouseout\" event handler that hides the\n *     // cursor\n *     client.getDisplay().showCursor(true);\n *\n *     client.sendMouseState(e.state, true);\n *\n * });\n *\n * @constructor\n * @augments Guacamole.Mouse.Event.Target\n * @param {!Element} element\n *     The Element to use to provide touch events.\n */\nGuacamole.Mouse.Touchpad = function Touchpad(element) {\n\n    Guacamole.Mouse.Event.Target.call(this);\n\n    /**\n     * The \"mouseout\" event will never be fired by Guacamole.Mouse.Touchpad.\n     *\n     * @ignore\n     * @event Guacamole.Mouse.Touchpad#mouseout\n     */\n\n    /**\n     * Reference to this Guacamole.Mouse.Touchpad.\n     *\n     * @private\n     * @type {!Guacamole.Mouse.Touchpad}\n     */\n    var guac_touchpad = this;\n\n    /**\n     * The distance a two-finger touch must move per scrollwheel event, in\n     * pixels.\n     *\n     * @type {!number}\n     */\n    this.scrollThreshold = 20 * (window.devicePixelRatio || 1);\n\n    /**\n     * The maximum number of milliseconds to wait for a touch to end for the\n     * gesture to be considered a click.\n     *\n     * @type {!number}\n     */\n    this.clickTimingThreshold = 250;\n\n    /**\n     * The maximum number of pixels to allow a touch to move for the gesture to\n     * be considered a click.\n     *\n     * @type {!number}\n     */\n    this.clickMoveThreshold = 10 * (window.devicePixelRatio || 1);\n\n    /**\n     * The current mouse state. The properties of this state are updated when\n     * mouse events fire. This state object is also passed in as a parameter to\n     * the handler of any mouse events.\n     * \n     * @type {!Guacamole.Mouse.State}\n     */\n    this.currentState = new Guacamole.Mouse.State();\n\n    var touch_count = 0;\n    var last_touch_x = 0;\n    var last_touch_y = 0;\n    var last_touch_time = 0;\n    var pixels_moved = 0;\n\n    var touch_buttons = {\n        1: \"left\",\n        2: \"right\",\n        3: \"middle\"\n    };\n\n    var gesture_in_progress = false;\n    var click_release_timeout = null;\n\n    element.addEventListener(\"touchend\", function(e) {\n        \n        e.preventDefault();\n            \n        // If we're handling a gesture AND this is the last touch\n        if (gesture_in_progress && e.touches.length === 0) {\n            \n            var time = new Date().getTime();\n\n            // Get corresponding mouse button\n            var button = touch_buttons[touch_count];\n\n            // If mouse already down, release anad clear timeout\n            if (guac_touchpad.currentState[button]) {\n\n                // Fire button up event\n                guac_touchpad.release(button, e);\n\n                // Clear timeout, if set\n                if (click_release_timeout) {\n                    window.clearTimeout(click_release_timeout);\n                    click_release_timeout = null;\n                }\n\n            }\n\n            // If single tap detected (based on time and distance)\n            if (time - last_touch_time <= guac_touchpad.clickTimingThreshold\n                    && pixels_moved < guac_touchpad.clickMoveThreshold) {\n\n                // Fire button down event\n                guac_touchpad.press(button, e);\n\n                // Delay mouse up - mouse up should be canceled if\n                // touchstart within timeout.\n                click_release_timeout = window.setTimeout(function() {\n                    \n                    // Fire button up event\n                    guac_touchpad.release(button, e);\n\n                    // Gesture now over\n                    gesture_in_progress = false;\n\n                }, guac_touchpad.clickTimingThreshold);\n\n            }\n\n            // If we're not waiting to see if this is a click, stop gesture\n            if (!click_release_timeout)\n                gesture_in_progress = false;\n\n        }\n\n    }, false);\n\n    element.addEventListener(\"touchstart\", function(e) {\n\n        e.preventDefault();\n\n        // Track number of touches, but no more than three\n        touch_count = Math.min(e.touches.length, 3);\n\n        // Clear timeout, if set\n        if (click_release_timeout) {\n            window.clearTimeout(click_release_timeout);\n            click_release_timeout = null;\n        }\n\n        // Record initial touch location and time for touch movement\n        // and tap gestures\n        if (!gesture_in_progress) {\n\n            // Stop mouse events while touching\n            gesture_in_progress = true;\n\n            // Record touch location and time\n            var starting_touch = e.touches[0];\n            last_touch_x = starting_touch.clientX;\n            last_touch_y = starting_touch.clientY;\n            last_touch_time = new Date().getTime();\n            pixels_moved = 0;\n\n        }\n\n    }, false);\n\n    element.addEventListener(\"touchmove\", function(e) {\n\n        e.preventDefault();\n\n        // Get change in touch location\n        var touch = e.touches[0];\n        var delta_x = touch.clientX - last_touch_x;\n        var delta_y = touch.clientY - last_touch_y;\n\n        // Track pixels moved\n        pixels_moved += Math.abs(delta_x) + Math.abs(delta_y);\n\n        // If only one touch involved, this is mouse move\n        if (touch_count === 1) {\n\n            // Calculate average velocity in Manhatten pixels per millisecond\n            var velocity = pixels_moved / (new Date().getTime() - last_touch_time);\n\n            // Scale mouse movement relative to velocity\n            var scale = 1 + velocity;\n\n            // Update mouse location\n            var position = new Guacamole.Position(guac_touchpad.currentState);\n            position.x += delta_x*scale;\n            position.y += delta_y*scale;\n\n            // Prevent mouse from leaving screen\n            position.x = Math.min(Math.max(0, position.x), element.offsetWidth - 1);\n            position.y = Math.min(Math.max(0, position.y), element.offsetHeight - 1);\n\n            // Fire movement event, if defined\n            guac_touchpad.move(position, e);\n\n            // Update touch location\n            last_touch_x = touch.clientX;\n            last_touch_y = touch.clientY;\n\n        }\n\n        // Interpret two-finger swipe as scrollwheel\n        else if (touch_count === 2) {\n\n            // If change in location passes threshold for scroll\n            if (Math.abs(delta_y) >= guac_touchpad.scrollThreshold) {\n\n                // Decide button based on Y movement direction\n                var button;\n                if (delta_y > 0) button = \"down\";\n                else             button = \"up\";\n\n                guac_touchpad.click(button, e);\n\n                // Only update touch location after a scroll has been\n                // detected\n                last_touch_x = touch.clientX;\n                last_touch_y = touch.clientY;\n\n            }\n\n        }\n\n    }, false);\n\n};\n\n/**\n * Provides cross-browser absolute touch event translation for a given element.\n *\n * Touch events are translated into mouse events as if the touches occurred\n * on a touchscreen (tapping anywhere on the screen clicks at that point,\n * long-press to right-click).\n *\n * @example\n * var touchscreen = new Guacamole.Mouse.Touchscreen(client.getDisplay().getElement());\n *\n * // Emulate a mouse using touchscreen-style gestures, forwarding all mouse\n * // interaction over Guacamole connection\n * touchscreen.onEach(['mousedown', 'mousemove', 'mouseup'], function sendMouseEvent(e) {\n *\n *     // Re-show software mouse cursor if possibly hidden by a prior call to\n *     // showCursor(), such as a \"mouseout\" event handler that hides the\n *     // cursor\n *     client.getDisplay().showCursor(true);\n *\n *     client.sendMouseState(e.state, true);\n *\n * });\n *\n * @constructor\n * @augments Guacamole.Mouse.Event.Target\n * @param {!Element} element\n *     The Element to use to provide touch events.\n */\nGuacamole.Mouse.Touchscreen = function Touchscreen(element) {\n\n    Guacamole.Mouse.Event.Target.call(this);\n\n    /**\n     * The \"mouseout\" event will never be fired by Guacamole.Mouse.Touchscreen.\n     *\n     * @ignore\n     * @event Guacamole.Mouse.Touchscreen#mouseout\n     */\n\n    /**\n     * Reference to this Guacamole.Mouse.Touchscreen.\n     *\n     * @private\n     * @type {!Guacamole.Mouse.Touchscreen}\n     */\n    var guac_touchscreen = this;\n\n    /**\n     * Whether a gesture is known to be in progress. If false, touch events\n     * will be ignored.\n     *\n     * @private\n     * @type {!boolean}\n     */\n    var gesture_in_progress = false;\n\n    /**\n     * The start X location of a gesture.\n     *\n     * @private\n     * @type {number}\n     */\n    var gesture_start_x = null;\n\n    /**\n     * The start Y location of a gesture.\n     *\n     * @private\n     * @type {number}\n     */\n    var gesture_start_y = null;\n\n    /**\n     * The timeout associated with the delayed, cancellable click release.\n     *\n     * @private\n     * @type {number}\n     */\n    var click_release_timeout = null;\n\n    /**\n     * The timeout associated with long-press for right click.\n     *\n     * @private\n     * @type {number}\n     */\n    var long_press_timeout = null;\n\n    /**\n     * The distance a two-finger touch must move per scrollwheel event, in\n     * pixels.\n     *\n     * @type {!number}\n     */\n    this.scrollThreshold = 20 * (window.devicePixelRatio || 1);\n\n    /**\n     * The maximum number of milliseconds to wait for a touch to end for the\n     * gesture to be considered a click.\n     *\n     * @type {!number}\n     */\n    this.clickTimingThreshold = 250;\n\n    /**\n     * The maximum number of pixels to allow a touch to move for the gesture to\n     * be considered a click.\n     *\n     * @type {!number}\n     */\n    this.clickMoveThreshold = 16 * (window.devicePixelRatio || 1);\n\n    /**\n     * The amount of time a press must be held for long press to be\n     * detected.\n     */\n    this.longPressThreshold = 500;\n\n    /**\n     * Returns whether the given touch event exceeds the movement threshold for\n     * clicking, based on where the touch gesture began.\n     *\n     * @private\n     * @param {!TouchEvent} e\n     *     The touch event to check.\n     *\n     * @return {!boolean}\n     *     true if the movement threshold is exceeded, false otherwise.\n     */\n    function finger_moved(e) {\n        var touch = e.touches[0] || e.changedTouches[0];\n        var delta_x = touch.clientX - gesture_start_x;\n        var delta_y = touch.clientY - gesture_start_y;\n        return Math.sqrt(delta_x*delta_x + delta_y*delta_y) >= guac_touchscreen.clickMoveThreshold;\n    }\n\n    /**\n     * Begins a new gesture at the location of the first touch in the given\n     * touch event.\n     * \n     * @private\n     * @param {!TouchEvent} e\n     *     The touch event beginning this new gesture.\n     */\n    function begin_gesture(e) {\n        var touch = e.touches[0];\n        gesture_in_progress = true;\n        gesture_start_x = touch.clientX;\n        gesture_start_y = touch.clientY;\n    }\n\n    /**\n     * End the current gesture entirely. Wait for all touches to be done before\n     * resuming gesture detection.\n     * \n     * @private\n     */\n    function end_gesture() {\n        window.clearTimeout(click_release_timeout);\n        window.clearTimeout(long_press_timeout);\n        gesture_in_progress = false;\n    }\n\n    element.addEventListener(\"touchend\", function(e) {\n\n        // Do not handle if no gesture\n        if (!gesture_in_progress)\n            return;\n\n        // Ignore if more than one touch\n        if (e.touches.length !== 0 || e.changedTouches.length !== 1) {\n            end_gesture();\n            return;\n        }\n\n        // Long-press, if any, is over\n        window.clearTimeout(long_press_timeout);\n\n        // Always release mouse button if pressed\n        guac_touchscreen.release(Guacamole.Mouse.State.Buttons.LEFT, e);\n\n        // If finger hasn't moved enough to cancel the click\n        if (!finger_moved(e)) {\n\n            e.preventDefault();\n\n            // If not yet pressed, press and start delay release\n            if (!guac_touchscreen.currentState.left) {\n\n                var touch = e.changedTouches[0];\n                guac_touchscreen.move(Guacamole.Position.fromClientPosition(element, touch.clientX, touch.clientY));\n                guac_touchscreen.press(Guacamole.Mouse.State.Buttons.LEFT, e);\n\n                // Release button after a delay, if not canceled\n                click_release_timeout = window.setTimeout(function() {\n                    guac_touchscreen.release(Guacamole.Mouse.State.Buttons.LEFT, e);\n                    end_gesture();\n                }, guac_touchscreen.clickTimingThreshold);\n\n            }\n\n        } // end if finger not moved\n\n    }, false);\n\n    element.addEventListener(\"touchstart\", function(e) {\n\n        // Ignore if more than one touch\n        if (e.touches.length !== 1) {\n            end_gesture();\n            return;\n        }\n\n        e.preventDefault();\n\n        // New touch begins a new gesture\n        begin_gesture(e);\n\n        // Keep button pressed if tap after left click\n        window.clearTimeout(click_release_timeout);\n\n        // Click right button if this turns into a long-press\n        long_press_timeout = window.setTimeout(function() {\n            var touch = e.touches[0];\n            guac_touchscreen.move(Guacamole.Position.fromClientPosition(element, touch.clientX, touch.clientY));\n            guac_touchscreen.click(Guacamole.Mouse.State.Buttons.RIGHT, e);\n            end_gesture();\n        }, guac_touchscreen.longPressThreshold);\n\n    }, false);\n\n    element.addEventListener(\"touchmove\", function(e) {\n\n        // Do not handle if no gesture\n        if (!gesture_in_progress)\n            return;\n\n        // Cancel long press if finger moved\n        if (finger_moved(e))\n            window.clearTimeout(long_press_timeout);\n\n        // Ignore if more than one touch\n        if (e.touches.length !== 1) {\n            end_gesture();\n            return;\n        }\n\n        // Update mouse position if dragging\n        if (guac_touchscreen.currentState.left) {\n\n            e.preventDefault();\n\n            // Update state\n            var touch = e.touches[0];\n            guac_touchscreen.move(Guacamole.Position.fromClientPosition(element, touch.clientX, touch.clientY), e);\n\n        }\n\n    }, false);\n\n};\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/**\n * The namespace used by the Guacamole JavaScript API. Absolutely all classes\n * defined by the Guacamole JavaScript API will be within this namespace.\n *\n * @namespace\n */\nvar Guacamole = Guacamole || {};\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar Guacamole = Guacamole || {};\n\n/**\n * An object used by the Guacamole client to house arbitrarily-many named\n * input and output streams.\n * \n * @constructor\n * @param {!Guacamole.Client} client\n *     The client owning this object.\n *\n * @param {!number} index\n *     The index of this object.\n */\nGuacamole.Object = function guacamoleObject(client, index) {\n\n    /**\n     * Reference to this Guacamole.Object.\n     *\n     * @private\n     * @type {!Guacamole.Object}\n     */\n    var guacObject = this;\n\n    /**\n     * Map of stream name to corresponding queue of callbacks. The queue of\n     * callbacks is guaranteed to be in order of request.\n     *\n     * @private\n     * @type {!Object.<string, function[]>}\n     */\n    var bodyCallbacks = {};\n\n    /**\n     * Removes and returns the callback at the head of the callback queue for\n     * the stream having the given name. If no such callbacks exist, null is\n     * returned.\n     *\n     * @private\n     * @param {!string} name\n     *     The name of the stream to retrieve a callback for.\n     *\n     * @returns {function}\n     *     The next callback associated with the stream having the given name,\n     *     or null if no such callback exists.\n     */\n    var dequeueBodyCallback = function dequeueBodyCallback(name) {\n\n        // If no callbacks defined, simply return null\n        var callbacks = bodyCallbacks[name];\n        if (!callbacks)\n            return null;\n\n        // Otherwise, pull off first callback, deleting the queue if empty\n        var callback = callbacks.shift();\n        if (callbacks.length === 0)\n            delete bodyCallbacks[name];\n\n        // Return found callback\n        return callback;\n\n    };\n\n    /**\n     * Adds the given callback to the tail of the callback queue for the stream\n     * having the given name.\n     *\n     * @private\n     * @param {!string} name\n     *     The name of the stream to associate with the given callback.\n     *\n     * @param {!function} callback\n     *     The callback to add to the queue of the stream with the given name.\n     */\n    var enqueueBodyCallback = function enqueueBodyCallback(name, callback) {\n\n        // Get callback queue by name, creating first if necessary\n        var callbacks = bodyCallbacks[name];\n        if (!callbacks) {\n            callbacks = [];\n            bodyCallbacks[name] = callbacks;\n        }\n\n        // Add callback to end of queue\n        callbacks.push(callback);\n\n    };\n\n    /**\n     * The index of this object.\n     *\n     * @type {!number}\n     */\n    this.index = index;\n\n    /**\n     * Called when this object receives the body of a requested input stream.\n     * By default, all objects will invoke the callbacks provided to their\n     * requestInputStream() functions based on the name of the stream\n     * requested. This behavior can be overridden by specifying a different\n     * handler here.\n     *\n     * @event\n     * @param {!Guacamole.InputStream} inputStream\n     *     The input stream of the received body.\n     *\n     * @param {!string} mimetype\n     *     The mimetype of the data being received.\n     *\n     * @param {!string} name\n     *     The name of the stream whose body has been received.\n     */\n    this.onbody = function defaultBodyHandler(inputStream, mimetype, name) {\n\n        // Call queued callback for the received body, if any\n        var callback = dequeueBodyCallback(name);\n        if (callback)\n            callback(inputStream, mimetype);\n\n    };\n\n    /**\n     * Called when this object is being undefined. Once undefined, no further\n     * communication involving this object may occur.\n     * \n     * @event\n     */\n    this.onundefine = null;\n\n    /**\n     * Requests read access to the input stream having the given name. If\n     * successful, a new input stream will be created.\n     *\n     * @param {!string} name\n     *     The name of the input stream to request.\n     *\n     * @param {function} [bodyCallback]\n     *     The callback to invoke when the body of the requested input stream\n     *     is received. This callback will be provided a Guacamole.InputStream\n     *     and its mimetype as its two only arguments. If the onbody handler of\n     *     this object is overridden, this callback will not be invoked.\n     */\n    this.requestInputStream = function requestInputStream(name, bodyCallback) {\n\n        // Queue body callback if provided\n        if (bodyCallback)\n            enqueueBodyCallback(name, bodyCallback);\n\n        // Send request for input stream\n        client.requestObjectInputStream(guacObject.index, name);\n\n    };\n\n    /**\n     * Creates a new output stream associated with this object and having the\n     * given mimetype and name. The legality of a mimetype and name is dictated\n     * by the object itself.\n     *\n     * @param {!string} mimetype\n     *     The mimetype of the data which will be sent to the output stream.\n     *\n     * @param {!string} name\n     *     The defined name of an output stream within this object.\n     *\n     * @returns {!Guacamole.OutputStream}\n     *     An output stream which will write blobs to the named output stream\n     *     of this object.\n     */\n    this.createOutputStream = function createOutputStream(mimetype, name) {\n        return client.createObjectOutputStream(guacObject.index, mimetype, name);\n    };\n\n};\n\n/**\n * The reserved name denoting the root stream of any object. The contents of\n * the root stream MUST be a JSON map of stream name to mimetype.\n *\n * @constant\n * @type {!string}\n */\nGuacamole.Object.ROOT_STREAM = '/';\n\n/**\n * The mimetype of a stream containing JSON which maps available stream names\n * to their corresponding mimetype. The root stream of a Guacamole.Object MUST\n * have this mimetype.\n *\n * @constant\n * @type {!string}\n */\nGuacamole.Object.STREAM_INDEX_MIMETYPE = 'application/vnd.glyptodon.guacamole.stream-index+json';\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar Guacamole = Guacamole || {};\n\n/**\n * Dynamic on-screen keyboard. Given the layout object for an on-screen\n * keyboard, this object will construct a clickable on-screen keyboard with its\n * own key events.\n *\n * @constructor\n * @param {!Guacamole.OnScreenKeyboard.Layout} layout\n *     The layout of the on-screen keyboard to display.\n */\nGuacamole.OnScreenKeyboard = function(layout) {\n\n    /**\n     * Reference to this Guacamole.OnScreenKeyboard.\n     *\n     * @private\n     * @type {!Guacamole.OnScreenKeyboard}\n     */\n    var osk = this;\n\n    /**\n     * Map of currently-set modifiers to the keysym associated with their\n     * original press. When the modifier is cleared, this keysym must be\n     * released.\n     *\n     * @private\n     * @type {!Object.<String, Number>}\n     */\n    var modifierKeysyms = {};\n\n    /**\n     * Map of all key names to their current pressed states. If a key is not\n     * pressed, it may not be in this map at all, but all pressed keys will\n     * have a corresponding mapping to true.\n     *\n     * @private\n     * @type {!Object.<String, Boolean>}\n     */\n    var pressed = {};\n\n    /**\n     * All scalable elements which are part of the on-screen keyboard. Each\n     * scalable element is carefully controlled to ensure the interface layout\n     * and sizing remains constant, even on browsers that would otherwise\n     * experience rounding error due to unit conversions.\n     *\n     * @private\n     * @type {!ScaledElement[]}\n     */\n    var scaledElements = [];\n\n    /**\n     * Adds a CSS class to an element.\n     * \n     * @private\n     * @function\n     * @param {!Element} element\n     *     The element to add a class to.\n     *\n     * @param {!string} classname\n     *     The name of the class to add.\n     */\n    var addClass = function addClass(element, classname) {\n\n        // If classList supported, use that\n        if (element.classList)\n            element.classList.add(classname);\n\n        // Otherwise, simply append the class\n        else\n            element.className += \" \" + classname;\n\n    };\n\n    /**\n     * Removes a CSS class from an element.\n     * \n     * @private\n     * @function\n     * @param {!Element} element\n     *     The element to remove a class from.\n     *\n     * @param {!string} classname\n     *     The name of the class to remove.\n     */\n    var removeClass = function removeClass(element, classname) {\n\n        // If classList supported, use that\n        if (element.classList)\n            element.classList.remove(classname);\n\n        // Otherwise, manually filter out classes with given name\n        else {\n            element.className = element.className.replace(/([^ ]+)[ ]*/g,\n                function removeMatchingClasses(match, testClassname) {\n\n                    // If same class, remove\n                    if (testClassname === classname)\n                        return \"\";\n\n                    // Otherwise, allow\n                    return match;\n                    \n                }\n            );\n        }\n\n    };\n\n    /**\n     * Counter of mouse events to ignore. This decremented by mousemove, and\n     * while non-zero, mouse events will have no effect.\n     *\n     * @private\n     * @type {!number}\n     */\n    var ignoreMouse = 0;\n\n    /**\n     * Ignores all pending mouse events when touch events are the apparent\n     * source. Mouse events are ignored until at least touchMouseThreshold\n     * mouse events occur without corresponding touch events.\n     *\n     * @private\n     */\n    var ignorePendingMouseEvents = function ignorePendingMouseEvents() {\n        ignoreMouse = osk.touchMouseThreshold;\n    };\n\n    /**\n     * An element whose dimensions are maintained according to an arbitrary\n     * scale. The conversion factor for these arbitrary units to pixels is\n     * provided later via a call to scale().\n     *\n     * @private\n     * @constructor\n     * @param {!Element} element\n     *     The element whose scale should be maintained.\n     *\n     * @param {!number} width\n     *     The width of the element, in arbitrary units, relative to other\n     *     ScaledElements.\n     *\n     * @param {!number} height\n     *     The height of the element, in arbitrary units, relative to other\n     *     ScaledElements.\n     *     \n     * @param {boolean} [scaleFont=false]\n     *     Whether the line height and font size should be scaled as well.\n     */\n    var ScaledElement = function ScaledElement(element, width, height, scaleFont) {\n\n        /**\n         * The width of this ScaledElement, in arbitrary units, relative to\n         * other ScaledElements.\n         *\n         * @type {!number}\n         */\n         this.width = width;\n\n        /**\n         * The height of this ScaledElement, in arbitrary units, relative to\n         * other ScaledElements.\n         *\n         * @type {!number}\n         */\n         this.height = height;\n \n        /**\n         * Resizes the associated element, updating its dimensions according to\n         * the given pixels per unit.\n         *\n         * @param {!number} pixels\n         *     The number of pixels to assign per arbitrary unit.\n         */\n        this.scale = function(pixels) {\n\n            // Scale element width/height\n            element.style.width  = (width  * pixels) + \"px\";\n            element.style.height = (height * pixels) + \"px\";\n\n            // Scale font, if requested\n            if (scaleFont) {\n                element.style.lineHeight = (height * pixels) + \"px\";\n                element.style.fontSize   = pixels + \"px\";\n            }\n\n        };\n\n    };\n\n    /**\n     * Returns whether all modifiers having the given names are currently\n     * active.\n     *\n     * @private\n     * @param {!string[]} names\n     *     The names of all modifiers to test.\n     *\n     * @returns {!boolean}\n     *     true if all specified modifiers are pressed, false otherwise.\n     */\n    var modifiersPressed = function modifiersPressed(names) {\n\n        // If any required modifiers are not pressed, return false\n        for (var i=0; i < names.length; i++) {\n\n            // Test whether current modifier is pressed\n            var name = names[i];\n            if (!(name in modifierKeysyms))\n                return false;\n\n        }\n\n        // Otherwise, all required modifiers are pressed\n        return true;\n\n    };\n\n    /**\n     * Returns the single matching Key object associated with the key of the\n     * given name, where that Key object's requirements (such as pressed\n     * modifiers) are all currently satisfied.\n     *\n     * @private\n     * @param {!string} keyName\n     *     The name of the key to retrieve.\n     *\n     * @returns {Guacamole.OnScreenKeyboard.Key}\n     *     The Key object associated with the given name, where that object's\n     *     requirements are all currently satisfied, or null if no such Key\n     *     can be found.\n     */\n    var getActiveKey = function getActiveKey(keyName) {\n\n        // Get key array for given name\n        var keys = osk.keys[keyName];\n        if (!keys)\n            return null;\n\n        // Find last matching key\n        for (var i = keys.length - 1; i >= 0; i--) {\n\n            // Get candidate key\n            var candidate = keys[i];\n\n            // If all required modifiers are pressed, use that key\n            if (modifiersPressed(candidate.requires))\n                return candidate;\n\n        }\n\n        // No valid key\n        return null;\n\n    };\n\n    /**\n     * Presses the key having the given name, updating the associated key\n     * element with the \"guac-keyboard-pressed\" CSS class. If the key is\n     * already pressed, this function has no effect.\n     *\n     * @private\n     * @param {!string} keyName\n     *     The name of the key to press.\n     *\n     * @param {!string} keyElement\n     *     The element associated with the given key.\n     */\n    var press = function press(keyName, keyElement) {\n\n        // Press key if not yet pressed\n        if (!pressed[keyName]) {\n\n            addClass(keyElement, \"guac-keyboard-pressed\");\n\n            // Get current key based on modifier state\n            var key = getActiveKey(keyName);\n\n            // Update modifier state\n            if (key.modifier) {\n\n                // Construct classname for modifier\n                var modifierClass = \"guac-keyboard-modifier-\" + getCSSName(key.modifier);\n\n                // Retrieve originally-pressed keysym, if modifier was already pressed\n                var originalKeysym = modifierKeysyms[key.modifier];\n\n                // Activate modifier if not pressed\n                if (originalKeysym === undefined) {\n                    \n                    addClass(keyboard, modifierClass);\n                    modifierKeysyms[key.modifier] = key.keysym;\n                    \n                    // Send key event only if keysym is meaningful\n                    if (key.keysym && osk.onkeydown)\n                        osk.onkeydown(key.keysym);\n\n                }\n\n                // Deactivate if not pressed\n                else {\n\n                    removeClass(keyboard, modifierClass);\n                    delete modifierKeysyms[key.modifier];\n                    \n                    // Send key event only if original keysym is meaningful\n                    if (originalKeysym && osk.onkeyup)\n                        osk.onkeyup(originalKeysym);\n\n                }\n\n            }\n\n            // If not modifier, send key event now\n            else if (osk.onkeydown)\n                osk.onkeydown(key.keysym);\n\n            // Mark key as pressed\n            pressed[keyName] = true;\n\n        }\n\n    };\n\n    /**\n     * Releases the key having the given name, removing the\n     * \"guac-keyboard-pressed\" CSS class from the associated element. If the\n     * key is already released, this function has no effect.\n     *\n     * @private\n     * @param {!string} keyName\n     *     The name of the key to release.\n     *\n     * @param {!string} keyElement\n     *     The element associated with the given key.\n     */\n    var release = function release(keyName, keyElement) {\n\n        // Release key if currently pressed\n        if (pressed[keyName]) {\n\n            removeClass(keyElement, \"guac-keyboard-pressed\");\n\n            // Get current key based on modifier state\n            var key = getActiveKey(keyName);\n\n            // Send key event if not a modifier key\n            if (!key.modifier && osk.onkeyup)\n                osk.onkeyup(key.keysym);\n\n            // Mark key as released\n            pressed[keyName] = false;\n\n        }\n\n    };\n\n    // Create keyboard\n    var keyboard = document.createElement(\"div\");\n    keyboard.className = \"guac-keyboard\";\n\n    // Do not allow selection or mouse movement to propagate/register.\n    keyboard.onselectstart =\n    keyboard.onmousemove   =\n    keyboard.onmouseup     =\n    keyboard.onmousedown   = function handleMouseEvents(e) {\n\n        // If ignoring events, decrement counter\n        if (ignoreMouse)\n            ignoreMouse--;\n\n        e.stopPropagation();\n        return false;\n\n    };\n\n    /**\n     * The number of mousemove events to require before re-enabling mouse\n     * event handling after receiving a touch event.\n     *\n     * @type {!number}\n     */\n    this.touchMouseThreshold = 3;\n\n    /**\n     * Fired whenever the user presses a key on this Guacamole.OnScreenKeyboard.\n     * \n     * @event\n     * @param {!number} keysym\n     *     The keysym of the key being pressed.\n     */\n    this.onkeydown = null;\n\n    /**\n     * Fired whenever the user releases a key on this Guacamole.OnScreenKeyboard.\n     * \n     * @event\n     * @param {!number} keysym\n     *     The keysym of the key being released.\n     */\n    this.onkeyup = null;\n\n    /**\n     * The keyboard layout provided at time of construction.\n     *\n     * @type {!Guacamole.OnScreenKeyboard.Layout}\n     */\n    this.layout = new Guacamole.OnScreenKeyboard.Layout(layout);\n\n    /**\n     * Returns the element containing the entire on-screen keyboard.\n     *\n     * @returns {!Element}\n     *     The element containing the entire on-screen keyboard.\n     */\n    this.getElement = function() {\n        return keyboard;\n    };\n\n    /**\n     * Resizes all elements within this Guacamole.OnScreenKeyboard such that\n     * the width is close to but does not exceed the specified width. The\n     * height of the keyboard is determined based on the width.\n     * \n     * @param {!number} width\n     *     The width to resize this Guacamole.OnScreenKeyboard to, in pixels.\n     */\n    this.resize = function(width) {\n\n        // Get pixel size of a unit\n        var unit = Math.floor(width * 10 / osk.layout.width) / 10;\n\n        // Resize all scaled elements\n        for (var i=0; i<scaledElements.length; i++) {\n            var scaledElement = scaledElements[i];\n            scaledElement.scale(unit);\n        }\n\n    };\n\n    /**\n     * Given the name of a key and its corresponding definition, which may be\n     * an array of keys objects, a number (keysym), a string (key title), or a\n     * single key object, returns an array of key objects, deriving any missing\n     * properties as needed, and ensuring the key name is defined.\n     *\n     * @private\n     * @param {!string} name\n     *     The name of the key being coerced into an array of Key objects.\n     *\n     * @param {!(number|string|Guacamole.OnScreenKeyboard.Key|Guacamole.OnScreenKeyboard.Key[])} object\n     *     The object defining the behavior of the key having the given name,\n     *     which may be the title of the key (a string), the keysym (a number),\n     *     a single Key object, or an array of Key objects.\n     *     \n     * @returns {!Guacamole.OnScreenKeyboard.Key[]}\n     *     An array of all keys associated with the given name.\n     */\n    var asKeyArray = function asKeyArray(name, object) {\n\n        // If already an array, just coerce into a true Key[] \n        if (object instanceof Array) {\n            var keys = [];\n            for (var i=0; i < object.length; i++) {\n                keys.push(new Guacamole.OnScreenKeyboard.Key(object[i], name));\n            }\n            return keys;\n        }\n\n        // Derive key object from keysym if that's all we have\n        if (typeof object === 'number') {\n            return [new Guacamole.OnScreenKeyboard.Key({\n                name   : name,\n                keysym : object\n            })];\n        }\n\n        // Derive key object from title if that's all we have\n        if (typeof object === 'string') {\n            return [new Guacamole.OnScreenKeyboard.Key({\n                name  : name,\n                title : object\n            })];\n        }\n\n        // Otherwise, assume it's already a key object, just not an array\n        return [new Guacamole.OnScreenKeyboard.Key(object, name)];\n\n    };\n\n    /**\n     * Converts the rather forgiving key mapping allowed by\n     * Guacamole.OnScreenKeyboard.Layout into a rigorous mapping of key name\n     * to key definition, where the key definition is always an array of Key\n     * objects.\n     *\n     * @private\n     * @param {!Object.<string, number|string|Guacamole.OnScreenKeyboard.Key|Guacamole.OnScreenKeyboard.Key[]>} keys\n     *     A mapping of key name to key definition, where the key definition is\n     *     the title of the key (a string), the keysym (a number), a single\n     *     Key object, or an array of Key objects.\n     *\n     * @returns {!Object.<string, Guacamole.OnScreenKeyboard.Key[]>}\n     *     A more-predictable mapping of key name to key definition, where the\n     *     key definition is always simply an array of Key objects.\n     */\n    var getKeys = function getKeys(keys) {\n\n        var keyArrays = {};\n\n        // Coerce all keys into individual key arrays\n        for (var name in layout.keys) {\n            keyArrays[name] = asKeyArray(name, keys[name]);\n        }\n\n        return keyArrays;\n\n    };\n\n    /**\n     * Map of all key names to their corresponding set of keys. Each key name\n     * may correspond to multiple keys due to the effect of modifiers.\n     *\n     * @type {!Object.<string, Guacamole.OnScreenKeyboard.Key[]>}\n     */\n    this.keys = getKeys(layout.keys);\n\n    /**\n     * Given an arbitrary string representing the name of some component of the\n     * on-screen keyboard, returns a string formatted for use as a CSS class\n     * name. The result will be lowercase. Word boundaries previously denoted\n     * by CamelCase will be replaced by individual hyphens, as will all\n     * contiguous non-alphanumeric characters.\n     *\n     * @private\n     * @param {!string} name\n     *     An arbitrary string representing the name of some component of the\n     *     on-screen keyboard.\n     *\n     * @returns {!string}\n     *     A string formatted for use as a CSS class name.\n     */\n    var getCSSName = function getCSSName(name) {\n\n        // Convert name from possibly-CamelCase to hyphenated lowercase\n        var cssName = name\n               .replace(/([a-z])([A-Z])/g, '$1-$2')\n               .replace(/[^A-Za-z0-9]+/g, '-')\n               .toLowerCase();\n\n        return cssName;\n\n    };\n\n    /**\n     * Appends DOM elements to the given element as dictated by the layout\n     * structure object provided. If a name is provided, an additional CSS\n     * class, prepended with \"guac-keyboard-\", will be added to the top-level\n     * element.\n     * \n     * If the layout structure object is an array, all elements within that\n     * array will be recursively appended as children of a group, and the\n     * top-level element will be given the CSS class \"guac-keyboard-group\".\n     *\n     * If the layout structure object is an object, all properties within that\n     * object will be recursively appended as children of a group, and the\n     * top-level element will be given the CSS class \"guac-keyboard-group\". The\n     * name of each property will be applied as the name of each child object\n     * for the sake of CSS. Each property will be added in sorted order.\n     *\n     * If the layout structure object is a string, the key having that name\n     * will be appended. The key will be given the CSS class\n     * \"guac-keyboard-key\" and \"guac-keyboard-key-NAME\", where NAME is the name\n     * of the key. If the name of the key is a single character, this will\n     * first be transformed into the C-style hexadecimal literal for the\n     * Unicode codepoint of that character. For example, the key \"A\" would\n     * become \"guac-keyboard-key-0x41\".\n     * \n     * If the layout structure object is a number, a gap of that size will be\n     * inserted. The gap will be given the CSS class \"guac-keyboard-gap\", and\n     * will be scaled according to the same size units as each key.\n     *\n     * @private\n     * @param {!Element} element\n     *     The element to append elements to.\n     *\n     * @param {!(Array|object|string|number)} object\n     *     The layout structure object to use when constructing the elements to\n     *     append.\n     *\n     * @param {string} [name]\n     *     The name of the top-level element being appended, if any.\n     */\n    var appendElements = function appendElements(element, object, name) {\n\n        var i;\n\n        // Create div which will become the group or key\n        var div = document.createElement('div');\n\n        // Add class based on name, if name given\n        if (name)\n            addClass(div, 'guac-keyboard-' + getCSSName(name));\n\n        // If an array, append each element\n        if (object instanceof Array) {\n\n            // Add group class\n            addClass(div, 'guac-keyboard-group');\n\n            // Append all elements of array\n            for (i=0; i < object.length; i++)\n                appendElements(div, object[i]);\n\n        }\n\n        // If an object, append each property value\n        else if (object instanceof Object) {\n\n            // Add group class\n            addClass(div, 'guac-keyboard-group');\n\n            // Append all children, sorted by name\n            var names = Object.keys(object).sort();\n            for (i=0; i < names.length; i++) {\n                var name = names[i];\n                appendElements(div, object[name], name);\n            }\n\n        }\n\n        // If a number, create as a gap \n        else if (typeof object === 'number') {\n\n            // Add gap class\n            addClass(div, 'guac-keyboard-gap');\n\n            // Maintain scale\n            scaledElements.push(new ScaledElement(div, object, object));\n\n        }\n\n        // If a string, create as a key\n        else if (typeof object === 'string') {\n\n            // If key name is only one character, use codepoint for name\n            var keyName = object;\n            if (keyName.length === 1)\n                keyName = '0x' + keyName.charCodeAt(0).toString(16);\n\n            // Add key container class\n            addClass(div, 'guac-keyboard-key-container');\n\n            // Create key element which will contain all possible caps\n            var keyElement = document.createElement('div');\n            keyElement.className = 'guac-keyboard-key '\n                                 + 'guac-keyboard-key-' + getCSSName(keyName);\n\n            // Add all associated keys as caps within DOM\n            var keys = osk.keys[object];\n            if (keys) {\n                for (i=0; i < keys.length; i++) {\n\n                    // Get current key\n                    var key = keys[i];\n\n                    // Create cap element for key\n                    var capElement = document.createElement('div');\n                    capElement.className   = 'guac-keyboard-cap';\n                    capElement.textContent = key.title;\n\n                    // Add classes for any requirements\n                    for (var j=0; j < key.requires.length; j++) {\n                        var requirement = key.requires[j];\n                        addClass(capElement, 'guac-keyboard-requires-' + getCSSName(requirement));\n                        addClass(keyElement, 'guac-keyboard-uses-'     + getCSSName(requirement));\n                    }\n\n                    // Add cap to key within DOM\n                    keyElement.appendChild(capElement);\n\n                }\n            }\n\n            // Add key to DOM, maintain scale\n            div.appendChild(keyElement);\n            scaledElements.push(new ScaledElement(div, osk.layout.keyWidths[object] || 1, 1, true));\n\n            /**\n             * Handles a touch event which results in the pressing of an OSK\n             * key. Touch events will result in mouse events being ignored for\n             * touchMouseThreshold events.\n             *\n             * @private\n             * @param {!TouchEvent} e\n             *     The touch event being handled.\n             */\n            var touchPress = function touchPress(e) {\n                e.preventDefault();\n                ignoreMouse = osk.touchMouseThreshold;\n                press(object, keyElement);\n            };\n\n            /**\n             * Handles a touch event which results in the release of an OSK\n             * key. Touch events will result in mouse events being ignored for\n             * touchMouseThreshold events.\n             *\n             * @private\n             * @param {!TouchEvent} e\n             *     The touch event being handled.\n             */\n            var touchRelease = function touchRelease(e) {\n                e.preventDefault();\n                ignoreMouse = osk.touchMouseThreshold;\n                release(object, keyElement);\n            };\n\n            /**\n             * Handles a mouse event which results in the pressing of an OSK\n             * key. If mouse events are currently being ignored, this handler\n             * does nothing.\n             *\n             * @private\n             * @param {!MouseEvent} e\n             *     The touch event being handled.\n             */\n            var mousePress = function mousePress(e) {\n                e.preventDefault();\n                if (ignoreMouse === 0)\n                    press(object, keyElement);\n            };\n\n            /**\n             * Handles a mouse event which results in the release of an OSK\n             * key. If mouse events are currently being ignored, this handler\n             * does nothing.\n             *\n             * @private\n             * @param {!MouseEvent} e\n             *     The touch event being handled.\n             */\n            var mouseRelease = function mouseRelease(e) {\n                e.preventDefault();\n                if (ignoreMouse === 0)\n                    release(object, keyElement);\n            };\n\n            // Handle touch events on key\n            keyElement.addEventListener(\"touchstart\", touchPress,   true);\n            keyElement.addEventListener(\"touchend\",   touchRelease, true);\n\n            // Handle mouse events on key\n            keyElement.addEventListener(\"mousedown\", mousePress,   true);\n            keyElement.addEventListener(\"mouseup\",   mouseRelease, true);\n            keyElement.addEventListener(\"mouseout\",  mouseRelease, true);\n\n        } // end if object is key name\n\n        // Add newly-created group/key\n        element.appendChild(div);\n\n    };\n\n    // Create keyboard layout in DOM\n    appendElements(keyboard, layout.layout);\n\n};\n\n/**\n * Represents an entire on-screen keyboard layout, including all available\n * keys, their behaviors, and their relative position and sizing.\n *\n * @constructor\n * @param {!(Guacamole.OnScreenKeyboard.Layout|object)} template\n *     The object whose identically-named properties will be used to initialize\n *     the properties of this layout.\n */\nGuacamole.OnScreenKeyboard.Layout = function(template) {\n\n    /**\n     * The language of keyboard layout, such as \"en_US\". This property is for\n     * informational purposes only, but it is recommend to conform to the\n     * [language code]_[country code] format.\n     *\n     * @type {!string}\n     */\n    this.language = template.language;\n\n    /**\n     * The type of keyboard layout, such as \"qwerty\". This property is for\n     * informational purposes only, and does not conform to any standard.\n     *\n     * @type {!string}\n     */\n    this.type = template.type;\n\n    /**\n     * Map of key name to corresponding keysym, title, or key object. If only\n     * the keysym or title is provided, the key object will be created\n     * implicitly. In all cases, the name property of the key object will be\n     * taken from the name given in the mapping.\n     *\n     * @type {!Object.<string, number|string|Guacamole.OnScreenKeyboard.Key|Guacamole.OnScreenKeyboard.Key[]>}\n     */\n    this.keys = template.keys;\n\n    /**\n     * Arbitrarily nested, arbitrarily grouped key names. The contents of the\n     * layout will be traversed to produce an identically-nested grouping of\n     * keys in the DOM tree. All strings will be transformed into their\n     * corresponding sets of keys, while all objects and arrays will be\n     * transformed into named groups and anonymous groups respectively. Any\n     * numbers present will be transformed into gaps of that size, scaled\n     * according to the same units as each key.\n     *\n     * @type {!object}\n     */\n    this.layout = template.layout;\n\n    /**\n     * The width of the entire keyboard, in arbitrary units. The width of each\n     * key is relative to this width, as both width values are assumed to be in\n     * the same units. The conversion factor between these units and pixels is\n     * derived later via a call to resize() on the Guacamole.OnScreenKeyboard.\n     *\n     * @type {!number}\n     */\n    this.width = template.width;\n\n    /**\n     * The width of each key, in arbitrary units, relative to other keys in\n     * this layout. The true pixel size of each key will be determined by the\n     * overall size of the keyboard. If not defined here, the width of each\n     * key will default to 1.\n     *\n     * @type {!Object.<string, number>}\n     */\n    this.keyWidths = template.keyWidths || {};\n\n};\n\n/**\n * Represents a single key, or a single possible behavior of a key. Each key\n * on the on-screen keyboard must have at least one associated\n * Guacamole.OnScreenKeyboard.Key, whether that key is explicitly defined or\n * implied, and may have multiple Guacamole.OnScreenKeyboard.Key if behavior\n * depends on modifier states.\n *\n * @constructor\n * @param {!(Guacamole.OnScreenKeyboard.Key|object)} template\n *     The object whose identically-named properties will be used to initialize\n *     the properties of this key.\n *     \n * @param {string} [name]\n *     The name to use instead of any name provided within the template, if\n *     any. If omitted, the name within the template will be used, assuming the\n *     template contains a name.\n */\nGuacamole.OnScreenKeyboard.Key = function(template, name) {\n\n    /**\n     * The unique name identifying this key within the keyboard layout.\n     *\n     * @type {!string}\n     */\n    this.name = name || template.name;\n\n    /**\n     * The human-readable title that will be displayed to the user within the\n     * key. If not provided, this will be derived from the key name.\n     *\n     * @type {!string}\n     */\n    this.title = template.title || this.name;\n\n    /**\n     * The keysym to be pressed/released when this key is pressed/released. If\n     * not provided, this will be derived from the title if the title is a\n     * single character.\n     *\n     * @type {number}\n     */\n    this.keysym = template.keysym || (function deriveKeysym(title) {\n\n        // Do not derive keysym if title is not exactly one character\n        if (!title || title.length !== 1)\n            return null;\n\n        // For characters between U+0000 and U+00FF, the keysym is the codepoint\n        var charCode = title.charCodeAt(0);\n        if (charCode >= 0x0000 && charCode <= 0x00FF)\n            return charCode;\n\n        // For characters between U+0100 and U+10FFFF, the keysym is the codepoint or'd with 0x01000000\n        if (charCode >= 0x0100 && charCode <= 0x10FFFF)\n            return 0x01000000 | charCode;\n\n        // Unable to derive keysym\n        return null;\n\n    })(this.title);\n\n    /**\n     * The name of the modifier set when the key is pressed and cleared when\n     * this key is released, if any. The names of modifiers are distinct from\n     * the names of keys; both the \"RightShift\" and \"LeftShift\" keys may set\n     * the \"shift\" modifier, for example. By default, the key will affect no\n     * modifiers.\n     * \n     * @type {string}\n     */\n    this.modifier = template.modifier;\n\n    /**\n     * An array containing the names of each modifier required for this key to\n     * have an effect. For example, a lowercase letter may require nothing,\n     * while an uppercase letter would require \"shift\", assuming the Shift key\n     * is named \"shift\" within the layout. By default, the key will require\n     * no modifiers.\n     *\n     * @type {!string[]}\n     */\n    this.requires = template.requires || [];\n\n};\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar Guacamole = Guacamole || {};\n\n/**\n * Abstract stream which can receive data.\n * \n * @constructor\n * @param {!Guacamole.Client} client\n *     The client owning this stream.\n *\n * @param {!number} index\n *     The index of this stream.\n */\nGuacamole.OutputStream = function(client, index) {\n\n    /**\n     * Reference to this stream.\n     *\n     * @private\n     * @type {!Guacamole.OutputStream}\n     */\n    var guac_stream = this;\n\n    /**\n     * The index of this stream.\n     * @type {!number}\n     */\n    this.index = index;\n\n    /**\n     * Fired whenever an acknowledgement is received from the server, indicating\n     * that a stream operation has completed, or an error has occurred.\n     * \n     * @event\n     * @param {!Guacamole.Status} status\n     *     The status of the operation.\n     */\n    this.onack = null;\n\n    /**\n     * Writes the given base64-encoded data to this stream as a blob.\n     * \n     * @param {!string} data\n     *     The base64-encoded data to send.\n     */\n    this.sendBlob = function(data) {\n        client.sendBlob(guac_stream.index, data);\n    };\n\n    /**\n     * Closes this stream.\n     */\n    this.sendEnd = function() {\n        client.endStream(guac_stream.index);\n    };\n\n};\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar Guacamole = Guacamole || {};\n\n/**\n * Simple Guacamole protocol parser that invokes an oninstruction event when\n * full instructions are available from data received via receive().\n * \n * @constructor\n */\nGuacamole.Parser = function() {\n\n    /**\n     * Reference to this parser.\n     * @private\n     */\n    var parser = this;\n\n    /**\n     * Current buffer of received data. This buffer grows until a full\n     * element is available. After a full element is available, that element\n     * is flushed into the element buffer.\n     * \n     * @private\n     */\n    var buffer = \"\";\n\n    /**\n     * Buffer of all received, complete elements. After an entire instruction\n     * is read, this buffer is flushed, and a new instruction begins.\n     * \n     * @private\n     */\n    var element_buffer = [];\n\n    // The location of the last element's terminator\n    var element_end = -1;\n\n    // Where to start the next length search or the next element\n    var start_index = 0;\n\n    /**\n     * Appends the given instruction data packet to the internal buffer of\n     * this Guacamole.Parser, executing all completed instructions at\n     * the beginning of this buffer, if any.\n     *\n     * @param {!string} packet\n     *     The instruction data to receive.\n     */\n    this.receive = function(packet) {\n\n        // Truncate buffer as necessary\n        if (start_index > 4096 && element_end >= start_index) {\n\n            buffer = buffer.substring(start_index);\n\n            // Reset parse relative to truncation\n            element_end -= start_index;\n            start_index = 0;\n\n        }\n\n        // Append data to buffer\n        buffer += packet;\n\n        // While search is within currently received data\n        while (element_end < buffer.length) {\n\n            // If we are waiting for element data\n            if (element_end >= start_index) {\n\n                // We now have enough data for the element. Parse.\n                var element = buffer.substring(start_index, element_end);\n                var terminator = buffer.substring(element_end, element_end+1);\n\n                // Add element to array\n                element_buffer.push(element);\n\n                // If last element, handle instruction\n                if (terminator == \";\") {\n\n                    // Get opcode\n                    var opcode = element_buffer.shift();\n\n                    // Call instruction handler.\n                    if (parser.oninstruction != null)\n                        parser.oninstruction(opcode, element_buffer);\n\n                    // Clear elements\n                    element_buffer.length = 0;\n\n                }\n                else if (terminator != ',')\n                    throw new Error(\"Illegal terminator.\");\n\n                // Start searching for length at character after\n                // element terminator\n                start_index = element_end + 1;\n\n            }\n\n            // Search for end of length\n            var length_end = buffer.indexOf(\".\", start_index);\n            if (length_end != -1) {\n\n                // Parse length\n                var length = parseInt(buffer.substring(element_end+1, length_end));\n                if (isNaN(length))\n                    throw new Error(\"Non-numeric character in element length.\");\n\n                // Calculate start of element\n                start_index = length_end + 1;\n\n                // Calculate location of element terminator\n                element_end = start_index + length;\n\n            }\n            \n            // If no period yet, continue search when more data\n            // is received\n            else {\n                start_index = buffer.length;\n                break;\n            }\n\n        } // end parse loop\n\n    };\n\n    /**\n     * Fired once for every complete Guacamole instruction received, in order.\n     * \n     * @event\n     * @param {!string} opcode\n     *     The Guacamole instruction opcode.\n     *\n     * @param {!string[]} parameters\n     *     The parameters provided for the instruction, if any.\n     */\n    this.oninstruction = null;\n\n};\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar Guacamole = Guacamole || {};\n\n/**\n * A position in 2-D space.\n *\n * @constructor\n * @param {Guacamole.Position|object} [template={}]\n *     The object whose properties should be copied within the new\n *     Guacamole.Position.\n */\nGuacamole.Position = function Position(template) {\n\n    template = template || {};\n\n    /**\n     * The current X position, in pixels.\n     *\n     * @type {!number}\n     * @default 0\n     */\n    this.x = template.x || 0;\n\n    /**\n     * The current Y position, in pixels.\n     *\n     * @type {!number}\n     * @default 0\n     */\n    this.y = template.y || 0;\n\n    /**\n     * Assigns the position represented by the given element and\n     * clientX/clientY coordinates. The clientX and clientY coordinates are\n     * relative to the browser viewport and are commonly available within\n     * JavaScript event objects. The final position is translated to\n     * coordinates that are relative the given element.\n     *\n     * @param {!Element} element\n     *     The element the coordinates should be relative to.\n     *\n     * @param {!number} clientX\n     *     The viewport-relative X coordinate to translate.\n     *\n     * @param {!number} clientY\n     *     The viewport-relative Y coordinate to translate.\n     */\n    this.fromClientPosition = function fromClientPosition(element, clientX, clientY) {\n\n        this.x = clientX - element.offsetLeft;\n        this.y = clientY - element.offsetTop;\n\n        // This is all JUST so we can get the position within the element\n        var parent = element.offsetParent;\n        while (parent && !(parent === document.body)) {\n            this.x -= parent.offsetLeft - parent.scrollLeft;\n            this.y -= parent.offsetTop  - parent.scrollTop;\n\n            parent = parent.offsetParent;\n        }\n\n        // Element ultimately depends on positioning within document body,\n        // take document scroll into account.\n        if (parent) {\n            var documentScrollLeft = document.body.scrollLeft || document.documentElement.scrollLeft;\n            var documentScrollTop = document.body.scrollTop || document.documentElement.scrollTop;\n\n            this.x -= parent.offsetLeft - documentScrollLeft;\n            this.y -= parent.offsetTop  - documentScrollTop;\n        }\n\n    };\n\n};\n\n/**\n * Returns a new {@link Guacamole.Position} representing the relative position\n * of the given clientX/clientY coordinates within the given element. The\n * clientX and clientY coordinates are relative to the browser viewport and are\n * commonly available within JavaScript event objects. The final position is\n * translated to  coordinates that are relative the given element.\n *\n * @param {!Element} element\n *     The element the coordinates should be relative to.\n *\n * @param {!number} clientX\n *     The viewport-relative X coordinate to translate.\n *\n * @param {!number} clientY\n *     The viewport-relative Y coordinate to translate.\n *\n * @returns {!Guacamole.Position}\n *     A new Guacamole.Position representing the relative position of the given\n *     client coordinates.\n */\nGuacamole.Position.fromClientPosition = function fromClientPosition(element, clientX, clientY) {\n    var position = new Guacamole.Position();\n    position.fromClientPosition(element, clientX, clientY);\n    return position;\n};\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar Guacamole = Guacamole || {};\n\n/**\n * A description of the format of raw PCM audio, such as that used by\n * Guacamole.RawAudioPlayer and Guacamole.RawAudioRecorder. This object\n * describes the number of bytes per sample, the number of channels, and the\n * overall sample rate.\n *\n * @constructor\n * @param {!(Guacamole.RawAudioFormat|object)} template\n *     The object whose properties should be copied into the corresponding\n *     properties of the new Guacamole.RawAudioFormat.\n */\nGuacamole.RawAudioFormat = function RawAudioFormat(template) {\n\n    /**\n     * The number of bytes in each sample of audio data. This value is\n     * independent of the number of channels.\n     *\n     * @type {!number}\n     */\n    this.bytesPerSample = template.bytesPerSample;\n\n    /**\n     * The number of audio channels (ie: 1 for mono, 2 for stereo).\n     *\n     * @type {!number}\n     */\n    this.channels = template.channels;\n\n    /**\n     * The number of samples per second, per channel.\n     *\n     * @type {!number}\n     */\n    this.rate = template.rate;\n\n};\n\n/**\n * Parses the given mimetype, returning a new Guacamole.RawAudioFormat\n * which describes the type of raw audio data represented by that mimetype. If\n * the mimetype is not a supported raw audio data mimetype, null is returned.\n *\n * @param {!string} mimetype\n *     The audio mimetype to parse.\n *\n * @returns {Guacamole.RawAudioFormat}\n *     A new Guacamole.RawAudioFormat which describes the type of raw\n *     audio data represented by the given mimetype, or null if the given\n *     mimetype is not supported.\n */\nGuacamole.RawAudioFormat.parse = function parseFormat(mimetype) {\n\n    var bytesPerSample;\n\n    // Rate is absolutely required - if null is still present later, the\n    // mimetype must not be supported\n    var rate = null;\n\n    // Default for both \"audio/L8\" and \"audio/L16\" is one channel\n    var channels = 1;\n\n    // \"audio/L8\" has one byte per sample\n    if (mimetype.substring(0, 9) === 'audio/L8;') {\n        mimetype = mimetype.substring(9);\n        bytesPerSample = 1;\n    }\n\n    // \"audio/L16\" has two bytes per sample\n    else if (mimetype.substring(0, 10) === 'audio/L16;') {\n        mimetype = mimetype.substring(10);\n        bytesPerSample = 2;\n    }\n\n    // All other types are unsupported\n    else\n        return null;\n\n    // Parse all parameters\n    var parameters = mimetype.split(',');\n    for (var i = 0; i < parameters.length; i++) {\n\n        var parameter = parameters[i];\n\n        // All parameters must have an equals sign separating name from value\n        var equals = parameter.indexOf('=');\n        if (equals === -1)\n            return null;\n\n        // Parse name and value from parameter string\n        var name  = parameter.substring(0, equals);\n        var value = parameter.substring(equals+1);\n\n        // Handle each supported parameter\n        switch (name) {\n\n            // Number of audio channels\n            case 'channels':\n                channels = parseInt(value);\n                break;\n\n            // Sample rate\n            case 'rate':\n                rate = parseInt(value);\n                break;\n\n            // All other parameters are unsupported\n            default:\n                return null;\n\n        }\n\n    };\n\n    // The rate parameter is required\n    if (rate === null)\n        return null;\n\n    // Return parsed format details\n    return new Guacamole.RawAudioFormat({\n        bytesPerSample : bytesPerSample,\n        channels       : channels,\n        rate           : rate\n    });\n\n};\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar Guacamole = Guacamole || {};\n\n/**\n * A recording of a Guacamole session. Given a {@link Guacamole.Tunnel}, the\n * Guacamole.SessionRecording automatically handles incoming Guacamole\n * instructions, storing them for playback. Playback of the recording may be\n * controlled through function calls to the Guacamole.SessionRecording, even\n * while the recording has not yet finished being created or downloaded.\n *\n * @constructor\n * @param {!Guacamole.Tunnel} tunnel\n *     The Guacamole.Tunnel from which the instructions of the recording should\n *     be read.\n */\nGuacamole.SessionRecording = function SessionRecording(tunnel) {\n\n    /**\n     * Reference to this Guacamole.SessionRecording.\n     *\n     * @private\n     * @type {!Guacamole.SessionRecording}\n     */\n    var recording = this;\n\n    /**\n     * The minimum number of characters which must have been read between\n     * keyframes.\n     *\n     * @private\n     * @constant\n     * @type {!number}\n     */\n    var KEYFRAME_CHAR_INTERVAL = 16384;\n\n    /**\n     * The minimum number of milliseconds which must elapse between keyframes.\n     *\n     * @private\n     * @constant\n     * @type {!number}\n     */\n    var KEYFRAME_TIME_INTERVAL = 5000;\n\n    /**\n     * The maximum amount of time to spend in any particular seek operation\n     * before returning control to the main thread, in milliseconds. Seek\n     * operations exceeding this amount of time will proceed asynchronously.\n     *\n     * @private\n     * @constant\n     * @type {!number}\n     */\n    var MAXIMUM_SEEK_TIME = 5;\n\n    /**\n     * All frames parsed from the provided tunnel.\n     *\n     * @private\n     * @type {!Guacamole.SessionRecording._Frame[]}\n     */\n    var frames = [];\n\n    /**\n     * All instructions which have been read since the last frame was added to\n     * the frames array.\n     *\n     * @private\n     * @type {!Guacamole.SessionRecording._Frame.Instruction[]}\n     */\n    var instructions = [];\n\n    /**\n     * The approximate number of characters which have been read from the\n     * provided tunnel since the last frame was flagged for use as a keyframe.\n     *\n     * @private\n     * @type {!number}\n     */\n    var charactersSinceLastKeyframe = 0;\n\n    /**\n     * The timestamp of the last frame which was flagged for use as a keyframe.\n     * If no timestamp has yet been flagged, this will be 0.\n     *\n     * @private\n     * @type {!number}\n     */\n    var lastKeyframeTimestamp = 0;\n\n    /**\n     * Tunnel which feeds arbitrary instructions to the client used by this\n     * Guacamole.SessionRecording for playback of the session recording.\n     *\n     * @private\n     * @type {!Guacamole.SessionRecording._PlaybackTunnel}\n     */\n    var playbackTunnel = new Guacamole.SessionRecording._PlaybackTunnel();\n\n    /**\n     * Guacamole.Client instance used for visible playback of the session\n     * recording.\n     *\n     * @private\n     * @type {!Guacamole.Client}\n     */\n    var playbackClient = new Guacamole.Client(playbackTunnel);\n\n    /**\n     * The current frame rendered within the playback client. If no frame is\n     * yet rendered, this will be -1.\n     *\n     * @private\n     * @type {!number}\n     */\n    var currentFrame = -1;\n\n    /**\n     * The timestamp of the frame when playback began, in milliseconds. If\n     * playback is not in progress, this will be null.\n     *\n     * @private\n     * @type {number}\n     */\n    var startVideoTimestamp = null;\n\n    /**\n     * The real-world timestamp when playback began, in milliseconds. If\n     * playback is not in progress, this will be null.\n     *\n     * @private\n     * @type {number}\n     */\n    var startRealTimestamp = null;\n\n    /**\n     * The ID of the timeout which will continue the in-progress seek\n     * operation. If no seek operation is in progress, the ID stored here (if\n     * any) will not be valid.\n     *\n     * @private\n     * @type {number}\n     */\n    var seekTimeout = null;\n\n    // Start playback client connected\n    playbackClient.connect();\n\n    // Hide cursor unless mouse position is received\n    playbackClient.getDisplay().showCursor(false);\n\n    // Read instructions from provided tunnel, extracting each frame\n    tunnel.oninstruction = function handleInstruction(opcode, args) {\n\n        // Store opcode and arguments for received instruction\n        var instruction = new Guacamole.SessionRecording._Frame.Instruction(opcode, args.slice());\n        instructions.push(instruction);\n        charactersSinceLastKeyframe += instruction.getSize();\n\n        // Once a sync is received, store all instructions since the last\n        // frame as a new frame\n        if (opcode === 'sync') {\n\n            // Parse frame timestamp from sync instruction\n            var timestamp = parseInt(args[0]);\n\n            // Add a new frame containing the instructions read since last frame\n            var frame = new Guacamole.SessionRecording._Frame(timestamp, instructions);\n            frames.push(frame);\n\n            // This frame should eventually become a keyframe if enough data\n            // has been processed and enough recording time has elapsed, or if\n            // this is the absolute first frame\n            if (frames.length === 1 || (charactersSinceLastKeyframe >= KEYFRAME_CHAR_INTERVAL\n                    && timestamp - lastKeyframeTimestamp >= KEYFRAME_TIME_INTERVAL)) {\n                frame.keyframe = true;\n                lastKeyframeTimestamp = timestamp;\n                charactersSinceLastKeyframe = 0;\n            }\n\n            // Clear set of instructions in preparation for next frame\n            instructions = [];\n\n            // Notify that additional content is available\n            if (recording.onprogress)\n                recording.onprogress(recording.getDuration());\n\n        }\n\n    };\n\n    /**\n     * Converts the given absolute timestamp to a timestamp which is relative\n     * to the first frame in the recording.\n     *\n     * @private\n     * @param {!number} timestamp\n     *     The timestamp to convert to a relative timestamp.\n     *\n     * @returns {!number}\n     *     The difference in milliseconds between the given timestamp and the\n     *     first frame of the recording, or zero if no frames yet exist.\n     */\n    var toRelativeTimestamp = function toRelativeTimestamp(timestamp) {\n\n        // If no frames yet exist, all timestamps are zero\n        if (frames.length === 0)\n            return 0;\n\n        // Calculate timestamp relative to first frame\n        return timestamp - frames[0].timestamp;\n\n    };\n\n    /**\n     * Searches through the given region of frames for the frame having a\n     * relative timestamp closest to the timestamp given.\n     *\n     * @private\n     * @param {!number} minIndex\n     *     The index of the first frame in the region (the frame having the\n     *     smallest timestamp).\n     *\n     * @param {!number} maxIndex\n     *     The index of the last frame in the region (the frame having the\n     *     largest timestamp).\n     *\n     * @param {!number} timestamp\n     *     The relative timestamp to search for, where zero denotes the first\n     *     frame in the recording.\n     *\n     * @returns {!number}\n     *     The index of the frame having a relative timestamp closest to the\n     *     given value.\n     */\n    var findFrame = function findFrame(minIndex, maxIndex, timestamp) {\n\n        // Do not search if the region contains only one element\n        if (minIndex === maxIndex)\n            return minIndex;\n\n        // Split search region into two halves\n        var midIndex = Math.floor((minIndex + maxIndex) / 2);\n        var midTimestamp = toRelativeTimestamp(frames[midIndex].timestamp);\n\n        // If timestamp is within lesser half, search again within that half\n        if (timestamp < midTimestamp && midIndex > minIndex)\n            return findFrame(minIndex, midIndex - 1, timestamp);\n\n        // If timestamp is within greater half, search again within that half\n        if (timestamp > midTimestamp && midIndex < maxIndex)\n            return findFrame(midIndex + 1, maxIndex, timestamp);\n\n        // Otherwise, we lucked out and found a frame with exactly the\n        // desired timestamp\n        return midIndex;\n\n    };\n\n    /**\n     * Replays the instructions associated with the given frame, sending those\n     * instructions to the playback client.\n     *\n     * @private\n     * @param {!number} index\n     *     The index of the frame within the frames array which should be\n     *     replayed.\n     */\n    var replayFrame = function replayFrame(index) {\n\n        var frame = frames[index];\n\n        // Replay all instructions within the retrieved frame\n        for (var i = 0; i < frame.instructions.length; i++) {\n            var instruction = frame.instructions[i];\n            playbackTunnel.receiveInstruction(instruction.opcode, instruction.args);\n        }\n\n        // Store client state if frame is flagged as a keyframe\n        if (frame.keyframe && !frame.clientState) {\n            playbackClient.exportState(function storeClientState(state) {\n                frame.clientState = state;\n            });\n        }\n\n    };\n\n    /**\n     * Moves the playback position to the given frame, resetting the state of\n     * the playback client and replaying frames as necessary. The seek\n     * operation will proceed asynchronously. If a seek operation is already in\n     * progress, that seek is first aborted. The progress of the seek operation\n     * can be observed through the onseek handler and the provided callback.\n     *\n     * @private\n     * @param {!number} index\n     *     The index of the frame which should become the new playback\n     *     position.\n     *\n     * @param {!function} callback\n     *     The callback to invoke once the seek operation has completed.\n     *\n     * @param {number} [delay=0]\n     *     The number of milliseconds that the seek operation should be\n     *     scheduled to take.\n     */\n    var seekToFrame = function seekToFrame(index, callback, delay) {\n\n        // Abort any in-progress seek\n        abortSeek();\n\n        // Replay frames asynchronously\n        seekTimeout = window.setTimeout(function continueSeek() {\n\n            var startIndex;\n\n            // Back up until startIndex represents current state\n            for (startIndex = index; startIndex >= 0; startIndex--) {\n\n                var frame = frames[startIndex];\n\n                // If we've reached the current frame, startIndex represents\n                // current state by definition\n                if (startIndex === currentFrame)\n                    break;\n\n                // If frame has associated absolute state, make that frame the\n                // current state\n                if (frame.clientState) {\n                    playbackClient.importState(frame.clientState);\n                    break;\n                }\n\n            }\n\n            // Advance to frame index after current state\n            startIndex++;\n\n            var startTime = new Date().getTime();\n\n            // Replay any applicable incremental frames\n            for (; startIndex <= index; startIndex++) {\n\n                // Stop seeking if the operation is taking too long\n                var currentTime = new Date().getTime();\n                if (currentTime - startTime >= MAXIMUM_SEEK_TIME)\n                    break;\n\n                replayFrame(startIndex);\n            }\n\n            // Current frame is now at requested index\n            currentFrame = startIndex - 1;\n\n            // Notify of changes in position\n            if (recording.onseek)\n                recording.onseek(recording.getPosition());\n\n            // If the seek operation has not yet completed, schedule continuation\n            if (currentFrame !== index)\n                seekToFrame(index, callback,\n                    Math.max(delay - (new Date().getTime() - startTime), 0));\n\n            // Notify that the requested seek has completed\n            else\n                callback();\n\n        }, delay || 0);\n\n    };\n\n    /**\n     * Aborts the seek operation currently in progress, if any. If no seek\n     * operation is in progress, this function has no effect.\n     *\n     * @private\n     */\n    var abortSeek = function abortSeek() {\n        window.clearTimeout(seekTimeout);\n    };\n\n    /**\n     * Advances playback to the next frame in the frames array and schedules\n     * playback of the frame following that frame based on their associated\n     * timestamps. If no frames exist after the next frame, playback is paused.\n     *\n     * @private\n     */\n    var continuePlayback = function continuePlayback() {\n\n        // If frames remain after advancing, schedule next frame\n        if (currentFrame + 1 < frames.length) {\n\n            // Pull the upcoming frame\n            var next = frames[currentFrame + 1];\n\n            // Calculate the real timestamp corresponding to when the next\n            // frame begins\n            var nextRealTimestamp = next.timestamp - startVideoTimestamp + startRealTimestamp;\n\n            // Calculate the relative delay between the current time and\n            // the next frame start\n            var delay = Math.max(nextRealTimestamp - new Date().getTime(), 0);\n\n            // Advance to next frame after enough time has elapsed\n            seekToFrame(currentFrame + 1, function frameDelayElapsed() {\n                continuePlayback();\n            }, delay);\n\n        }\n\n        // Otherwise stop playback\n        else\n            recording.pause();\n\n    };\n\n    /**\n     * Fired when new frames have become available while the recording is\n     * being downloaded.\n     *\n     * @event\n     * @param {!number} duration\n     *     The new duration of the recording, in milliseconds.\n     */\n    this.onprogress = null;\n\n    /**\n     * Fired whenever playback of the recording has started.\n     *\n     * @event\n     */\n    this.onplay = null;\n\n    /**\n     * Fired whenever playback of the recording has been paused. This may\n     * happen when playback is explicitly paused with a call to pause(), or\n     * when playback is implicitly paused due to reaching the end of the\n     * recording.\n     *\n     * @event\n     */\n    this.onpause = null;\n\n    /**\n     * Fired whenever the playback position within the recording changes.\n     *\n     * @event\n     * @param {!number} position\n     *     The new position within the recording, in milliseconds.\n     */\n    this.onseek = null;\n\n    /**\n     * Connects the underlying tunnel, beginning download of the Guacamole\n     * session. Playback of the Guacamole session cannot occur until at least\n     * one frame worth of instructions has been downloaded.\n     *\n     * @param {string} [data]\n     *     The data to send to the tunnel when connecting.\n     */\n    this.connect = function connect(data) {\n        tunnel.connect(data);\n    };\n\n    /**\n     * Disconnects the underlying tunnel, stopping further download of the\n     * Guacamole session.\n     */\n    this.disconnect = function disconnect() {\n        tunnel.disconnect();\n    };\n\n    /**\n     * Returns the underlying display of the Guacamole.Client used by this\n     * Guacamole.SessionRecording for playback. The display contains an Element\n     * which can be added to the DOM, causing the display (and thus playback of\n     * the recording) to become visible.\n     *\n     * @return {!Guacamole.Display}\n     *     The underlying display of the Guacamole.Client used by this\n     *     Guacamole.SessionRecording for playback.\n     */\n    this.getDisplay = function getDisplay() {\n        return playbackClient.getDisplay();\n    };\n\n    /**\n     * Returns whether playback is currently in progress.\n     *\n     * @returns {!boolean}\n     *     true if playback is currently in progress, false otherwise.\n     */\n    this.isPlaying = function isPlaying() {\n        return !!startVideoTimestamp;\n    };\n\n    /**\n     * Returns the current playback position within the recording, in\n     * milliseconds, where zero is the start of the recording.\n     *\n     * @returns {!number}\n     *     The current playback position within the recording, in milliseconds.\n     */\n    this.getPosition = function getPosition() {\n\n        // Position is simply zero if playback has not started at all\n        if (currentFrame === -1)\n            return 0;\n\n        // Return current position as a millisecond timestamp relative to the\n        // start of the recording\n        return toRelativeTimestamp(frames[currentFrame].timestamp);\n\n    };\n\n    /**\n     * Returns the duration of this recording, in milliseconds. If the\n     * recording is still being downloaded, this value will gradually increase.\n     *\n     * @returns {!number}\n     *     The duration of this recording, in milliseconds.\n     */\n    this.getDuration = function getDuration() {\n\n        // If no frames yet exist, duration is zero\n        if (frames.length === 0)\n            return 0;\n\n        // Recording duration is simply the timestamp of the last frame\n        return toRelativeTimestamp(frames[frames.length - 1].timestamp);\n\n    };\n\n    /**\n     * Begins continuous playback of the recording downloaded thus far.\n     * Playback of the recording will continue until pause() is invoked or\n     * until no further frames exist. Playback is initially paused when a\n     * Guacamole.SessionRecording is created, and must be explicitly started\n     * through a call to this function. If playback is already in progress,\n     * this function has no effect. If a seek operation is in progress,\n     * playback resumes at the current position, and the seek is aborted as if\n     * completed.\n     */\n    this.play = function play() {\n\n        // If playback is not already in progress and frames remain,\n        // begin playback\n        if (!recording.isPlaying() && currentFrame + 1 < frames.length) {\n\n            // Notify that playback is starting\n            if (recording.onplay)\n                recording.onplay();\n\n            // Store timestamp of playback start for relative scheduling of\n            // future frames\n            var next = frames[currentFrame + 1];\n            startVideoTimestamp = next.timestamp;\n            startRealTimestamp = new Date().getTime();\n\n            // Begin playback of video\n            continuePlayback();\n\n        }\n\n    };\n\n    /**\n     * Seeks to the given position within the recording. If the recording is\n     * currently being played back, playback will continue after the seek is\n     * performed. If the recording is currently paused, playback will be\n     * paused after the seek is performed. If a seek operation is already in\n     * progress, that seek is first aborted. The seek operation will proceed\n     * asynchronously.\n     *\n     * @param {!number} position\n     *     The position within the recording to seek to, in milliseconds.\n     *\n     * @param {function} [callback]\n     *     The callback to invoke once the seek operation has completed.\n     */\n    this.seek = function seek(position, callback) {\n\n        // Do not seek if no frames exist\n        if (frames.length === 0)\n            return;\n\n        // Pause playback, preserving playback state\n        var originallyPlaying = recording.isPlaying();\n        recording.pause();\n\n        // Perform seek\n        seekToFrame(findFrame(0, frames.length - 1, position), function restorePlaybackState() {\n\n            // Restore playback state\n            if (originallyPlaying)\n                recording.play();\n\n            // Notify that seek has completed\n            if (callback)\n                callback();\n\n        });\n\n    };\n\n    /**\n     * Pauses playback of the recording, if playback is currently in progress.\n     * If playback is not in progress, this function has no effect. If a seek\n     * operation is in progress, the seek is aborted. Playback is initially\n     * paused when a Guacamole.SessionRecording is created, and must be\n     * explicitly started through a call to play().\n     */\n    this.pause = function pause() {\n\n        // Abort any in-progress seek / playback\n        abortSeek();\n\n        // Stop playback only if playback is in progress\n        if (recording.isPlaying()) {\n\n            // Notify that playback is stopping\n            if (recording.onpause)\n                recording.onpause();\n\n            // Playback is stopped\n            startVideoTimestamp = null;\n            startRealTimestamp = null;\n\n        }\n\n    };\n\n};\n\n/**\n * A single frame of Guacamole session data. Each frame is made up of the set\n * of instructions used to generate that frame, and the timestamp as dictated\n * by the \"sync\" instruction terminating the frame. Optionally, a frame may\n * also be associated with a snapshot of Guacamole client state, such that the\n * frame can be rendered without replaying all previous frames.\n *\n * @private\n * @constructor\n * @param {!number} timestamp\n *     The timestamp of this frame, as dictated by the \"sync\" instruction which\n *     terminates the frame.\n *\n * @param {!Guacamole.SessionRecording._Frame.Instruction[]} instructions\n *     All instructions which are necessary to generate this frame relative to\n *     the previous frame in the Guacamole session.\n */\nGuacamole.SessionRecording._Frame = function _Frame(timestamp, instructions) {\n\n    /**\n     * Whether this frame should be used as a keyframe if possible. This value\n     * is purely advisory. The stored clientState must eventually be manually\n     * set for the frame to be used as a keyframe. By default, frames are not\n     * keyframes.\n     *\n     * @type {!boolean}\n     * @default false\n     */\n    this.keyframe = false;\n\n    /**\n     * The timestamp of this frame, as dictated by the \"sync\" instruction which\n     * terminates the frame.\n     *\n     * @type {!number}\n     */\n    this.timestamp = timestamp;\n\n    /**\n     * All instructions which are necessary to generate this frame relative to\n     * the previous frame in the Guacamole session.\n     *\n     * @type {!Guacamole.SessionRecording._Frame.Instruction[]}\n     */\n    this.instructions = instructions;\n\n    /**\n     * A snapshot of client state after this frame was rendered, as returned by\n     * a call to exportState(). If no such snapshot has been taken, this will\n     * be null.\n     *\n     * @type {object}\n     * @default null\n     */\n    this.clientState = null;\n\n};\n\n/**\n * A Guacamole protocol instruction. Each Guacamole protocol instruction is\n * made up of an opcode and set of arguments.\n *\n * @private\n * @constructor\n * @param {!string} opcode\n *     The opcode of this Guacamole instruction.\n *\n * @param {!string[]} args\n *     All arguments associated with this Guacamole instruction.\n */\nGuacamole.SessionRecording._Frame.Instruction = function Instruction(opcode, args) {\n\n    /**\n     * Reference to this Guacamole.SessionRecording._Frame.Instruction.\n     *\n     * @private\n     * @type {!Guacamole.SessionRecording._Frame.Instruction}\n     */\n    var instruction = this;\n\n    /**\n     * The opcode of this Guacamole instruction.\n     *\n     * @type {!string}\n     */\n    this.opcode = opcode;\n\n    /**\n     * All arguments associated with this Guacamole instruction.\n     *\n     * @type {!string[]}\n     */\n    this.args = args;\n\n    /**\n     * Returns the approximate number of characters which make up this\n     * instruction. This value is only approximate as it excludes the length\n     * prefixes and various delimiters used by the Guacamole protocol; only\n     * the content of the opcode and each argument is taken into account.\n     *\n     * @returns {!number}\n     *     The approximate size of this instruction, in characters.\n     */\n    this.getSize = function getSize() {\n\n        // Init with length of opcode\n        var size = instruction.opcode.length;\n\n        // Add length of all arguments\n        for (var i = 0; i < instruction.args.length; i++)\n            size += instruction.args[i].length;\n\n        return size;\n\n    };\n\n};\n\n/**\n * A read-only Guacamole.Tunnel implementation which streams instructions\n * received through explicit calls to its receiveInstruction() function.\n *\n * @private\n * @constructor\n * @augments {Guacamole.Tunnel}\n */\nGuacamole.SessionRecording._PlaybackTunnel = function _PlaybackTunnel() {\n\n    /**\n     * Reference to this Guacamole.SessionRecording._PlaybackTunnel.\n     *\n     * @private\n     * @type {!Guacamole.SessionRecording._PlaybackTunnel}\n     */\n    var tunnel = this;\n\n    this.connect = function connect(data) {\n        // Do nothing\n    };\n\n    this.sendMessage = function sendMessage(elements) {\n        // Do nothing\n    };\n\n    this.disconnect = function disconnect() {\n        // Do nothing\n    };\n\n    /**\n     * Invokes this tunnel's oninstruction handler, notifying users of this\n     * tunnel (such as a Guacamole.Client instance) that an instruction has\n     * been received. If the oninstruction handler has not been set, this\n     * function has no effect.\n     *\n     * @param {!string} opcode\n     *     The opcode of the Guacamole instruction.\n     *\n     * @param {!string[]} args\n     *     All arguments associated with this Guacamole instruction.\n     */\n    this.receiveInstruction = function receiveInstruction(opcode, args) {\n        if (tunnel.oninstruction)\n            tunnel.oninstruction(opcode, args);\n    };\n\n};\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar Guacamole = Guacamole || {};\n\n/**\n * A Guacamole status. Each Guacamole status consists of a status code, defined\n * by the protocol, and an optional human-readable message, usually only\n * included for debugging convenience.\n *\n * @constructor\n * @param {!number} code\n *     The Guacamole status code, as defined by Guacamole.Status.Code.\n *\n * @param {string} [message]\n *     An optional human-readable message.\n */\nGuacamole.Status = function(code, message) {\n\n    /**\n     * Reference to this Guacamole.Status.\n     *\n     * @private\n     * @type {!Guacamole.Status}\n     */\n    var guac_status = this;\n\n    /**\n     * The Guacamole status code.\n     *\n     * @see Guacamole.Status.Code\n     * @type {!number}\n     */\n    this.code = code;\n\n    /**\n     * An arbitrary human-readable message associated with this status, if any.\n     * The human-readable message is not required, and is generally provided\n     * for debugging purposes only. For user feedback, it is better to translate\n     * the Guacamole status code into a message.\n     * \n     * @type {string}\n     */\n    this.message = message;\n\n    /**\n     * Returns whether this status represents an error.\n     *\n     * @returns {!boolean}\n     *     true if this status represents an error, false otherwise.\n     */\n    this.isError = function() {\n        return guac_status.code < 0 || guac_status.code > 0x00FF;\n    };\n\n};\n\n/**\n * Enumeration of all Guacamole status codes.\n */\nGuacamole.Status.Code = {\n\n    /**\n     * The operation succeeded.\n     *\n     * @type {!number}\n     */\n    \"SUCCESS\": 0x0000,\n\n    /**\n     * The requested operation is unsupported.\n     *\n     * @type {!number}\n     */\n    \"UNSUPPORTED\": 0x0100,\n\n    /**\n     * The operation could not be performed due to an internal failure.\n     *\n     * @type {!number}\n     */\n    \"SERVER_ERROR\": 0x0200,\n\n    /**\n     * The operation could not be performed as the server is busy.\n     *\n     * @type {!number}\n     */\n    \"SERVER_BUSY\": 0x0201,\n\n    /**\n     * The operation could not be performed because the upstream server is not\n     * responding.\n     *\n     * @type {!number}\n     */\n    \"UPSTREAM_TIMEOUT\": 0x0202,\n\n    /**\n     * The operation was unsuccessful due to an error or otherwise unexpected\n     * condition of the upstream server.\n     *\n     * @type {!number}\n     */\n    \"UPSTREAM_ERROR\": 0x0203,\n\n    /**\n     * The operation could not be performed as the requested resource does not\n     * exist.\n     *\n     * @type {!number}\n     */\n    \"RESOURCE_NOT_FOUND\": 0x0204,\n\n    /**\n     * The operation could not be performed as the requested resource is\n     * already in use.\n     *\n     * @type {!number}\n     */\n    \"RESOURCE_CONFLICT\": 0x0205,\n\n    /**\n     * The operation could not be performed as the requested resource is now\n     * closed.\n     *\n     * @type {!number}\n     */\n    \"RESOURCE_CLOSED\": 0x0206,\n\n    /**\n     * The operation could not be performed because the upstream server does\n     * not appear to exist.\n     *\n     * @type {!number}\n     */\n    \"UPSTREAM_NOT_FOUND\": 0x0207,\n\n    /**\n     * The operation could not be performed because the upstream server is not\n     * available to service the request.\n     *\n     * @type {!number}\n     */\n    \"UPSTREAM_UNAVAILABLE\": 0x0208,\n\n    /**\n     * The session within the upstream server has ended because it conflicted\n     * with another session.\n     *\n     * @type {!number}\n     */\n    \"SESSION_CONFLICT\": 0x0209,\n\n    /**\n     * The session within the upstream server has ended because it appeared to\n     * be inactive.\n     *\n     * @type {!number}\n     */\n    \"SESSION_TIMEOUT\": 0x020A,\n\n    /**\n     * The session within the upstream server has been forcibly terminated.\n     *\n     * @type {!number}\n     */\n    \"SESSION_CLOSED\": 0x020B,\n\n    /**\n     * The operation could not be performed because bad parameters were given.\n     *\n     * @type {!number}\n     */\n    \"CLIENT_BAD_REQUEST\": 0x0300,\n\n    /**\n     * Permission was denied to perform the operation, as the user is not yet\n     * authorized (not yet logged in, for example).\n     *\n     * @type {!number}\n     */\n    \"CLIENT_UNAUTHORIZED\": 0x0301,\n\n    /**\n     * Permission was denied to perform the operation, and this permission will\n     * not be granted even if the user is authorized.\n     *\n     * @type {!number}\n     */\n    \"CLIENT_FORBIDDEN\": 0x0303,\n\n    /**\n     * The client took too long to respond.\n     *\n     * @type {!number}\n     */\n    \"CLIENT_TIMEOUT\": 0x0308,\n\n    /**\n     * The client sent too much data.\n     *\n     * @type {!number}\n     */\n    \"CLIENT_OVERRUN\": 0x030D,\n\n    /**\n     * The client sent data of an unsupported or unexpected type.\n     *\n     * @type {!number}\n     */\n    \"CLIENT_BAD_TYPE\": 0x030F,\n\n    /**\n     * The operation failed because the current client is already using too\n     * many resources.\n     *\n     * @type {!number}\n     */\n    \"CLIENT_TOO_MANY\": 0x031D\n\n};\n\n/**\n * Returns the Guacamole protocol status code which most closely\n * represents the given HTTP status code.\n *\n * @param {!number} status\n *     The HTTP status code to translate into a Guacamole protocol status\n *     code.\n *\n * @returns {!number}\n *     The Guacamole protocol status code which most closely represents the\n *     given HTTP status code.\n */\nGuacamole.Status.Code.fromHTTPCode = function fromHTTPCode(status) {\n\n    // Translate status codes with known equivalents\n    switch (status) {\n\n        // HTTP 400 - Bad request\n        case 400:\n            return Guacamole.Status.Code.CLIENT_BAD_REQUEST;\n\n        // HTTP 403 - Forbidden\n        case 403:\n            return Guacamole.Status.Code.CLIENT_FORBIDDEN;\n\n        // HTTP 404 - Resource not found\n        case 404:\n            return Guacamole.Status.Code.RESOURCE_NOT_FOUND;\n\n        // HTTP 429 - Too many requests\n        case 429:\n            return Guacamole.Status.Code.CLIENT_TOO_MANY;\n\n        // HTTP 503 - Server unavailable\n        case 503:\n            return Guacamole.Status.Code.SERVER_BUSY;\n\n    }\n\n    // Default all other codes to generic internal error\n    return Guacamole.Status.Code.SERVER_ERROR;\n\n};\n\n/**\n * Returns the Guacamole protocol status code which most closely\n * represents the given WebSocket status code.\n *\n * @param {!number} code\n *     The WebSocket status code to translate into a Guacamole protocol\n *     status code.\n *\n * @returns {!number}\n *     The Guacamole protocol status code which most closely represents the\n *     given WebSocket status code.\n */\nGuacamole.Status.Code.fromWebSocketCode = function fromWebSocketCode(code) {\n\n    // Translate status codes with known equivalents\n    switch (code) {\n\n        // Successful disconnect (no error)\n        case 1000: // Normal Closure\n            return Guacamole.Status.Code.SUCCESS;\n\n        // Codes which indicate the server is not reachable\n        case 1006: // Abnormal Closure (also signalled by JavaScript when the connection cannot be opened in the first place)\n        case 1015: // TLS Handshake\n            return Guacamole.Status.Code.UPSTREAM_NOT_FOUND;\n\n        // Codes which indicate the server is reachable but busy/unavailable\n        case 1001: // Going Away\n        case 1012: // Service Restart\n        case 1013: // Try Again Later\n        case 1014: // Bad Gateway\n            return Guacamole.Status.Code.UPSTREAM_UNAVAILABLE;\n\n    }\n\n    // Default all other codes to generic internal error\n    return Guacamole.Status.Code.SERVER_ERROR;\n\n};\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar Guacamole = Guacamole || {};\n\n/**\n * A reader which automatically handles the given input stream, returning\n * strictly text data. Note that this object will overwrite any installed event\n * handlers on the given Guacamole.InputStream.\n * \n * @constructor\n * @param {!Guacamole.InputStream} stream\n *     The stream that data will be read from.\n */\nGuacamole.StringReader = function(stream) {\n\n    /**\n     * Reference to this Guacamole.InputStream.\n     *\n     * @private\n     * @type {!Guacamole.StringReader}\n     */\n    var guac_reader = this;\n\n    /**\n     * Wrapped Guacamole.ArrayBufferReader.\n     *\n     * @private\n     * @type {!Guacamole.ArrayBufferReader}\n     */\n    var array_reader = new Guacamole.ArrayBufferReader(stream);\n\n    /**\n     * The number of bytes remaining for the current codepoint.\n     *\n     * @private\n     * @type {!number}\n     */\n    var bytes_remaining = 0;\n\n    /**\n     * The current codepoint value, as calculated from bytes read so far.\n     *\n     * @private\n     * @type {!number}\n     */\n    var codepoint = 0;\n\n    /**\n     * Decodes the given UTF-8 data into a Unicode string. The data may end in\n     * the middle of a multibyte character.\n     * \n     * @private\n     * @param {!ArrayBuffer} buffer\n     *     Arbitrary UTF-8 data.\n     *\n     * @return {!string}\n     *     A decoded Unicode string.\n     */\n    function __decode_utf8(buffer) {\n\n        var text = \"\";\n\n        var bytes = new Uint8Array(buffer);\n        for (var i=0; i<bytes.length; i++) {\n\n            // Get current byte\n            var value = bytes[i];\n\n            // Start new codepoint if nothing yet read\n            if (bytes_remaining === 0) {\n\n                // 1 byte (0xxxxxxx)\n                if ((value | 0x7F) === 0x7F)\n                    text += String.fromCharCode(value);\n\n                // 2 byte (110xxxxx)\n                else if ((value | 0x1F) === 0xDF) {\n                    codepoint = value & 0x1F;\n                    bytes_remaining = 1;\n                }\n\n                // 3 byte (1110xxxx)\n                else if ((value | 0x0F )=== 0xEF) {\n                    codepoint = value & 0x0F;\n                    bytes_remaining = 2;\n                }\n\n                // 4 byte (11110xxx)\n                else if ((value | 0x07) === 0xF7) {\n                    codepoint = value & 0x07;\n                    bytes_remaining = 3;\n                }\n\n                // Invalid byte\n                else\n                    text += \"\\uFFFD\";\n\n            }\n\n            // Continue existing codepoint (10xxxxxx)\n            else if ((value | 0x3F) === 0xBF) {\n\n                codepoint = (codepoint << 6) | (value & 0x3F);\n                bytes_remaining--;\n\n                // Write codepoint if finished\n                if (bytes_remaining === 0)\n                    text += String.fromCharCode(codepoint);\n\n            }\n\n            // Invalid byte\n            else {\n                bytes_remaining = 0;\n                text += \"\\uFFFD\";\n            }\n\n        }\n\n        return text;\n\n    }\n\n    // Receive blobs as strings\n    array_reader.ondata = function(buffer) {\n\n        // Decode UTF-8\n        var text = __decode_utf8(buffer);\n\n        // Call handler, if present\n        if (guac_reader.ontext)\n            guac_reader.ontext(text);\n\n    };\n\n    // Simply call onend when end received\n    array_reader.onend = function() {\n        if (guac_reader.onend)\n            guac_reader.onend();\n    };\n\n    /**\n     * Fired once for every blob of text data received.\n     * \n     * @event\n     * @param {!string} text\n     *     The data packet received.\n     */\n    this.ontext = null;\n\n    /**\n     * Fired once this stream is finished and no further data will be written.\n     * @event\n     */\n    this.onend = null;\n\n};\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar Guacamole = Guacamole || {};\n\n/**\n * A writer which automatically writes to the given output stream with text\n * data.\n * \n * @constructor\n * @param {!Guacamole.OutputStream} stream\n *     The stream that data will be written to.\n */\nGuacamole.StringWriter = function(stream) {\n\n    /**\n     * Reference to this Guacamole.StringWriter.\n     *\n     * @private\n     * @type {!Guacamole.StringWriter}\n     */\n    var guac_writer = this;\n\n    /**\n     * Wrapped Guacamole.ArrayBufferWriter.\n     *\n     * @private\n     * @type {!Guacamole.ArrayBufferWriter}\n     */\n    var array_writer = new Guacamole.ArrayBufferWriter(stream);\n\n    /**\n     * Internal buffer for UTF-8 output.\n     *\n     * @private\n     * @type {!Uint8Array}\n     */\n    var buffer = new Uint8Array(8192);\n\n    /**\n     * The number of bytes currently in the buffer.\n     *\n     * @private\n     * @type {!number}\n     */\n    var length = 0;\n\n    // Simply call onack for acknowledgements\n    array_writer.onack = function(status) {\n        if (guac_writer.onack)\n            guac_writer.onack(status);\n    };\n\n    /**\n     * Expands the size of the underlying buffer by the given number of bytes,\n     * updating the length appropriately.\n     * \n     * @private\n     * @param {!number} bytes\n     *     The number of bytes to add to the underlying buffer.\n     */\n    function __expand(bytes) {\n\n        // Resize buffer if more space needed\n        if (length+bytes >= buffer.length) {\n            var new_buffer = new Uint8Array((length+bytes)*2);\n            new_buffer.set(buffer);\n            buffer = new_buffer;\n        }\n\n        length += bytes;\n\n    }\n\n    /**\n     * Appends a single Unicode character to the current buffer, resizing the\n     * buffer if necessary. The character will be encoded as UTF-8.\n     * \n     * @private\n     * @param {!number} codepoint\n     *     The codepoint of the Unicode character to append.\n     */\n    function __append_utf8(codepoint) {\n\n        var mask;\n        var bytes;\n\n        // 1 byte\n        if (codepoint <= 0x7F) {\n            mask = 0x00;\n            bytes = 1;\n        }\n\n        // 2 byte\n        else if (codepoint <= 0x7FF) {\n            mask = 0xC0;\n            bytes = 2;\n        }\n\n        // 3 byte\n        else if (codepoint <= 0xFFFF) {\n            mask = 0xE0;\n            bytes = 3;\n        }\n\n        // 4 byte\n        else if (codepoint <= 0x1FFFFF) {\n            mask = 0xF0;\n            bytes = 4;\n        }\n\n        // If invalid codepoint, append replacement character\n        else {\n            __append_utf8(0xFFFD);\n            return;\n        }\n\n        // Offset buffer by size\n        __expand(bytes);\n        var offset = length - 1;\n\n        // Add trailing bytes, if any\n        for (var i=1; i<bytes; i++) {\n            buffer[offset--] = 0x80 | (codepoint & 0x3F);\n            codepoint >>= 6;\n        }\n\n        // Set initial byte\n        buffer[offset] = mask | codepoint;\n\n    }\n\n    /**\n     * Encodes the given string as UTF-8, returning an ArrayBuffer containing\n     * the resulting bytes.\n     * \n     * @private\n     * @param {!string} text\n     *     The string to encode as UTF-8.\n     *\n     * @return {!Uint8Array}\n     *     The encoded UTF-8 data.\n     */\n    function __encode_utf8(text) {\n\n        // Fill buffer with UTF-8\n        for (var i=0; i<text.length; i++) {\n            var codepoint = text.charCodeAt(i);\n            __append_utf8(codepoint);\n        }\n\n        // Flush buffer\n        if (length > 0) {\n            var out_buffer = buffer.subarray(0, length);\n            length = 0;\n            return out_buffer;\n        }\n\n    }\n\n    /**\n     * Sends the given text.\n     * \n     * @param {!string} text\n     *     The text to send.\n     */\n    this.sendText = function(text) {\n        if (text.length)\n            array_writer.sendData(__encode_utf8(text));\n    };\n\n    /**\n     * Signals that no further text will be sent, effectively closing the\n     * stream.\n     */\n    this.sendEnd = function() {\n        array_writer.sendEnd();\n    };\n\n    /**\n     * Fired for received data, if acknowledged by the server.\n     *\n     * @event\n     * @param {!Guacamole.Status} status\n     *     The status of the operation.\n     */\n    this.onack = null;\n\n};\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar Guacamole = Guacamole || {};\n\n/**\n * Provides cross-browser multi-touch events for a given element. The events of\n * the given element are automatically populated with handlers that translate\n * touch events into a non-browser-specific event provided by the\n * Guacamole.Touch instance.\n * \n * @constructor\n * @augments Guacamole.Event.Target\n * @param {!Element} element\n *     The Element to use to provide touch events.\n */\nGuacamole.Touch = function Touch(element) {\n\n    Guacamole.Event.Target.call(this);\n\n    /**\n     * Reference to this Guacamole.Touch.\n     *\n     * @private\n     * @type {!Guacamole.Touch}\n     */\n    var guacTouch = this;\n\n    /**\n     * The default X/Y radius of each touch if the device or browser does not\n     * expose the size of the contact area.\n     *\n     * @private\n     * @constant\n     * @type {!number}\n     */\n    var DEFAULT_CONTACT_RADIUS = Math.floor(16 * window.devicePixelRatio);\n\n    /**\n     * The set of all active touches, stored by their unique identifiers.\n     *\n     * @type {!Object.<Number, Guacamole.Touch.State>}\n     */\n    this.touches = {};\n\n    /**\n     * The number of active touches currently stored within\n     * {@link Guacamole.Touch#touches touches}.\n     */\n    this.activeTouches = 0;\n\n    /**\n     * Fired whenever a new touch contact is initiated on the element\n     * associated with this Guacamole.Touch.\n     * \n     * @event Guacamole.Touch#touchstart\n     * @param {!Guacamole.Touch.Event} event\n     *     A {@link Guacamole.Touch.Event} object representing the \"touchstart\"\n     *     event.\n     */\n\n    /**\n     * Fired whenever an established touch contact moves within the element\n     * associated with this Guacamole.Touch.\n     * \n     * @event Guacamole.Touch#touchmove\n     * @param {!Guacamole.Touch.Event} event\n     *     A {@link Guacamole.Touch.Event} object representing the \"touchmove\"\n     *     event.\n     */\n\n    /**\n     * Fired whenever an established touch contact is lifted from the element\n     * associated with this Guacamole.Touch.\n     * \n     * @event Guacamole.Touch#touchend\n     * @param {!Guacamole.Touch.Event} event\n     *     A {@link Guacamole.Touch.Event} object representing the \"touchend\"\n     *     event.\n     */\n\n    element.addEventListener('touchstart', function touchstart(e) {\n\n        // Fire \"ontouchstart\" events for all new touches\n        for (var i = 0; i < e.changedTouches.length; i++) {\n\n            var changedTouch = e.changedTouches[i];\n            var identifier = changedTouch.identifier;\n\n            // Ignore duplicated touches\n            if (guacTouch.touches[identifier])\n                continue;\n\n            var touch = guacTouch.touches[identifier] = new Guacamole.Touch.State({\n                id      : identifier,\n                radiusX : changedTouch.radiusX || DEFAULT_CONTACT_RADIUS,\n                radiusY : changedTouch.radiusY || DEFAULT_CONTACT_RADIUS,\n                angle   : changedTouch.angle || 0.0,\n                force   : changedTouch.force || 1.0 /* Within JavaScript changedTouch events, a force of 0.0 indicates the device does not support reporting changedTouch force */\n            });\n\n            guacTouch.activeTouches++;\n\n            touch.fromClientPosition(element, changedTouch.clientX, changedTouch.clientY);\n            guacTouch.dispatch(new Guacamole.Touch.Event('touchmove', e, touch));\n\n        }\n\n    }, false);\n\n    element.addEventListener('touchmove', function touchstart(e) {\n\n        // Fire \"ontouchmove\" events for all updated touches\n        for (var i = 0; i < e.changedTouches.length; i++) {\n\n            var changedTouch = e.changedTouches[i];\n            var identifier = changedTouch.identifier;\n\n            // Ignore any unrecognized touches\n            var touch = guacTouch.touches[identifier];\n            if (!touch)\n                continue;\n\n            // Update force only if supported by browser (otherwise, assume\n            // force is unchanged)\n            if (changedTouch.force)\n                touch.force = changedTouch.force;\n\n            // Update touch area, if supported by browser and device\n            touch.angle = changedTouch.angle || 0.0;\n            touch.radiusX = changedTouch.radiusX || DEFAULT_CONTACT_RADIUS;\n            touch.radiusY = changedTouch.radiusY || DEFAULT_CONTACT_RADIUS;\n\n            // Update with any change in position\n            touch.fromClientPosition(element, changedTouch.clientX, changedTouch.clientY);\n            guacTouch.dispatch(new Guacamole.Touch.Event('touchmove', e, touch));\n\n        }\n\n    }, false);\n\n    element.addEventListener('touchend', function touchstart(e) {\n\n        // Fire \"ontouchend\" events for all updated touches\n        for (var i = 0; i < e.changedTouches.length; i++) {\n\n            var changedTouch = e.changedTouches[i];\n            var identifier = changedTouch.identifier;\n\n            // Ignore any unrecognized touches\n            var touch = guacTouch.touches[identifier];\n            if (!touch)\n                continue;\n\n            // Stop tracking this particular touch\n            delete guacTouch.touches[identifier];\n            guacTouch.activeTouches--;\n\n            // Touch has ended\n            touch.force = 0.0;\n\n            // Update with final position\n            touch.fromClientPosition(element, changedTouch.clientX, changedTouch.clientY);\n            guacTouch.dispatch(new Guacamole.Touch.Event('touchend', e, touch));\n\n        }\n\n    }, false);\n\n};\n\n/**\n * The current state of a touch contact.\n *\n * @constructor\n * @augments Guacamole.Position\n * @param {Guacamole.Touch.State|object} [template={}]\n *     The object whose properties should be copied within the new\n *     Guacamole.Touch.State.\n */\nGuacamole.Touch.State = function State(template) {\n\n    template = template || {};\n\n    Guacamole.Position.call(this, template);\n\n    /**\n     * An arbitrary integer ID which uniquely identifies this contact relative\n     * to other active contacts.\n     *\n     * @type {!number}\n     * @default 0\n     */\n    this.id = template.id || 0;\n\n    /**\n     * The Y radius of the ellipse covering the general area of the touch\n     * contact, in pixels.\n     *\n     * @type {!number}\n     * @default 0\n     */\n    this.radiusX = template.radiusX || 0;\n\n    /**\n     * The X radius of the ellipse covering the general area of the touch\n     * contact, in pixels.\n     *\n     * @type {!number}\n     * @default 0\n     */\n    this.radiusY = template.radiusY || 0;\n\n    /**\n     * The rough angle of clockwise rotation of the general area of the touch\n     * contact, in degrees.\n     *\n     * @type {!number}\n     * @default 0.0\n     */\n    this.angle = template.angle || 0.0;\n\n    /**\n     * The relative force exerted by the touch contact, where 0 is no force\n     * (the touch has been lifted) and 1 is maximum force (the maximum amount\n     * of force representable by the device).\n     *\n     * @type {!number}\n     * @default 1.0\n     */\n    this.force = template.force || 1.0;\n\n};\n\n/**\n * An event which represents a change in state of a single touch contact,\n * including the creation or removal of that contact. If multiple contacts are\n * involved in a touch interaction, each contact will be associated with its\n * own event.\n *\n * @constructor\n * @augments Guacamole.Event.DOMEvent\n * @param {!string} type\n *     The name of the touch event type. Possible values are \"touchstart\",\n *     \"touchmove\", and \"touchend\".\n *\n * @param {!TouchEvent} event\n *     The DOM touch event that produced this Guacamole.Touch.Event.\n *\n * @param {!Guacamole.Touch.State} state\n *     The state of the touch contact associated with this event.\n */\nGuacamole.Touch.Event = function TouchEvent(type, event, state) {\n\n    Guacamole.Event.DOMEvent.call(this, type, [ event ]);\n\n    /**\n     * The state of the touch contact associated with this event.\n     *\n     * @type {!Guacamole.Touch.State}\n     */\n    this.state = state;\n\n};\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar Guacamole = Guacamole || {};\n\n/**\n * Core object providing abstract communication for Guacamole. This object\n * is a null implementation whose functions do nothing. Guacamole applications\n * should use {@link Guacamole.HTTPTunnel} instead, or implement their own tunnel based\n * on this one.\n * \n * @constructor\n * @see Guacamole.HTTPTunnel\n */\nGuacamole.Tunnel = function() {\n\n    /**\n     * Connect to the tunnel with the given optional data. This data is\n     * typically used for authentication. The format of data accepted is\n     * up to the tunnel implementation.\n     * \n     * @param {string} [data]\n     *     The data to send to the tunnel when connecting.\n     */\n    this.connect = function(data) {};\n    \n    /**\n     * Disconnect from the tunnel.\n     */\n    this.disconnect = function() {};\n    \n    /**\n     * Send the given message through the tunnel to the service on the other\n     * side. All messages are guaranteed to be received in the order sent.\n     * \n     * @param {...*} elements\n     *     The elements of the message to send to the service on the other side\n     *     of the tunnel.\n     */\n    this.sendMessage = function(elements) {};\n\n    /**\n     * Changes the stored numeric state of this tunnel, firing the onstatechange\n     * event if the new state is different and a handler has been defined.\n     *\n     * @private\n     * @param {!number} state\n     *     The new state of this tunnel.\n     */\n    this.setState = function(state) {\n\n        // Notify only if state changes\n        if (state !== this.state) {\n            this.state = state;\n            if (this.onstatechange)\n                this.onstatechange(state);\n        }\n\n    };\n\n    /**\n     * Changes the stored UUID that uniquely identifies this tunnel, firing the\n     * onuuid event if a handler has been defined.\n     *\n     * @private\n     * @param {string} uuid\n     *     The new state of this tunnel.\n     */\n    this.setUUID = function setUUID(uuid) {\n        this.uuid = uuid;\n        if (this.onuuid)\n            this.onuuid(uuid);\n    };\n\n    /**\n     * Returns whether this tunnel is currently connected.\n     *\n     * @returns {!boolean}\n     *     true if this tunnel is currently connected, false otherwise.\n     */\n    this.isConnected = function isConnected() {\n        return this.state === Guacamole.Tunnel.State.OPEN\n            || this.state === Guacamole.Tunnel.State.UNSTABLE;\n    };\n\n    /**\n     * The current state of this tunnel.\n     * \n     * @type {!number}\n     */\n    this.state = Guacamole.Tunnel.State.CONNECTING;\n\n    /**\n     * The maximum amount of time to wait for data to be received, in\n     * milliseconds. If data is not received within this amount of time,\n     * the tunnel is closed with an error. The default value is 15000.\n     *\n     * @type {!number}\n     */\n    this.receiveTimeout = 15000;\n\n    /**\n     * The amount of time to wait for data to be received before considering\n     * the connection to be unstable, in milliseconds. If data is not received\n     * within this amount of time, the tunnel status is updated to warn that\n     * the connection appears unresponsive and may close. The default value is\n     * 1500.\n     * \n     * @type {!number}\n     */\n    this.unstableThreshold = 1500;\n\n    /**\n     * The UUID uniquely identifying this tunnel. If not yet known, this will\n     * be null.\n     *\n     * @type {string}\n     */\n    this.uuid = null;\n\n    /**\n     * Fired when the UUID that uniquely identifies this tunnel is known.\n     *\n     * @event\n     * @param {!string}\n     *     The UUID uniquely identifying this tunnel.\n     */\n    this.onuuid = null;\n\n    /**\n     * Fired whenever an error is encountered by the tunnel.\n     * \n     * @event\n     * @param {!Guacamole.Status} status\n     *     A status object which describes the error.\n     */\n    this.onerror = null;\n\n    /**\n     * Fired whenever the state of the tunnel changes.\n     * \n     * @event\n     * @param {!number} state\n     *     The new state of the client.\n     */\n    this.onstatechange = null;\n\n    /**\n     * Fired once for every complete Guacamole instruction received, in order.\n     * \n     * @event\n     * @param {!string} opcode\n     *     The Guacamole instruction opcode.\n     *\n     * @param {!string[]} parameters\n     *     The parameters provided for the instruction, if any.\n     */\n    this.oninstruction = null;\n\n};\n\n/**\n * The Guacamole protocol instruction opcode reserved for arbitrary internal\n * use by tunnel implementations. The value of this opcode is guaranteed to be\n * the empty string (\"\"). Tunnel implementations may use this opcode for any\n * purpose. It is currently used by the HTTP tunnel to mark the end of the HTTP\n * response, and by the WebSocket tunnel to transmit the tunnel UUID and send\n * connection stability test pings/responses.\n *\n * @constant\n * @type {!string}\n */\nGuacamole.Tunnel.INTERNAL_DATA_OPCODE = '';\n\n/**\n * All possible tunnel states.\n *\n * @type {!Object.<string, number>}\n */\nGuacamole.Tunnel.State = {\n\n    /**\n     * A connection is in pending. It is not yet known whether connection was\n     * successful.\n     * \n     * @type {!number}\n     */\n    \"CONNECTING\": 0,\n\n    /**\n     * Connection was successful, and data is being received.\n     * \n     * @type {!number}\n     */\n    \"OPEN\": 1,\n\n    /**\n     * The connection is closed. Connection may not have been successful, the\n     * tunnel may have been explicitly closed by either side, or an error may\n     * have occurred.\n     * \n     * @type {!number}\n     */\n    \"CLOSED\": 2,\n\n    /**\n     * The connection is open, but communication through the tunnel appears to\n     * be disrupted, and the connection may close as a result.\n     *\n     * @type {!number}\n     */\n    \"UNSTABLE\" : 3\n\n};\n\n/**\n * Guacamole Tunnel implemented over HTTP via XMLHttpRequest.\n * \n * @constructor\n * @augments Guacamole.Tunnel\n *\n * @param {!string} tunnelURL\n *     The URL of the HTTP tunneling service.\n *\n * @param {boolean} [crossDomain=false]\n *     Whether tunnel requests will be cross-domain, and thus must use CORS\n *     mechanisms and headers. By default, it is assumed that tunnel requests\n *     will be made to the same domain.\n *\n * @param {object} [extraTunnelHeaders={}]\n *     Key value pairs containing the header names and values of any additional\n *     headers to be sent in tunnel requests. By default, no extra headers will\n *     be added.\n */\nGuacamole.HTTPTunnel = function(tunnelURL, crossDomain, extraTunnelHeaders) {\n\n    /**\n     * Reference to this HTTP tunnel.\n     *\n     * @private\n     * @type {!Guacamole.HTTPTunnel}\n     */\n    var tunnel = this;\n\n    var TUNNEL_CONNECT = tunnelURL + \"?connect\";\n    var TUNNEL_READ    = tunnelURL + \"?read:\";\n    var TUNNEL_WRITE   = tunnelURL + \"?write:\";\n\n    var POLLING_ENABLED     = 1;\n    var POLLING_DISABLED    = 0;\n\n    // Default to polling - will be turned off automatically if not needed\n    var pollingMode = POLLING_ENABLED;\n\n    var sendingMessages = false;\n    var outputMessageBuffer = \"\";\n\n    // If requests are expected to be cross-domain, the cookie that the HTTP\n    // tunnel depends on will only be sent if withCredentials is true\n    var withCredentials = !!crossDomain;\n\n    /**\n     * The current receive timeout ID, if any.\n     *\n     * @private\n     * @type {number}\n     */\n    var receive_timeout = null;\n\n    /**\n     * The current connection stability timeout ID, if any.\n     *\n     * @private\n     * @type {number}\n     */\n    var unstableTimeout = null;\n\n    /**\n     * The current connection stability test ping interval ID, if any. This\n     * will only be set upon successful connection.\n     *\n     * @private\n     * @type {number}\n     */\n    var pingInterval = null;\n\n    /**\n     * The number of milliseconds to wait between connection stability test\n     * pings.\n     *\n     * @private\n     * @constant\n     * @type {!number}\n     */\n    var PING_FREQUENCY = 500;\n\n    /**\n     * Additional headers to be sent in tunnel requests. This dictionary can be\n     * populated with key/value header pairs to pass information such as authentication\n     * tokens, etc.\n     *\n     * @private\n     * @type {!object}\n     */\n    var extraHeaders = extraTunnelHeaders || {};\n\n    /**\n     * The name of the HTTP header containing the session token specific to the\n     * HTTP tunnel implementation.\n     *\n     * @private\n     * @constant\n     * @type {!string}\n     */\n    var TUNNEL_TOKEN_HEADER = 'Guacamole-Tunnel-Token';\n\n    /**\n     * The session token currently assigned to this HTTP tunnel. All distinct\n     * HTTP tunnel connections will have their own dedicated session token.\n     *\n     * @private\n     * @type {string}\n     */\n    var tunnelSessionToken = null;\n\n    /**\n     * Adds the configured additional headers to the given request.\n     *\n     * @private\n     * @param {!XMLHttpRequest} request\n     *     The request where the configured extra headers will be added.\n     *\n     * @param {!object} headers\n     *     The headers to be added to the request.\n     */\n    function addExtraHeaders(request, headers) {\n        for (var name in headers) {\n            request.setRequestHeader(name, headers[name]);\n        }\n    }\n\n    /**\n     * Initiates a timeout which, if data is not received, causes the tunnel\n     * to close with an error.\n     * \n     * @private\n     */\n    function reset_timeout() {\n\n        // Get rid of old timeouts (if any)\n        window.clearTimeout(receive_timeout);\n        window.clearTimeout(unstableTimeout);\n\n        // Clear unstable status\n        if (tunnel.state === Guacamole.Tunnel.State.UNSTABLE)\n            tunnel.setState(Guacamole.Tunnel.State.OPEN);\n\n        // Set new timeout for tracking overall connection timeout\n        receive_timeout = window.setTimeout(function () {\n            close_tunnel(new Guacamole.Status(Guacamole.Status.Code.UPSTREAM_TIMEOUT, \"Server timeout.\"));\n        }, tunnel.receiveTimeout);\n\n        // Set new timeout for tracking suspected connection instability\n        unstableTimeout = window.setTimeout(function() {\n            tunnel.setState(Guacamole.Tunnel.State.UNSTABLE);\n        }, tunnel.unstableThreshold);\n\n    }\n\n    /**\n     * Closes this tunnel, signaling the given status and corresponding\n     * message, which will be sent to the onerror handler if the status is\n     * an error status.\n     * \n     * @private\n     * @param {!Guacamole.Status} status\n     *     The status causing the connection to close;\n     */\n    function close_tunnel(status) {\n\n        // Get rid of old timeouts (if any)\n        window.clearTimeout(receive_timeout);\n        window.clearTimeout(unstableTimeout);\n\n        // Cease connection test pings\n        window.clearInterval(pingInterval);\n\n        // Ignore if already closed\n        if (tunnel.state === Guacamole.Tunnel.State.CLOSED)\n            return;\n\n        // If connection closed abnormally, signal error.\n        if (status.code !== Guacamole.Status.Code.SUCCESS && tunnel.onerror) {\n\n            // Ignore RESOURCE_NOT_FOUND if we've already connected, as that\n            // only signals end-of-stream for the HTTP tunnel.\n            if (tunnel.state === Guacamole.Tunnel.State.CONNECTING\n                    || status.code !== Guacamole.Status.Code.RESOURCE_NOT_FOUND)\n                tunnel.onerror(status);\n\n        }\n\n        // Reset output message buffer\n        sendingMessages = false;\n\n        // Mark as closed\n        tunnel.setState(Guacamole.Tunnel.State.CLOSED);\n\n    }\n\n\n    this.sendMessage = function() {\n\n        // Do not attempt to send messages if not connected\n        if (!tunnel.isConnected())\n            return;\n\n        // Do not attempt to send empty messages\n        if (arguments.length === 0)\n            return;\n\n        /**\n         * Converts the given value to a length/string pair for use as an\n         * element in a Guacamole instruction.\n         * \n         * @private\n         * @param value\n         *     The value to convert.\n         *\n         * @return {!string}\n         *     The converted value.\n         */\n        function getElement(value) {\n            var string = new String(value);\n            return string.length + \".\" + string; \n        }\n\n        // Initialized message with first element\n        var message = getElement(arguments[0]);\n\n        // Append remaining elements\n        for (var i=1; i<arguments.length; i++)\n            message += \",\" + getElement(arguments[i]);\n\n        // Final terminator\n        message += \";\";\n\n        // Add message to buffer\n        outputMessageBuffer += message;\n\n        // Send if not currently sending\n        if (!sendingMessages)\n            sendPendingMessages();\n\n    };\n\n    function sendPendingMessages() {\n\n        // Do not attempt to send messages if not connected\n        if (!tunnel.isConnected())\n            return;\n\n        if (outputMessageBuffer.length > 0) {\n\n            sendingMessages = true;\n\n            var message_xmlhttprequest = new XMLHttpRequest();\n            message_xmlhttprequest.open(\"POST\", TUNNEL_WRITE + tunnel.uuid);\n            message_xmlhttprequest.withCredentials = withCredentials;\n            addExtraHeaders(message_xmlhttprequest, extraHeaders);\n            message_xmlhttprequest.setRequestHeader(\"Content-type\", \"application/octet-stream\");\n            message_xmlhttprequest.setRequestHeader(TUNNEL_TOKEN_HEADER, tunnelSessionToken);\n\n            // Once response received, send next queued event.\n            message_xmlhttprequest.onreadystatechange = function() {\n                if (message_xmlhttprequest.readyState === 4) {\n\n                    reset_timeout();\n\n                    // If an error occurs during send, handle it\n                    if (message_xmlhttprequest.status !== 200)\n                        handleHTTPTunnelError(message_xmlhttprequest);\n\n                    // Otherwise, continue the send loop\n                    else\n                        sendPendingMessages();\n\n                }\n            };\n\n            message_xmlhttprequest.send(outputMessageBuffer);\n            outputMessageBuffer = \"\"; // Clear buffer\n\n        }\n        else\n            sendingMessages = false;\n\n    }\n\n    function handleHTTPTunnelError(xmlhttprequest) {\n\n        // Pull status code directly from headers provided by Guacamole\n        var code = parseInt(xmlhttprequest.getResponseHeader(\"Guacamole-Status-Code\"));\n        if (code) {\n            var message = xmlhttprequest.getResponseHeader(\"Guacamole-Error-Message\");\n            close_tunnel(new Guacamole.Status(code, message));\n        }\n\n        // Failing that, derive a Guacamole status code from the HTTP status\n        // code provided by the browser\n        else if (xmlhttprequest.status)\n            close_tunnel(new Guacamole.Status(\n                Guacamole.Status.Code.fromHTTPCode(xmlhttprequest.status),\n                    xmlhttprequest.statusText));\n\n        // Otherwise, assume server is unreachable\n        else\n            close_tunnel(new Guacamole.Status(Guacamole.Status.Code.UPSTREAM_NOT_FOUND));\n\n    }\n\n    function handleResponse(xmlhttprequest) {\n\n        var interval = null;\n        var nextRequest = null;\n\n        var dataUpdateEvents = 0;\n\n        // The location of the last element's terminator\n        var elementEnd = -1;\n\n        // Where to start the next length search or the next element\n        var startIndex = 0;\n\n        // Parsed elements\n        var elements = new Array();\n\n        function parseResponse() {\n\n            // Do not handle responses if not connected\n            if (!tunnel.isConnected()) {\n                \n                // Clean up interval if polling\n                if (interval !== null)\n                    clearInterval(interval);\n                \n                return;\n            }\n\n            // Do not parse response yet if not ready\n            if (xmlhttprequest.readyState < 2) return;\n\n            // Attempt to read status\n            var status;\n            try { status = xmlhttprequest.status; }\n\n            // If status could not be read, assume successful.\n            catch (e) { status = 200; }\n\n            // Start next request as soon as possible IF request was successful\n            if (!nextRequest && status === 200)\n                nextRequest = makeRequest();\n\n            // Parse stream when data is received and when complete.\n            if (xmlhttprequest.readyState === 3 ||\n                xmlhttprequest.readyState === 4) {\n\n                reset_timeout();\n\n                // Also poll every 30ms (some browsers don't repeatedly call onreadystatechange for new data)\n                if (pollingMode === POLLING_ENABLED) {\n                    if (xmlhttprequest.readyState === 3 && !interval)\n                        interval = setInterval(parseResponse, 30);\n                    else if (xmlhttprequest.readyState === 4 && interval)\n                        clearInterval(interval);\n                }\n\n                // If canceled, stop transfer\n                if (xmlhttprequest.status === 0) {\n                    tunnel.disconnect();\n                    return;\n                }\n\n                // Halt on error during request\n                else if (xmlhttprequest.status !== 200) {\n                    handleHTTPTunnelError(xmlhttprequest);\n                    return;\n                }\n\n                // Attempt to read in-progress data\n                var current;\n                try { current = xmlhttprequest.responseText; }\n\n                // Do not attempt to parse if data could not be read\n                catch (e) { return; }\n\n                // While search is within currently received data\n                while (elementEnd < current.length) {\n\n                    // If we are waiting for element data\n                    if (elementEnd >= startIndex) {\n\n                        // We now have enough data for the element. Parse.\n                        var element = current.substring(startIndex, elementEnd);\n                        var terminator = current.substring(elementEnd, elementEnd+1);\n\n                        // Add element to array\n                        elements.push(element);\n\n                        // If last element, handle instruction\n                        if (terminator === \";\") {\n\n                            // Get opcode\n                            var opcode = elements.shift();\n\n                            // Call instruction handler.\n                            if (tunnel.oninstruction)\n                                tunnel.oninstruction(opcode, elements);\n\n                            // Clear elements\n                            elements.length = 0;\n\n                        }\n\n                        // Start searching for length at character after\n                        // element terminator\n                        startIndex = elementEnd + 1;\n\n                    }\n\n                    // Search for end of length\n                    var lengthEnd = current.indexOf(\".\", startIndex);\n                    if (lengthEnd !== -1) {\n\n                        // Parse length\n                        var length = parseInt(current.substring(elementEnd+1, lengthEnd));\n\n                        // If we're done parsing, handle the next response.\n                        if (length === 0) {\n\n                            // Clean up interval if polling\n                            if (interval)\n                                clearInterval(interval);\n                           \n                            // Clean up object\n                            xmlhttprequest.onreadystatechange = null;\n                            xmlhttprequest.abort();\n\n                            // Start handling next request\n                            if (nextRequest)\n                                handleResponse(nextRequest);\n\n                            // Done parsing\n                            break;\n\n                        }\n\n                        // Calculate start of element\n                        startIndex = lengthEnd + 1;\n\n                        // Calculate location of element terminator\n                        elementEnd = startIndex + length;\n\n                    }\n                    \n                    // If no period yet, continue search when more data\n                    // is received\n                    else {\n                        startIndex = current.length;\n                        break;\n                    }\n\n                } // end parse loop\n\n            }\n\n        }\n\n        // If response polling enabled, attempt to detect if still\n        // necessary (via wrapping parseResponse())\n        if (pollingMode === POLLING_ENABLED) {\n            xmlhttprequest.onreadystatechange = function() {\n\n                // If we receive two or more readyState==3 events,\n                // there is no need to poll.\n                if (xmlhttprequest.readyState === 3) {\n                    dataUpdateEvents++;\n                    if (dataUpdateEvents >= 2) {\n                        pollingMode = POLLING_DISABLED;\n                        xmlhttprequest.onreadystatechange = parseResponse;\n                    }\n                }\n\n                parseResponse();\n            };\n        }\n\n        // Otherwise, just parse\n        else\n            xmlhttprequest.onreadystatechange = parseResponse;\n\n        parseResponse();\n\n    }\n\n    /**\n     * Arbitrary integer, unique for each tunnel read request.\n     * @private\n     */\n    var request_id = 0;\n\n    function makeRequest() {\n\n        // Make request, increment request ID\n        var xmlhttprequest = new XMLHttpRequest();\n        xmlhttprequest.open(\"GET\", TUNNEL_READ + tunnel.uuid + \":\" + (request_id++));\n        xmlhttprequest.setRequestHeader(TUNNEL_TOKEN_HEADER, tunnelSessionToken);\n        xmlhttprequest.withCredentials = withCredentials;\n        addExtraHeaders(xmlhttprequest, extraHeaders);\n        xmlhttprequest.send(null);\n\n        return xmlhttprequest;\n\n    }\n\n    this.connect = function(data) {\n\n        // Start waiting for connect\n        reset_timeout();\n\n        // Mark the tunnel as connecting\n        tunnel.setState(Guacamole.Tunnel.State.CONNECTING);\n\n        // Start tunnel and connect\n        var connect_xmlhttprequest = new XMLHttpRequest();\n        connect_xmlhttprequest.onreadystatechange = function() {\n\n            if (connect_xmlhttprequest.readyState !== 4)\n                return;\n\n            // If failure, throw error\n            if (connect_xmlhttprequest.status !== 200) {\n                handleHTTPTunnelError(connect_xmlhttprequest);\n                return;\n            }\n\n            reset_timeout();\n\n            // Get UUID and HTTP-specific tunnel session token from response\n            tunnel.setUUID(connect_xmlhttprequest.responseText);\n            tunnelSessionToken = connect_xmlhttprequest.getResponseHeader(TUNNEL_TOKEN_HEADER);\n\n            // Fail connect attempt if token is not successfully assigned\n            if (!tunnelSessionToken) {\n                close_tunnel(new Guacamole.Status(Guacamole.Status.Code.UPSTREAM_NOT_FOUND));\n                return;\n            }\n\n            // Mark as open\n            tunnel.setState(Guacamole.Tunnel.State.OPEN);\n\n            // Ping tunnel endpoint regularly to test connection stability\n            pingInterval = setInterval(function sendPing() {\n                tunnel.sendMessage(\"nop\");\n            }, PING_FREQUENCY);\n\n            // Start reading data\n            handleResponse(makeRequest());\n\n        };\n\n        connect_xmlhttprequest.open(\"POST\", TUNNEL_CONNECT, true);\n        connect_xmlhttprequest.withCredentials = withCredentials;\n        addExtraHeaders(connect_xmlhttprequest, extraHeaders);\n        connect_xmlhttprequest.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded; charset=UTF-8\");\n        connect_xmlhttprequest.send(data);\n\n    };\n\n    this.disconnect = function() {\n        close_tunnel(new Guacamole.Status(Guacamole.Status.Code.SUCCESS, \"Manually closed.\"));\n    };\n\n};\n\nGuacamole.HTTPTunnel.prototype = new Guacamole.Tunnel();\n\n/**\n * Guacamole Tunnel implemented over WebSocket via XMLHttpRequest.\n * \n * @constructor\n * @augments Guacamole.Tunnel\n * @param {!string} tunnelURL\n *     The URL of the WebSocket tunneling service.\n */\nGuacamole.WebSocketTunnel = function(tunnelURL) {\n\n    /**\n     * Reference to this WebSocket tunnel.\n     *\n     * @private\n     * @type {Guacamole.WebSocketTunnel}\n     */\n    var tunnel = this;\n\n    /**\n     * The WebSocket used by this tunnel.\n     * \n     * @private\n     * @type {WebSocket}\n     */\n    var socket = null;\n\n    /**\n     * The current receive timeout ID, if any.\n     *\n     * @private\n     * @type {number}\n     */\n    var receive_timeout = null;\n\n    /**\n     * The current connection stability timeout ID, if any.\n     *\n     * @private\n     * @type {number}\n     */\n    var unstableTimeout = null;\n\n    /**\n     * The current connection stability test ping interval ID, if any. This\n     * will only be set upon successful connection.\n     *\n     * @private\n     * @type {number}\n     */\n    var pingInterval = null;\n\n    /**\n     * The WebSocket protocol corresponding to the protocol used for the current\n     * location.\n     *\n     * @private\n     * @type {!Object.<string, string>}\n     */\n    var ws_protocol = {\n        \"http:\":  \"ws:\",\n        \"https:\": \"wss:\"\n    };\n\n    /**\n     * The number of milliseconds to wait between connection stability test\n     * pings.\n     *\n     * @private\n     * @constant\n     * @type {!number}\n     */\n    var PING_FREQUENCY = 500;\n\n    // Transform current URL to WebSocket URL\n\n    // If not already a websocket URL\n    if (   tunnelURL.substring(0, 3) !== \"ws:\"\n        && tunnelURL.substring(0, 4) !== \"wss:\") {\n\n        var protocol = ws_protocol[window.location.protocol];\n\n        // If absolute URL, convert to absolute WS URL\n        if (tunnelURL.substring(0, 1) === \"/\")\n            tunnelURL =\n                protocol\n                + \"//\" + window.location.host\n                + tunnelURL;\n\n        // Otherwise, construct absolute from relative URL\n        else {\n\n            // Get path from pathname\n            var slash = window.location.pathname.lastIndexOf(\"/\");\n            var path  = window.location.pathname.substring(0, slash + 1);\n\n            // Construct absolute URL\n            tunnelURL =\n                protocol\n                + \"//\" + window.location.host\n                + path\n                + tunnelURL;\n\n        }\n\n    }\n\n    /**\n     * Initiates a timeout which, if data is not received, causes the tunnel\n     * to close with an error.\n     * \n     * @private\n     */\n    function reset_timeout() {\n\n        // Get rid of old timeouts (if any)\n        window.clearTimeout(receive_timeout);\n        window.clearTimeout(unstableTimeout);\n\n        // Clear unstable status\n        if (tunnel.state === Guacamole.Tunnel.State.UNSTABLE)\n            tunnel.setState(Guacamole.Tunnel.State.OPEN);\n\n        // Set new timeout for tracking overall connection timeout\n        receive_timeout = window.setTimeout(function () {\n            close_tunnel(new Guacamole.Status(Guacamole.Status.Code.UPSTREAM_TIMEOUT, \"Server timeout.\"));\n        }, tunnel.receiveTimeout);\n\n        // Set new timeout for tracking suspected connection instability\n        unstableTimeout = window.setTimeout(function() {\n            tunnel.setState(Guacamole.Tunnel.State.UNSTABLE);\n        }, tunnel.unstableThreshold);\n\n    }\n\n    /**\n     * Closes this tunnel, signaling the given status and corresponding\n     * message, which will be sent to the onerror handler if the status is\n     * an error status.\n     * \n     * @private\n     * @param {!Guacamole.Status} status\n     *     The status causing the connection to close;\n     */\n    function close_tunnel(status) {\n\n        // Get rid of old timeouts (if any)\n        window.clearTimeout(receive_timeout);\n        window.clearTimeout(unstableTimeout);\n\n        // Cease connection test pings\n        window.clearInterval(pingInterval);\n\n        // Ignore if already closed\n        if (tunnel.state === Guacamole.Tunnel.State.CLOSED)\n            return;\n\n        // If connection closed abnormally, signal error.\n        if (status.code !== Guacamole.Status.Code.SUCCESS && tunnel.onerror)\n            tunnel.onerror(status);\n\n        // Mark as closed\n        tunnel.setState(Guacamole.Tunnel.State.CLOSED);\n\n        socket.close();\n\n    }\n\n    this.sendMessage = function(elements) {\n\n        // Do not attempt to send messages if not connected\n        if (!tunnel.isConnected())\n            return;\n\n        // Do not attempt to send empty messages\n        if (arguments.length === 0)\n            return;\n\n        /**\n         * Converts the given value to a length/string pair for use as an\n         * element in a Guacamole instruction.\n         * \n         * @private\n         * @param {*} value\n         *     The value to convert.\n         *\n         * @return {!string}\n         *     The converted value.\n         */\n        function getElement(value) {\n            var string = new String(value);\n            return string.length + \".\" + string; \n        }\n\n        // Initialized message with first element\n        var message = getElement(arguments[0]);\n\n        // Append remaining elements\n        for (var i=1; i<arguments.length; i++)\n            message += \",\" + getElement(arguments[i]);\n\n        // Final terminator\n        message += \";\";\n\n        socket.send(message);\n\n    };\n\n    this.connect = function(data) {\n\n        reset_timeout();\n\n        // Mark the tunnel as connecting\n        tunnel.setState(Guacamole.Tunnel.State.CONNECTING);\n\n        // Connect socket\n        socket = new WebSocket(tunnelURL + \"?\" + data, \"guacamole\");\n\n        socket.onopen = function(event) {\n            reset_timeout();\n\n            // Ping tunnel endpoint regularly to test connection stability\n            pingInterval = setInterval(function sendPing() {\n                tunnel.sendMessage(Guacamole.Tunnel.INTERNAL_DATA_OPCODE,\n                    \"ping\", new Date().getTime());\n            }, PING_FREQUENCY);\n\n        };\n\n        socket.onclose = function(event) {\n\n            // Pull status code directly from closure reason provided by Guacamole\n            if (event.reason)\n                close_tunnel(new Guacamole.Status(parseInt(event.reason), event.reason));\n\n            // Failing that, derive a Guacamole status code from the WebSocket\n            // status code provided by the browser\n            else if (event.code)\n                close_tunnel(new Guacamole.Status(Guacamole.Status.Code.fromWebSocketCode(event.code)));\n\n            // Otherwise, assume server is unreachable\n            else\n                close_tunnel(new Guacamole.Status(Guacamole.Status.Code.UPSTREAM_NOT_FOUND));\n\n        };\n        \n        socket.onmessage = function(event) {\n\n            reset_timeout();\n\n            var message = event.data;\n            var startIndex = 0;\n            var elementEnd;\n\n            var elements = [];\n\n            do {\n\n                // Search for end of length\n                var lengthEnd = message.indexOf(\".\", startIndex);\n                if (lengthEnd !== -1) {\n\n                    // Parse length\n                    var length = parseInt(message.substring(elementEnd+1, lengthEnd));\n\n                    // Calculate start of element\n                    startIndex = lengthEnd + 1;\n\n                    // Calculate location of element terminator\n                    elementEnd = startIndex + length;\n\n                }\n                \n                // If no period, incomplete instruction.\n                else\n                    close_tunnel(new Guacamole.Status(Guacamole.Status.Code.SERVER_ERROR, \"Incomplete instruction.\"));\n\n                // We now have enough data for the element. Parse.\n                var element = message.substring(startIndex, elementEnd);\n                var terminator = message.substring(elementEnd, elementEnd+1);\n\n                // Add element to array\n                elements.push(element);\n\n                // If last element, handle instruction\n                if (terminator === \";\") {\n\n                    // Get opcode\n                    var opcode = elements.shift();\n\n                    // Update state and UUID when first instruction received\n                    if (tunnel.uuid === null) {\n\n                        // Associate tunnel UUID if received\n                        if (opcode === Guacamole.Tunnel.INTERNAL_DATA_OPCODE)\n                            tunnel.setUUID(elements[0]);\n\n                        // Tunnel is now open and UUID is available\n                        tunnel.setState(Guacamole.Tunnel.State.OPEN);\n\n                    }\n\n                    // Call instruction handler.\n                    if (opcode !== Guacamole.Tunnel.INTERNAL_DATA_OPCODE && tunnel.oninstruction)\n                        tunnel.oninstruction(opcode, elements);\n\n                    // Clear elements\n                    elements.length = 0;\n\n                }\n\n                // Start searching for length at character after\n                // element terminator\n                startIndex = elementEnd + 1;\n\n            } while (startIndex < message.length);\n\n        };\n\n    };\n\n    this.disconnect = function() {\n        close_tunnel(new Guacamole.Status(Guacamole.Status.Code.SUCCESS, \"Manually closed.\"));\n    };\n\n};\n\nGuacamole.WebSocketTunnel.prototype = new Guacamole.Tunnel();\n\n/**\n * Guacamole Tunnel which cycles between all specified tunnels until\n * no tunnels are left. Another tunnel is used if an error occurs but\n * no instructions have been received. If an instruction has been\n * received, or no tunnels remain, the error is passed directly out\n * through the onerror handler (if defined).\n * \n * @constructor\n * @augments Guacamole.Tunnel\n * @param {...Guacamole.Tunnel} tunnelChain\n *     The tunnels to use, in order of priority.\n */\nGuacamole.ChainedTunnel = function(tunnelChain) {\n\n    /**\n     * Reference to this chained tunnel.\n     * @private\n     */\n    var chained_tunnel = this;\n\n    /**\n     * Data passed in via connect(), to be used for\n     * wrapped calls to other tunnels' connect() functions.\n     * @private\n     */\n    var connect_data;\n\n    /**\n     * Array of all tunnels passed to this ChainedTunnel through the\n     * constructor arguments.\n     * @private\n     */\n    var tunnels = [];\n\n    /**\n     * The tunnel committed via commit_tunnel(), if any, or null if no tunnel\n     * has yet been committed.\n     *\n     * @private\n     * @type {Guacamole.Tunnel}\n     */\n    var committedTunnel = null;\n\n    // Load all tunnels into array\n    for (var i=0; i<arguments.length; i++)\n        tunnels.push(arguments[i]);\n\n    /**\n     * Sets the current tunnel.\n     * \n     * @private\n     * @param {!Guacamole.Tunnel} tunnel\n     *     The tunnel to set as the current tunnel.\n     */\n    function attach(tunnel) {\n\n        // Set own functions to tunnel's functions\n        chained_tunnel.disconnect  = tunnel.disconnect;\n        chained_tunnel.sendMessage = tunnel.sendMessage;\n\n        /**\n         * Fails the currently-attached tunnel, attaching a new tunnel if\n         * possible.\n         *\n         * @private\n         * @param {Guacamole.Status} [status]\n         *     An object representing the failure that occured in the\n         *     currently-attached tunnel, if known.\n         *\n         * @return {Guacamole.Tunnel}\n         *     The next tunnel, or null if there are no more tunnels to try or\n         *     if no more tunnels should be tried.\n         */\n        var failTunnel = function failTunnel(status) {\n\n            // Do not attempt to continue using next tunnel on server timeout\n            if (status && status.code === Guacamole.Status.Code.UPSTREAM_TIMEOUT) {\n                tunnels = [];\n                return null;\n            }\n\n            // Get next tunnel\n            var next_tunnel = tunnels.shift();\n\n            // If there IS a next tunnel, try using it.\n            if (next_tunnel) {\n                tunnel.onerror = null;\n                tunnel.oninstruction = null;\n                tunnel.onstatechange = null;\n                attach(next_tunnel);\n            }\n\n            return next_tunnel;\n\n        };\n\n        /**\n         * Use the current tunnel from this point forward. Do not try any more\n         * tunnels, even if the current tunnel fails.\n         * \n         * @private\n         */\n        function commit_tunnel() {\n\n            tunnel.onstatechange = chained_tunnel.onstatechange;\n            tunnel.oninstruction = chained_tunnel.oninstruction;\n            tunnel.onerror = chained_tunnel.onerror;\n            tunnel.onuuid = chained_tunnel.onuuid;\n\n            // Assign UUID if already known\n            if (tunnel.uuid)\n                chained_tunnel.setUUID(tunnel.uuid);\n\n            committedTunnel = tunnel;\n\n        }\n\n        // Wrap own onstatechange within current tunnel\n        tunnel.onstatechange = function(state) {\n\n            switch (state) {\n\n                // If open, use this tunnel from this point forward.\n                case Guacamole.Tunnel.State.OPEN:\n                    commit_tunnel();\n                    if (chained_tunnel.onstatechange)\n                        chained_tunnel.onstatechange(state);\n                    break;\n\n                // If closed, mark failure, attempt next tunnel\n                case Guacamole.Tunnel.State.CLOSED:\n                    if (!failTunnel() && chained_tunnel.onstatechange)\n                        chained_tunnel.onstatechange(state);\n                    break;\n                \n            }\n\n        };\n\n        // Wrap own oninstruction within current tunnel\n        tunnel.oninstruction = function(opcode, elements) {\n\n            // Accept current tunnel\n            commit_tunnel();\n\n            // Invoke handler\n            if (chained_tunnel.oninstruction)\n                chained_tunnel.oninstruction(opcode, elements);\n\n        };\n\n        // Attach next tunnel on error\n        tunnel.onerror = function(status) {\n\n            // Mark failure, attempt next tunnel\n            if (!failTunnel(status) && chained_tunnel.onerror)\n                chained_tunnel.onerror(status);\n\n        };\n\n        // Attempt connection\n        tunnel.connect(connect_data);\n        \n    }\n\n    this.connect = function(data) {\n       \n        // Remember connect data\n        connect_data = data;\n\n        // Get committed tunnel if exists or the first tunnel on the list\n        var next_tunnel = committedTunnel ? committedTunnel : tunnels.shift();\n\n        // Attach first tunnel\n        if (next_tunnel)\n            attach(next_tunnel);\n\n        // If there IS no first tunnel, error\n        else if (chained_tunnel.onerror)\n            chained_tunnel.onerror(Guacamole.Status.Code.SERVER_ERROR, \"No tunnels to try.\");\n\n    };\n    \n};\n\nGuacamole.ChainedTunnel.prototype = new Guacamole.Tunnel();\n\n/**\n * Guacamole Tunnel which replays a Guacamole protocol dump from a static file\n * received via HTTP. Instructions within the file are parsed and handled as\n * quickly as possible, while the file is being downloaded.\n *\n * @constructor\n * @augments Guacamole.Tunnel\n * @param {!string} url\n *     The URL of a Guacamole protocol dump.\n *\n * @param {boolean} [crossDomain=false]\n *     Whether tunnel requests will be cross-domain, and thus must use CORS\n *     mechanisms and headers. By default, it is assumed that tunnel requests\n *     will be made to the same domain.\n *\n * @param {object} [extraTunnelHeaders={}]\n *     Key value pairs containing the header names and values of any additional\n *     headers to be sent in tunnel requests. By default, no extra headers will\n *     be added.\n */\nGuacamole.StaticHTTPTunnel = function StaticHTTPTunnel(url, crossDomain, extraTunnelHeaders) {\n\n    /**\n     * Reference to this Guacamole.StaticHTTPTunnel.\n     *\n     * @private\n     */\n    var tunnel = this;\n\n    /**\n     * The current, in-progress HTTP request. If no request is currently in\n     * progress, this will be null.\n     *\n     * @private\n     * @type {XMLHttpRequest}\n     */\n    var xhr = null;\n\n    /**\n     * Additional headers to be sent in tunnel requests. This dictionary can be\n     * populated with key/value header pairs to pass information such as authentication\n     * tokens, etc.\n     *\n     * @private\n     * @type {!object}\n     */\n    var extraHeaders = extraTunnelHeaders || {};\n\n    /**\n     * Adds the configured additional headers to the given request.\n     *\n     * @param {!XMLHttpRequest} request\n     *     The request where the configured extra headers will be added.\n     *\n     * @param {!object} headers\n     *     The headers to be added to the request.\n     *\n     * @private\n     */\n    function addExtraHeaders(request, headers) {\n        for (var name in headers) {\n            request.setRequestHeader(name, headers[name]);\n        }\n    }\n\n    this.sendMessage = function sendMessage(elements) {\n        // Do nothing\n    };\n\n    this.connect = function connect(data) {\n\n        // Ensure any existing connection is killed\n        tunnel.disconnect();\n\n        // Connection is now starting\n        tunnel.setState(Guacamole.Tunnel.State.CONNECTING);\n\n        // Start a new connection\n        xhr = new XMLHttpRequest();\n        xhr.open('GET', url);\n        xhr.withCredentials = !!crossDomain;\n        addExtraHeaders(xhr, extraHeaders);\n        xhr.responseType = 'text';\n        xhr.send(null);\n\n        var offset = 0;\n\n        // Create Guacamole protocol parser specifically for this connection\n        var parser = new Guacamole.Parser();\n\n        // Invoke tunnel's oninstruction handler for each parsed instruction\n        parser.oninstruction = function instructionReceived(opcode, args) {\n            if (tunnel.oninstruction)\n                tunnel.oninstruction(opcode, args);\n        };\n\n        // Continuously parse received data\n        xhr.onreadystatechange = function readyStateChanged() {\n\n            // Parse while data is being received\n            if (xhr.readyState === 3 || xhr.readyState === 4) {\n\n                // Connection is open\n                tunnel.setState(Guacamole.Tunnel.State.OPEN);\n\n                var buffer = xhr.responseText;\n                var length = buffer.length;\n\n                // Parse only the portion of data which is newly received\n                if (offset < length) {\n                    parser.receive(buffer.substring(offset));\n                    offset = length;\n                }\n\n            }\n\n            // Clean up and close when done\n            if (xhr.readyState === 4)\n                tunnel.disconnect();\n\n        };\n\n        // Reset state and close upon error\n        xhr.onerror = function httpError() {\n\n            // Fail if file could not be downloaded via HTTP\n            if (tunnel.onerror)\n                tunnel.onerror(new Guacamole.Status(\n                    Guacamole.Status.Code.fromHTTPCode(xhr.status), xhr.statusText));\n\n            tunnel.disconnect();\n        };\n\n    };\n\n    this.disconnect = function disconnect() {\n\n        // Abort and dispose of XHR if a request is in progress\n        if (xhr) {\n            xhr.abort();\n            xhr = null;\n        }\n\n        // Connection is now closed\n        tunnel.setState(Guacamole.Tunnel.State.CLOSED);\n\n    };\n\n};\n\nGuacamole.StaticHTTPTunnel.prototype = new Guacamole.Tunnel();\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar Guacamole = Guacamole || {};\n\n/**\n * The unique ID of this version of the Guacamole JavaScript API. This ID will\n * be the version string of the guacamole-common-js Maven project, and can be\n * used in downstream applications as a sanity check that the proper version\n * of the APIs is being used (in case an older version is cached, for example).\n *\n * @type {!string}\n */\nGuacamole.API_VERSION = \"1.4.0\";\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar Guacamole = Guacamole || {};\n\n/**\n * Abstract video player which accepts, queues and plays back arbitrary video\n * data. It is up to implementations of this class to provide some means of\n * handling a provided Guacamole.InputStream and rendering the received data to\n * the provided Guacamole.Display.VisibleLayer. Data received along the\n * provided stream is to be played back immediately.\n *\n * @constructor\n */\nGuacamole.VideoPlayer = function VideoPlayer() {\n\n    /**\n     * Notifies this Guacamole.VideoPlayer that all video up to the current\n     * point in time has been given via the underlying stream, and that any\n     * difference in time between queued video data and the current time can be\n     * considered latency.\n     */\n    this.sync = function sync() {\n        // Default implementation - do nothing\n    };\n\n};\n\n/**\n * Determines whether the given mimetype is supported by any built-in\n * implementation of Guacamole.VideoPlayer, and thus will be properly handled\n * by Guacamole.VideoPlayer.getInstance().\n *\n * @param {!string} mimetype\n *     The mimetype to check.\n *\n * @returns {!boolean}\n *     true if the given mimetype is supported by any built-in\n *     Guacamole.VideoPlayer, false otherwise.\n */\nGuacamole.VideoPlayer.isSupportedType = function isSupportedType(mimetype) {\n\n    // There are currently no built-in video players (and therefore no\n    // supported types)\n    return false;\n\n};\n\n/**\n * Returns a list of all mimetypes supported by any built-in\n * Guacamole.VideoPlayer, in rough order of priority. Beware that only the core\n * mimetypes themselves will be listed. Any mimetype parameters, even required\n * ones, will not be included in the list.\n *\n * @returns {!string[]}\n *     A list of all mimetypes supported by any built-in Guacamole.VideoPlayer,\n *     excluding any parameters.\n */\nGuacamole.VideoPlayer.getSupportedTypes = function getSupportedTypes() {\n\n    // There are currently no built-in video players (and therefore no\n    // supported types)\n    return [];\n\n};\n\n/**\n * Returns an instance of Guacamole.VideoPlayer providing support for the given\n * video format. If support for the given video format is not available, null\n * is returned.\n *\n * @param {!Guacamole.InputStream} stream\n *     The Guacamole.InputStream to read video data from.\n *\n * @param {!Guacamole.Display.VisibleLayer} layer\n *     The destination layer in which this Guacamole.VideoPlayer should play\n *     the received video data.\n *\n * @param {!string} mimetype\n *     The mimetype of the video data in the provided stream.\n *\n * @return {Guacamole.VideoPlayer}\n *     A Guacamole.VideoPlayer instance supporting the given mimetype and\n *     reading from the given stream, or null if support for the given mimetype\n *     is absent.\n */\nGuacamole.VideoPlayer.getInstance = function getInstance(stream, layer, mimetype) {\n\n    // There are currently no built-in video players\n    return null;\n\n};\n"]}